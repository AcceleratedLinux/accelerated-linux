# UTM400

source [find tools/openocd/platforms/kirkwood/88f6281.tcl]

proc utm400_init { } {

	88f6281_init

	# setup dram
	#dram_400
	dram_667

	# IRQ setup
	mww 0xD0020204 0x00000000 #  Main IRQ Interrupt Mask Register
	mww 0xD0020208 0x00000000 #              "

	# Multi purpose pin setup
	mww 0xD0010000 0x01111111 #  MPP  0 to 7
	mww 0xD0010004 0x20003300 #  MPP  8 to 15
	mww 0xD0010008 0x33331102 #  MPP 16 to 23
	mww 0xD001000c 0x33003333 #  MPP 24 to 31
	mww 0xD0010010 0x00000033 #  MPP 32 to 39
	mww 0xD0010014 0x00000000 #  MPP 40 to 47
	mww 0xD0010018 0x00000000 #  MPP 48 to 49

	mww 0xD0010104 0x00000000 #  GPIO low all outputs
	mww 0xD0010144 0x00006b00 #  GPIO high all outputs

	# enable USB and PCIE
	# mww 0xD0010140 0x00008400

	# proper settings
	mww 0xD0010418 0x000a028f #  NAND Read Parameters REgister
	mww 0xD001041C 0x00010305 #  NAND Write Parameters Register
	##mww 0xD0010470 0x01C7C741 #  NAND Flash Control Register
	mww 0xD0010470 0x00C7C741 #  NAND Flash Control Register
}

proc utm400_set_led { led {mode on} } {
	switch $led {
	D2 {set bit 12}
	D3 {set bit 13}
	D4 {set bit 28}
	D5 {set bit 29}
	D6 {set bit 36}
	D7 {set bit 37}
	D8 {set bit 38}

	Online {set bit 12}
	Dial   {set bit 13}
	VPN    {set bit 28}
	WAN1   {set bit 29}
	WAN2   {set bit 36}
	LAN    {set bit 37}
	USB    {set bit 38}
	USBEN  {set bit 42}
	}
	set addr 0xD0010100
	if {$bit >= 32} {
		set bit [expr $bit - 32]
		set addr [expr $addr + 0x40]
	}
	set val [mrw $addr]
	if {$mode == "on"} {
		set val [expr $val & ~(1 << $bit)]
	} else {
		set val [expr $val | (1 << $bit)]
	}
	mww $addr $val
}

proc utm400_test_leds { } {
	puts "All LED's off"
	foreach led {D2 D3 D4 D5 D6 D7 D8} {
		utm400_set_led $led off
	}
	sleep 1000
	puts "All LED's on"
	foreach led {D2 D3 D4 D5 D6 D7 D8} {
		utm400_set_led $led on
	}
	sleep 1000
	puts "All LED's off"
	foreach led {D2 D3 D4 D5 D6 D7 D8} {
		utm400_set_led $led off
	}
	sleep 1000
	puts "All LED's flash (4 times)"
	foreach led {D2 D3 D4 D5 D6 D7 D8} {
		puts "$led ..."
		foreach mode {on off on off on off on off} {
			utm400_set_led $led $mode
			sleep 300
		}
	}
}

proc utm400_load_uboot { } {
	# load u-Boot into RAM and execute it
	uart_init
	load_image u-boot/u-boot
	resume 0x00600000
}

init
utm400_init
utm400_load_uboot

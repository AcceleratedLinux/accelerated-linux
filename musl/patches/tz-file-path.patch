--- musl-1.2.0/src/time/__tz.c.orig	2020-02-21 10:37:02.000000000 +1000
+++ musl-1.2.0/src/time/__tz.c	2020-03-31 15:56:34.726113470 +1000
@@ -6,6 +6,7 @@
 #include <sys/mman.h>
 #include "libc.h"
 #include "lock.h"
+#include <sys/stat.h>
 
 long  __timezone = 0;
 int   __daylight = 0;
@@ -123,12 +124,25 @@
 	size_t i;
 	static const char search[] =
 		"/usr/share/zoneinfo/\0/share/zoneinfo/\0/etc/zoneinfo/\0";
+	static time_t prev_mtime;
+	struct stat st;
 
 	s = getenv("TZ");
-	if (!s) s = "/etc/localtime";
+	if (!s) s = TZ_FILE_PATH;
+
+	/* 
+	 * If s is not a file (or doesn't exist yet), the stat command will fail.
+	 * In this case, make sure the mtime value is 0.
+	 */
+	if (stat(s, &st) == -1)
+		st.st_mtime = 0;
+
 	if (!*s) s = __utc;
 
-	if (old_tz && !strcmp(s, old_tz)) return;
+	if (st.st_mtime == prev_mtime && old_tz && !strcmp(s, old_tz))
+		return;
+
+	prev_mtime = st.st_mtime;
 
 	for (i=0; i<5; i++) r0[i] = r1[i] = 0;
 
@@ -153,7 +167,7 @@
 	if (*s == ':' || ((p=strchr(s, '/')) && !memchr(s, ',', p-s))) {
 		if (*s == ':') s++;
 		if (*s == '/' || *s == '.') {
-			if (!libc.secure || !strcmp(s, "/etc/localtime"))
+			if (!libc.secure || !strcmp(s, TZ_FILE_PATH))
 				map = __map_file(s, &map_size);
 		} else {
 			size_t l = strlen(s);
@@ -169,6 +183,23 @@
 		}
 		if (!map) s = __utc;
 	}
+
+	if (map) {
+		if (map_size > 0 && map_size < sizeof(buf)) {
+			char *c;
+			memcpy(buf, map, map_size);
+			buf[map_size] = 0;
+			if ((c = strchr(buf, '\n')))
+				*c = 0;
+			s = buf;
+		} else {
+			s = __utc;
+		}
+		__munmap((void *)map, map_size);
+		map = 0;
+	}
+
+#if 0
 	if (map && (map_size < 44 || memcmp(map, "TZif", 4))) {
 		__munmap((void *)map, map_size);
 		map = 0;
@@ -216,6 +247,7 @@
 			return;
 		}
 	}
+#endif
 
 	if (!s) s = __utc;
 	getname(std_name, &s);

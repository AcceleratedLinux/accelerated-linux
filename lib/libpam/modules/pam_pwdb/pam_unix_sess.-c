/*
 * $Id: pam_unix_sess.-c,v 1.2 2000/12/04 19:02:34 baggins Exp $
 *
 * See end for Copyright information
 */

static const char rcsid_sess[] =
"$Id: pam_unix_sess.-c,v 1.2 2000/12/04 19:02:34 baggins Exp $\n"
" - PAM_PWDB session management. morgan@parc.power.net";

/* Define internal functions */

static int _unix_open_session(pam_handle_t *pamh, unsigned int ctrl)
{
     int retval;
     char *user_name, *service;

     D(("called."));

     retval = pam_get_item( pamh, PAM_USER, (void *) &user_name );
     if ( user_name == NULL || retval != PAM_SUCCESS ) {
	  _log_err(LOG_CRIT, "open_session - error recovering username");
	  return PAM_SESSION_ERR;
     }
	
     retval = pam_get_item( pamh, PAM_SERVICE, (void*) &service );
     if ( service == NULL || retval != PAM_SUCCESS ) {
	  _log_err(LOG_CRIT, "open_session - error recovering service");
	  return PAM_SESSION_ERR;
     }

     _log_err(LOG_INFO, "(%s) session opened for user %s by %s(uid=%d)"
	      , service, user_name
	      , getlogin() == NULL ? "":getlogin(), getuid() );

     return PAM_SUCCESS;
}

static int _unix_close_session(pam_handle_t *pamh, unsigned int ctrl)
{
     int retval;
     char *user_name, *service;

     D(("called."));

     retval = pam_get_item( pamh, PAM_USER, (void*) &user_name );
     if ( user_name == NULL || retval != PAM_SUCCESS ) {
	  _log_err(LOG_CRIT, "close_session - error recovering username");
	  return PAM_SESSION_ERR;
     }

     retval = pam_get_item( pamh, PAM_SERVICE, (void*) &service );
     if ( service == NULL || retval != PAM_SUCCESS ) {
	  _log_err(LOG_CRIT, "close_session - error recovering service");
	  return PAM_SESSION_ERR;
     }

     _log_err(LOG_INFO, "(%s) session closed for user %s"
	      , service, user_name );
		
     return PAM_SUCCESS;
}

/*
 * Copyright (c) Alexander O. Yuriev, 1996.  All rights reserved.
 * Copyright (c) Andrew G. Morgan, 1996, <morgan@parc.power.net>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, and the entire permission notice in its entirety,
 *    including the disclaimer of warranties.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote
 *    products derived from this software without specific prior
 *    written permission.
 * 
 * ALTERNATIVELY, this product may be distributed under the terms of
 * the GNU Public License, in which case the provisions of the GPL are
 * required INSTEAD OF the above restrictions.  (This clause is
 * necessary due to a potential bad interaction between the GPL and
 * the restrictions contained in a BSD-style copyright.)
 * 
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

thisconfigdir=../../..
myfulldir=plugins/kdb/db2
mydir=plugins/kdb/db2
BUILDTOP=$(REL)..$(S)..$(S)..
KRB5_RUN_ENV = @KRB5_RUN_ENV@
KRB5_CONFIG_SETUP = KRB5_CONFIG=$(SRCTOP)/config-files/krb5.conf ; export KRB5_CONFIG ;
PROG_LIBPATH=-L$(TOPLIBD)
PROG_RPATH=$(KRB5_LIBDIR)
MODULE_INSTALL_DIR = $(KRB5_DB_MODULE_DIR)
DEFS=

SUBDIRS= $(SUBDIRS-@DB_VERSION@)
SUBDIRS-sys=
SUBDIRS-redirect=
SUBDIRS-k5= libdb2

LOCALINCLUDES = -I../../../lib/kdb -I$(srcdir)/../../../lib/kdb
DEFINES = -DPLUGIN

DB_VERSION	= @DB_VERSION@
DB_DEPS		= $(DB_DEPS-@DB_HEADER_VERSION@)
DB_DEPS-sys	=
DB_DEPS-k5	= $(BUILDTOP)/include/db.h $(BUILDTOP)/include/db-config.h
DB_DEPS-redirect = $(BUILDTOP)/include/db.h
DB_LIB		= @DB_LIB@
KDB5_DB_LIB	= @KDB5_DB_LIB@
DB_DEPLIB	= $(DB_DEPLIB-@DB_VERSION@)
DB_DEPLIB-k5	= $(TOPLIBD)/libdb$(DEPLIBEXT)
DB_DEPLIB-sys	=

LIBBASE=db2
LIBMAJOR=0
LIBMINOR=0
SO_EXT=.so
RELDIR=../plugins/kdb/db2
# Depends on libk5crypto and libkrb5
# Also on gssrpc, for xdr stuff.
SHLIB_EXPDEPS = \
	$(GSSRPC_DEPLIBS) \
	$(TOPLIBD)/libk5crypto$(SHLIBEXT) \
	$(TOPLIBD)/libkrb5$(SHLIBEXT)
SHLIB_EXPLIBS= $(GSSRPC_LIBS) -lkrb5 -lcom_err -lk5crypto $(KDB5_DB_LIB) $(SUPPORT_LIB) $(LIBS) @DB_EXTRA_LIBS@

SHLIB_DIRS=-L$(TOPLIBD)
SHLIB_RDIRS=$(KRB5_LIBDIR)

DBDIR = libdb2
DBOBJLISTS = $(DBOBJLISTS-@DB_VERSION@)
DBOBJLISTS-sys =
DBOBJLISTS-k5 = $(DBDIR)/hash/OBJS.ST $(DBDIR)/btree/OBJS.ST \
	$(DBDIR)/db/OBJS.ST $(DBDIR)/mpool/OBJS.ST $(DBDIR)/recno/OBJS.ST
DBSHOBJLISTS = $(DBOBJLISTS:.ST=.SH)

SRCS= \
	$(srcdir)/kdb_xdr.c \
	$(srcdir)/adb_openclose.c \
	$(srcdir)/adb_policy.c \
	$(srcdir)/kdb_db2.c \
	$(srcdir)/pol_xdr.c \
	$(srcdir)/db2_exp.c

STOBJLISTS=OBJS.ST $(DBOBJLISTS)
STLIBOBJS= \
	kdb_xdr.o \
	adb_openclose.o \
	adb_policy.o \
	kdb_db2.o \
	pol_xdr.o \
	db2_exp.o

all-unix:: $(LIBBASE)$(SO_EXT)
install-unix:: install-libs
clean-unix:: clean-libs clean-libobjs

$(DB_DEPS) $(DBOBJLISTS-k5) $(DBSHOBJLISTS): all-recurse

#lib$(LIBBASE)$(SO_EXT): db2_exp.o
#	$(CC) -shared -o $@ -L$(TOPLIBD) $^ -ldb $(SHLIB_EXPLIBS)

clean::
	$(RM) lib$(LIBBASE)$(SO_EXT) db2_exp.o

@libnover_frag@
@libobj_frag@

.depend-verify-db: depend-verify-db-$(DB_VERSION)
depend-verify-db-k5:
	@if test -r .depend-verify-db; then :; \
		else (set -x; touch .depend-verify-db); fi
depend-verify-db-sys:
	@echo 1>&2 error: cannot build dependencies using system db package
	@exit 1

.d: .depend-verify-db


//
// h4506.h
//
// Code automatically generated by asnparse.
//

#if ! H323_DISABLE_H4506

#ifndef __H4506_H
#define __H4506_H

#ifdef P_USE_PRAGMA
#pragma interface
#endif

#include <ptclib/asner.h>

#include "h4501.h"
#include "h4504.h"


//
// CallWaitingOperations
//

class H4506_CallWaitingOperations : public PASN_Enumeration
{
#ifndef PASN_LEANANDMEAN
    PCLASSINFO(H4506_CallWaitingOperations, PASN_Enumeration);
#endif
  public:
    H4506_CallWaitingOperations(unsigned tag = UniversalEnumeration, TagClass tagClass = UniversalTagClass);

    enum Enumerations {
      e_callWaiting = 105
    };

    H4506_CallWaitingOperations & operator=(unsigned v);
    PObject * Clone() const;
};


//
// ArrayOf_MixedExtension
//

class H4504_MixedExtension;

class H4506_ArrayOf_MixedExtension : public PASN_Array
{
#ifndef PASN_LEANANDMEAN
    PCLASSINFO(H4506_ArrayOf_MixedExtension, PASN_Array);
#endif
  public:
    H4506_ArrayOf_MixedExtension(unsigned tag = UniversalSequence, TagClass tagClass = UniversalTagClass);

    PASN_Object * CreateObject() const;
    H4504_MixedExtension & operator[](PINDEX i) const;
    PObject * Clone() const;
};


//
// CallWaitingArg
//

class H4506_CallWaitingArg : public PASN_Sequence
{
#ifndef PASN_LEANANDMEAN
    PCLASSINFO(H4506_CallWaitingArg, PASN_Sequence);
#endif
  public:
    H4506_CallWaitingArg(unsigned tag = UniversalSequence, TagClass tagClass = UniversalTagClass);

    enum OptionalFields {
      e_nbOfAddWaitingCalls,
      e_extensionArg
    };

    PASN_Integer m_nbOfAddWaitingCalls;
    H4506_ArrayOf_MixedExtension m_extensionArg;

    PINDEX GetDataLength() const;
    BOOL Decode(PASN_Stream & strm);
    void Encode(PASN_Stream & strm) const;
#ifndef PASN_NOPRINTON
    void PrintOn(ostream & strm) const;
#endif
    Comparison Compare(const PObject & obj) const;
    PObject * Clone() const;
};


#endif // __H4506_H

#endif // if ! H323_DISABLE_H4506


// End of h4506.h

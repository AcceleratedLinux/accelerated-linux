--- libnl-3.2.21/include/netlink/route/route.h       2013-01-24 22:30:22.000000000 +1000
+++ libnl-3.2.21/include/netlink/route/route.h       2017-10-17 16:19:23.415700575 +1000
@@ -86,6 +86,7 @@
 extern int	rtnl_route_set_metric(struct rtnl_route *, int, unsigned int);
 extern int	rtnl_route_unset_metric(struct rtnl_route *, int);
 extern int	rtnl_route_get_metric(struct rtnl_route *, int, uint32_t *);
+extern int	rtnl_route_set_mtu(struct rtnl_route *, unsigned int);
 extern int	rtnl_route_set_dst(struct rtnl_route *, struct nl_addr *);
 extern struct nl_addr *rtnl_route_get_dst(struct rtnl_route *);
 extern int	rtnl_route_set_src(struct rtnl_route *, struct nl_addr *);

--- libnl-3.2.21/include/netlink-private/types.h	2013-01-24 22:42:56.000000000 +1000
+++ libnl-3.2.21/include/netlink-private/types.h	2017-10-17 16:57:18.579737372 +1000
@@ -275,6 +275,7 @@
	uint8_t			rt_scope;
	uint8_t			rt_type;
	uint8_t			rt_nmetrics;
+	uint32_t		rt_mtu;
	uint32_t		rt_flags;
	struct nl_addr *	rt_dst;
	struct nl_addr *	rt_src;

--- libnl-3.2.21/lib/route/route_obj.c	2013-01-24 22:30:34.000000000 +1000
+++ libnl-3.2.21/lib/route/route_obj.c	2017-10-17 15:44:46.467666984 +1000
@@ -60,6 +60,7 @@
 #define ROUTE_ATTR_MULTIPATH 0x008000
 #define ROUTE_ATTR_REALMS    0x010000
 #define ROUTE_ATTR_CACHEINFO 0x020000
+#define ROUTE_ATTR_MTU       0x040000
 /** @endcond */
 
 static void route_constructor(struct nl_object *c)
@@ -72,6 +73,7 @@
 	r->rt_protocol = RTPROT_STATIC;
 	r->rt_type = RTN_UNICAST;
 	r->rt_prio = 0;
+	r->rt_mtu = 1500;
 
 	nl_init_list_head(&r->rt_nexthops);
 }
@@ -558,6 +560,7 @@
 	__ADD(ROUTE_ATTR_MULTIPATH, multipath)
 	__ADD(ROUTE_ATTR_REALMS, realms)
 	__ADD(ROUTE_ATTR_CACHEINFO, cacheinfo)
+	__ADD(ROUTE_ATTR_MTU, mtu)
 };
 
 static char *route_attrs2str(int attrs, char *buf, size_t len)
@@ -793,6 +796,13 @@
 	return 0;
 }
 
+int rtnl_route_set_mtu(struct rtnl_route *route, unsigned int mtu)
+{
+	route->rt_mtu = mtu;
+	route->ce_mask |= ROUTE_ATTR_MTU;
+	return 0;
+}
+
 int rtnl_route_set_pref_src(struct rtnl_route *route, struct nl_addr *addr)
 {
 	if (route->ce_mask & ROUTE_ATTR_FAMILY) {
@@ -1279,6 +1297,14 @@
 
 		nla_nest_end(msg, multipath);
 	}
+	
+	if (route->ce_mask & ROUTE_ATTR_MTU) {		
+		metrics = nla_nest_start(msg, RTA_METRICS);
+		if (metrics == NULL)
+			goto nla_put_failure;
+		NLA_PUT_U32(msg, RTAX_MTU, route->rt_mtu);
+		nla_nest_end(msg, metrics);
+	}
 
 	return 0;
 

#!/bin/sh

# Ensure everyone's time is the same
TZ=UTC
export TZ

# No Git info; generate suitable public version based on build date.
if [ ! -e ${ROOTDIR:-`pwd`}/.git ]; then
	YEAR=$(date +%y)
	MONTH=$(date +%m | sed 's/^0*//')
	DAY=$(date +%d | sed 's/^0*//')
	HOUR=$(date +%H | sed 's/^0*//')
	VERSIONSTR="$YEAR.$MONTH.$DAY.$HOUR-public"
	echo $VERSIONSTR
	exit 0
fi

# Are we on the build machine?
if [ "$ON_BUILD_MACHINE" ]; then
	CREV=
else
	CREV="-$(git rev-parse --short HEAD)"
fi

# Is the tree dirty?
DIRTY=$(git describe --always --dirty | sed -n 's/.*dirty$/-dirty/p')

# Check if we have a version TAG at this commit
for tag in $(git tag --points-at HEAD 2>/dev/null)
do
	# look for a pure version number tag (no commit IDs or dirty is allowed)
	PURE_VERSION=$(echo "$tag" | sed -n '/^[1-9][0-9]\.*[1-9][0-2]\{0,1\}\(\.[1-9][0-9]*\)\{1,\}$/p')
	[ "$PURE_VERSION" ] && echo "${PURE_VERSION}${CREV}${DIRTY}" && exit 0

	# look for a mixed name-version-YYYMMDD tag
	NAME_VER_DATE=$(echo "$tag" | sed -n 's/^.*-\([1-9][0-9]\.*[1-9][0-2]\{0,1\}\(\.[1-9][0-9]*\)\{1,\}\)-[0-9]\{8\}$/\1/p')
	[ "$NAME_VER_DATE" ] && echo "${NAME_VER_DATE}${CREV}${DIRTY}" && exit 0
done

# There is no tag forcing a version on us, so we need to create a version.
# Find the number of commits between HEAD and the closest common ancestor
# commit on the master branch.
COMMITS_PAST_MASTER=999999
# If we don't find a common commit with master, treat HEAD as that commit.
MERGE_BASE=$(git rev-parse --short HEAD)
# Note: The original version of this script walked back on the current branch
# until it found any commit which also exists on "master" or any branch ending
# in "/master".
for master_ref in $(git branch --all --format='%(refname)' | egrep '^(.*/)*master$')
do
	MERGE_BASE_REF=$(git merge-base ${master_ref} HEAD)
	if [ -n "${MERGE_BASE_REF}" ]; then
		PAST_MASTER=$(git log --first-parent --oneline ${MERGE_BASE_REF}..HEAD | wc -l)
		if [ ${PAST_MASTER} -lt ${COMMITS_PAST_MASTER} ]; then
			COMMITS_PAST_MASTER=${PAST_MASTER}
			MERGE_BASE=${MERGE_BASE_REF}
		fi
	fi
done

LASTREVDATE=$(git show -s --format=${GIT_DATE:-%ci} ${MERGE_BASE} | head -n1)
YEAR=$(date -d "$LASTREVDATE" +%y)
YEAR4=$(date -d "$LASTREVDATE" +%Y)
MONTH=$(date -d "$LASTREVDATE" +%m | sed 's/^0*//')
MASTER_COMMITS_THIS_MONTH=$(git rev-list --first-parent \
	--since="$YEAR4-$MONTH-01 00:00:00" $MERGE_BASE \
	| wc -l)

# Let's shut down rogue version numbers
DALDEV=
if [ "$MASTER_COMMITS_THIS_MONTH" -gt 255 ]; then
	DALDEV="${DALDEV}-${MASTER_COMMITS_THIS_MONTH}"
	MASTER_COMMITS_THIS_MONTH=255
fi
if [ "$COMMITS_PAST_MASTER" -gt 255 ]; then
	DALDEV="${DALDEV}-${COMMITS_PAST_MASTER}"
	COMMITS_PAST_MASTER=255
fi
[ "$DALDEV" ] && DALDEV="-DEVONLY${DALDEV}"

echo "${YEAR}.${MONTH}.${MASTER_COMMITS_THIS_MONTH}.${COMMITS_PAST_MASTER}${CREV}${DALDEV}${DIRTY}"

hostname porter

echo "Mounting filesystems..."
mount &>/dev/null || mount -t proc proc proc
mount -t sysfs sys /sys
mount -t tmpfs -o size=40M tmpfs /tmp
mount -t tmpfs -o size=32M tmpfs /var
mkdir -m 1777 /var/tmp
mkdir -m 755 /var/log
mkdir -m 755 /var/run
mkdir -m 1777 /var/lock
mkdir -m 755 /var/empty
mkdir -m 755 /var/mnt

grep -q container= /proc/1/environ && CONTAINER=y
if [ "$CONTAINER" ]; then
	echo "Mounting opt filesystem ..."
	if mount | grep -q /opt ; then
		echo "Using /opt filesystem from container host"
	else
		echo "Using tmpfs for /opt filesystem ..."
		mount -t tmpfs -o size=4M tmpfs /opt
	fi

else
	mkdir -m 755 /dev/pts
	mount -t devpts devpts /dev/pts

	# make sure we dont see all errors
	echo 6 > /proc/sys/kernel/printk

	# init devices before we need any
	cp -ra /lib/udev/devices/. /dev

	echo "Starting watchdog ..."
	watchdog /dev/watchdog

	echo "Mounting opt filesystem ..."
	if ! mount --bind /mnt/disk/opt /opt ; then
		echo "Cannot bind mount /opt to /mnt/disk/opt"
		echo "Using tmpfs for /opt filesystem"
		mount -t tmpfs -o size=4M tmpfs /opt
	fi
fi

if [ ! -s /opt/boot/bootenv ]; then
	echo "Initializing boot environment ..."
	mkdir /opt/boot
	dd if=/dev/zero of=/opt/boot/bootenv bs=524288 count=1
	# create the first  entry to get setup clean
	fw_setenv ethaddr 00:27:04:03:02:01
fi

echo "Initializing network interfaces..."
echo 1 >/proc/sys/net/ipv4/conf/all/promote_secondaries
ifconfig lo 127.0.0.1

if [ "$(fw_printenv factory 2> /dev/null)" = "factory=enabled" ]; then
	/etc/factory
	exit 0
fi
if [ "$(fw_printenv emctest 2> /dev/null)" = "emctest=enabled" ]; then
	# Use the same setup as for factory testing
	/etc/factory
	exit 0
fi

echo "Mounting config filesystem ..."
if [ "$CONTAINER" ]; then
	if mount | grep -q /etc/config ; then
		echo "Using /etc/config filesystem from container host"
	else
		echo "Using tmpfs for /etc/config filesystem ..."
		mount -t tmpfs -o size=4M tmpfs /etc/config
		touch /etc/config/.init
	fi
elif ! mount --bind /mnt/disk/config /etc/config ; then
	echo "Cannot bind mount /etc/config to /mnt/disk/config..."
	echo "Using tmpfs for /etc/config."
	mount -t tmpfs -o size=4M tmpfs /etc/config
	touch /etc/config/.init
fi
[ "$(echo /etc/config/*)" = '/etc/config/*' ] && touch /etc/config/.init

if [ -f /etc/config/.init ]; then
	echo "Factory defaulting config ..."
	filter="($|/ssh_host_rsa_key|/ssh_host_dsa_key|/ssh_host_key|/id_rsa|/id_dsa|/identity|/accns.pem|/accns.crt|/unique.crt|/.init2)"
	[ -f /etc/config/.init2 ] && filter='$'
	touch /etc/config/.init2
	find /etc/config -name '*' |
		egrep -v "/etc/config$filter" |
		xargs rm -rf
	cp -ra /etc/default/. /etc/config/.
	echo "Factory default settings restored" > /etc/config/reboot_msg
else
	rm -f /etc/config/.init2
fi

if [ "$CONTAINER" ]; then
	echo 'console:unknown:/sbin/getty 115200 console' > /var/run/console
else
	echo 'ttyS0:unknown:/sbin/getty 115200 ttyS0' > /var/run/console
fi
cat /etc/inittab.d/* > /etc/inittab

# modem firmware updates
[ -f /etc/config/switch_firmware_carrier ] && sh /etc/config/switch_firmware_carrier

eval $(config start)
config update
config set modem.enable false
echo "Modem disabled."
# FIXME: make these values the defaults for this device so forcing them here is not required
config set system.log.remote.0.enable false
[ "$CONTAINER" ] && config set firewall.custom.enable false
config commit
eval $(config stop)

# start the shutdown monitor
btnmon &

echo "Disabling tx checksum offload on control interface ..."
s="$(ethtool -K eth1 tx off 2>&1)" || echo "$s"
echo "Disabling tx checksum offload on datapath interface ..."
s="$(ethtool -K eth0 tx off 2>&1)" || echo "$s"

# do the rc script processing
actiond &

cat /etc/motd

exit 0

#!/bin/bash

. /etc/scripts/power-common

port=$1
outlets=$2
cmd=$3

[[ -z "$username" ]] && username="cyber"
[[ -z "$password" ]] && password="cyber"

if [[ -z "$port" ]] || [[ -z "$outlets" ]] || [[ -z "$cmd" ]]; then
	appname=`basename $0`
	echo "Usage: $appname <port> \"<outlet> [outlet..]\" on|off|cycle|status"
	exit 1
fi

function pduLogin {
	/bin/pmchat -v -t 3 ECHO ON "" "\r" "ame:--ame:" "$username" "word:" "$password" "<ENTER> Execute" < $port 2>&1
	return $?
}

function pduLogout {
	for (( i=0; i < 10; i++ )); do
		/bin/pmchat -v -t 2 ECHO ON ABORT "[Main]" "" "\033\c" "<ENTER> Execute" < $port 2>&1
		if [[ $? == 4 ]]; then
			# We're at the main menu
			/bin/pmchat -v -t 2 ECHO ON "" "6" "Bye!" < $port 
			return $?
		fi
	done
	return 0
}

if ! pduLogin >& /dev/null; then
	pduLogout >& /dev/null
	if ! pduLogin >& /dev/null; then
		power_error_login $username
		#for outlet in $outlets; do
		#	power_outlet_error_login $outlet $username
		#done
		exit 1
	fi
fi

# Get to outlet manager menu
/bin/pmchat -v -t 5 ECHO ON "" "1" "<ENTER> Execute" "1" "<ENTER> Execute" < $port >& /dev/null

for outlet in $outlets; do
	case $cmd in
	"on" )
	/bin/pmchat -v -t 5 ECHO ON "" "1" ">" "$outlet" ">" "1" ">" "yes" "<ENTER> Execute" < $port >& /dev/null
	;;
	"off" )
	/bin/pmchat -v -t 5 ECHO ON "" "1" ">" "$outlet" ">" "2" ">" "yes" "<ENTER> Execute" < $port >& /dev/null
	;;
	"cycle" )
	/bin/pmchat -v -t 5 ECHO ON "" "1" ">" "$outlet" ">" "3" ">" "yes" "<ENTER> Execute" < $port >& /dev/null
	;;
	esac
done

# Asterisk indicates commands aren't complete
for (( i=0; i < 10; i++ )); do
	if ! /bin/pmchat -v -t 2 ECHO ON "" "" "> " < $port 2>&1 | grep "Outlet Number" | head -n1 | grep '*' >& /dev/null; then
		line=$(/bin/pmchat -v -t 2 ECHO ON "" "" "<ENTER> Execute" < $port 2>&1 | grep "Current State" | head -n1)
		break
	fi
	sleep 1
done
if [[ "$i" -eq 10 ]]; then
	for outlet in $outlets; do
		power_outlet_error_timeout $outlet $cmd
	done
	exit 1
fi

for outlet in $outlets; do
	field=$(( 3 + $outlet ))
	status=$(echo "$line" | awk "{ print tolower(\$$field) }")
	power_outlet_status $outlet $status
done

if ! pduLogout >& /dev/null; then
	power_warn_logout $username
fi

exit 0

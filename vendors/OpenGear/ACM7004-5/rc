hostname "Opengear/ACM7004-5"

echo "Mounting filesystems..."
mount -t proc proc /proc
mount -t sysfs sys /sys
mkdir -m 755 /dev/pts
mount -t devpts devpts /dev/pts
mount -t tmpfs -o size=40M tmpfs /tmp
mount -t tmpfs -o size=32M tmpfs /var
mkdir -m 1777 /var/tmp
mkdir -m 755 /var/log
mkdir -m 755 /var/run
mkdir -m 1777 /var/lock
mkdir -m 755 /var/empty
mkdir -m 755 /var/mnt

echo "Starting watchdog..."
watchdog /dev/watchdog

# make sure we dont see all errors
echo 6 > /proc/sys/kernel/printk

# initialise devices before we need them
/etc/rc.dev

echo "Initializing network interfaces..."
ip link set eth0 name net1
ip link set eth1 name net2
echo 1 >/proc/sys/net/ipv4/conf/all/promote_secondaries
ifconfig lo 127.0.0.1
setmac -i net1,net2 -u -n 2

if [ "$(fw_printenv factory 2> /dev/null)" = "factory=enabled" ]; then
	/etc/factory
	exit 0
fi

# Make sure the UBI is attached
ubiattach -p /dev/mtd0 -d 0

echo "Mounting config filesystem..."
if ! mount -t ubifs ubi0:config_1 /etc/config
then
	echo "Cannot mount /etc/config as ubifs, reformatting..."
	flash_erase /dev/flash/config 0 0
	echo "Mounting config filesystem after reformat..."
	if ! mount -t ubifs ubi0:config_1 /etc/config
	then
		echo "Failed to mount flash based config filesystem"
		echo "Using tmpfs for /etc/config."
		mount -t tmpfs -o size=4M tmpfs /etc/config
	fi
	touch /etc/config/.init
fi
[ "$(echo /etc/config/*)" = '/etc/config/*' ] && touch /etc/config/.init

if [ -f /etc/config/.init ]; then
	echo "Factory defaulting config ..."
	filter="($|/ssh_host_rsa_key|/ssh_host_dsa_key|/ssh_host_key|/id_rsa|/id_dsa|/identity|/accns.pem|/accns.crt|/unique.crt|/.nocrypt|/.init2|/random-seed)"
	[ -f /etc/config/.init2 ] && filter='($|/random-seed)'
	touch /etc/config/.init2
	find /etc/config -name '*' |
		egrep -v "/etc/config$filter" |
		xargs rm -rf
	cp -ra /etc/default/. /etc/config/.
	echo "Factory default settings restored" > /etc/config/reboot_msg
else
	rm -f /etc/config/.init2
fi
cat /etc/inittab.d/* > /etc/inittab

# cryptography disabled mode
if [ -e /etc/config/.nocrypt ] ; then
	sh /etc/nocrypt
	exit 0
fi

if grep -q '"nvlog"' /proc/mtd
then
	echo "Mounting nvlog filesystem...."
	mkdir -p /var/mnt/storage.nvlog
	if ! mount -t ubifs ubi0:nvlog /var/mnt/storage.nvlog
	then
		echo "Cannot mount /var/mnt/storage.nvlog as ubifs, reformatting..."
		#flash_erase /dev/flash/nvlog 0 0
		#echo "Mounting opt filesystem after reformat..."
		#if ! mount -t ubifs ubi0:nvlog /var/mnt/storage.nvlog
		#then
		#	echo "Failed to mount flash based nvlog filesystem"
		#	# just leave the empty mount point (RO)
		#fi
	fi
fi

# modem firmware updates
[ -f /etc/config/switch_firmware_carrier ] && sh /etc/config/switch_firmware_carrier

random_seed restore

# do the rc script processing
actiond &

cat /etc/motd

exit 0

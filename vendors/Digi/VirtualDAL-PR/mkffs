#!/bin/sh
# set -x
#
# mkffs -- make flash filesystem for VitualDAL
#
# Create GNU part partitions and install grub on target mSATA drive.
#

if ! mount 2>&1 | grep -q tmp; then
        echo "Mounting filesystems..."
        mount -t proc proc /proc
        mount -t sysfs sys /sys
        mkdir -m 755 /dev/pts
        mount -t devpts devpts /dev/pts
        mount -t tmpfs -o size=256M tmpfs /tmp
        mount -t tmpfs -o size=256M tmpfs /var
        mkdir -m 755 /dev/hugepages
        mount -t hugetlbfs none /dev/hugepages
        mkdir -m 1777 /var/tmp
        mkdir -m 755 /var/log
        mkdir -m 755 /var/run
        mkdir -m 1777 /var/lock
        mkdir -m 755 /var/empty
        mkdir -m 755 /var/mnt
fi

# Default drive to setup and boot from
DRIVE=/dev/sda
RAWIMAGE=/dev/sdb

# Default size of image partitions (in Mbytes)
IMAGESIZE=${1:-4096}

# Check if this device is mounted
if mount | grep -q $DRIVE
then
        echo "ERROR: drive $DRIVE is active (mounted)"
        exit 1
fi

# delete old partitions
for p in 1 2 3 4 5; do
        parted --script -- $DRIVE rm $p > /dev/null 2>&1
done

# partition alignement helper: new_part <size|0>
# size is in MiB

new_part()
{
    last=$(parted --script -- ${DRIVE} unit s print | awk '/^ *[0-9]/ { gsub("s","",$3); print $3 }' | tail -1)
    free=$((${last:-0}+1))
    if [ "$1" = 0 ]; then
        echo "${free}s -0"
    else
        echo "${free}s $((free + (($1 * 1024 * 1024) / 512) - 1))s"
    fi
}

echo "Making the GPT partitions..."
parted --script -- $DRIVE mklabel gpt
parted --script -- $DRIVE mkpart primary fat32 34s 2MiB
parted --script -- $DRIVE mkpart primary fat32 $(new_part 46)
parted --script -- $DRIVE mkpart primary ext4 $(new_part 64)
parted --script -- $DRIVE mkpart primary ext4 $(new_part 64)
parted --script -- $DRIVE name 1 Bios-Boot
parted --script -- $DRIVE set  1 bios_grub on
parted --script -- $DRIVE name 2 boot
# parted --script -- $DRIVE set  2 boot on
parted --script -- $DRIVE name 3 Image-A
parted --script -- $DRIVE name 4 Image-B

echo "Create grub boot FS and grub setup"
mkfs.vfat ${DRIVE}2
mount -t vfat ${DRIVE}2 /boot/grub
mkdir -p /boot/grub
grub-editenv /boot/grub/grubenv set default=0
grub-editenv /boot/grub/grubenv set timeout=0
grub-editenv /boot/grub/grubenv set serial=VIRTUALDAL012345

echo "Install grub..."
update-grub

echo "Install image A ..."
dd if=$RAWIMAGE of=${DRIVE}3 bs=4096b

# save space in VM by only installed part A
# echo "Install image B ..."
# dd if=$RAWIMAGE of=${DRIVE}4 bs=4096b

# /opt is created on first boot by /etc/rc

poweroff -f
exit 0

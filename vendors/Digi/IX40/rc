hostname "IX40"

echo "Mounting filesystems..."
mount -t proc proc /proc
mount -t sysfs sys /sys
mkdir -m 755 /dev/pts
mount -t devpts devpts /dev/pts
mount -t tmpfs -o size=128M tmpfs /tmp
mount -t tmpfs -o size=32M tmpfs /var
mkdir -m 1777 /var/tmp
mkdir -m 755 /var/run
mkdir -m 1777 /var/lock
mkdir -m 755 /var/empty
mkdir -m 755 /var/mnt

# Setup the filesystem to host the /var/log.
. /lib/varlog_setup.sh
setup_varlogfs 16

echo "Starting watchdog..."
watchdog /dev/watchdog

# make sure we dont see all errors
echo 6 > /proc/sys/kernel/printk

# Initialize devices before we need them
/etc/rc.dev

echo "Initializing network interfaces..."
modprobe dwmac-imx
ip link set eth0 name switch
ip link set switch-port1 name eth4
ip link set switch-port2 name eth3
ip link set switch-port3 name eth2
ip link set switch-port6 name eth5
echo 1 >/proc/sys/net/ipv4/conf/all/promote_secondaries
ifconfig lo 127.0.0.1
setmac -i eth1,eth2,eth3,eth4,eth5 -u -n 5

serial-mode /dev/serial/port1 init

if [ "$(fw_printenv factory 2> /dev/null)" = "factory=enabled" ]; then
	/etc/factory
	exit 0
fi
if [ "$(fw_printenv emctest 2> /dev/null)" = "emctest=enabled" ]; then
	# Use the same setup as for factory testing
	/etc/factory
	exit 0
fi

echo "Mounting opt filesystem..."
if ! mount -t ext4 /dev/flash/opt /opt; then
        echo "Cannot mount /opt, reformatting..."
        mkfs.ext4 -F /dev/flash/opt
        mount -t ext4 /dev/flash/opt /opt
fi

echo "Mounting config filesystem..."
if [ ! -d /opt/config ]
then
	mkdir -p /opt/config
	touch /etc/config/.init
fi
if ! mount --bind /opt/config /etc/config
then
        echo "Cannot bind mount /etc/config to /opt/config..."
        echo "Using tmpfs for /etc/config."
        mount -t tmpfs -o size=4M tmpfs /etc/config
        touch /etc/config/.init
fi
[ "$(echo /etc/config/*)" = '/etc/config/*' ] && touch /etc/config/.init

if [ -f /etc/config/.init ]; then
	echo "Factory defaulting config ..."
	filter="($|/certs$|/certs/|/ssh_host_rsa_key|/ssh_host_dsa_key|/ssh_host_key|/id_rsa|/id_dsa|/identity|/accns.pem|/accns.crt|/unique.crt|/.nocrypt|/.init2|/random-seed)"
	[ -f /etc/config/.init2 ] && filter='($|/random-seed)'
	touch /etc/config/.init2
	find /etc/config -name '*' |
		egrep -v "/etc/config$filter" |
		xargs rm -rf
	cp -ra /etc/default/. /etc/config/.
	echo "Factory default settings restored" > /etc/config/reboot_msg
else
	rm -f /etc/config/.init2
fi

echo "Initializing CELL interface control..."
/bin/sim -i

cat /etc/inittab.d/* > /etc/inittab

# cryptography disabled mode
if [ -e /etc/config/.nocrypt ] ; then
	sh /etc/nocrypt
	exit 0
fi

# modem firmware updates
[ -f /etc/config/switch_firmware_carrier ] && sh /etc/config/switch_firmware_carrier

random_seed restore

# init processing
[ -x /etc/rcS ] && /etc/rcS

# do the rc script processing
actiond &

cat /etc/motd

exit 0

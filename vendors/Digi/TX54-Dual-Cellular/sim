#!/bin/sh
#
# TX54 SIM switching utility
# SIM slot control is over AT commands for both EM7511 modems.
# No need to reset the modem after changing active slot -- ModemManager will
# detect it from AT#QSS unsolicited messages.

# If named simX, change modem WWANX SIM slot
wwan="${0##*sim}"
idx="$(runt find mm.modem modem.port "modem/wwan$wwan")"
idx="${idx##mm.modem.}"

sim_file="/etc/config/sim$wwan.conf"

if [ -z "$wwan" -o "$wwan" = 1 ]; then
	WWAN_POWER_GPIO="/sys/class/gpio/gpio414/value"
else
	WWAN_POWER_GPIO="/sys/class/gpio/gpio415/value"
fi

case "$1" in
-n)
	echo 2
	;;
-p)
	state=`cat $WWAN_POWER_GPIO`
	echo "Current state: $state"
	;;
-o)
	echo 1 > $WWAN_POWER_GPIO
	;;
-O)
	echo 0 > $WWAN_POWER_GPIO
	;;
-m)
	# Built-in modem module is always present
	echo "Cell module detected: yes"
	exit 0
	;;
1|2)
	[ -z "$idx" ] && exit 1
	/bin/modem idx=$idx softsim $1
	echo "$1" > "$sim_file"
	;;
'')
	[ -z "$idx" ] && exit 1
	current="$(/bin/modem idx="$idx" softsim)"
	if [ -f "$sim_file" ]; then
		expected="$(cat "$sim_file" 2>/dev/null)"
		if [ "$expected" != "$current" ]; then
			logger -t sim "switching to sim $expected, idx=$idx"
			/bin/modem idx="$idx" softsim "$expected"
		fi
		echo "$expected"
	else
		logger -t sim "creating $sim_file with sim $current, idx=$idx"
		echo "$current" > "$sim_file"
		echo "$current"
	fi
	;;
*)
	echo "usage: $(basename $0) [none|1|2|-dDnoOp]
Get, set and control WWAN$wwan SIM selection (MM idx $idx)

	-h	help	- this help
	-n	number	- print number of SIM slots
	-o	on	- turn on power to the cell module
	-O	off	- turn off power to the cell module
	-m	module detect	- detect cell module
	-p	power	- report the modem's current power state"
	[ "$1" = -h ] && exit 0 || exit 1
	;;
esac

exit 0


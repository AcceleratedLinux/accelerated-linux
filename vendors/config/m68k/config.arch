############################################################################
#
#  A Generic m68k config.arch that can be included by other platforms
#  to reduce the number of places that need to be edited when something
#  common changes.  If you include this file you may provide:
#
#  CPUFLAGS            - cpu specific flags to pass to the compiler
#  VENDOR_CFLAGS       - vendor specific flags to pass to the compiler
#  DISABLE_XIP         - set this to 1 to disable XIP code
#  DISABLE_SHARED_LIBS - set this to 1 to disable shared libraries
#  DISABLE_MOVE_RODATA - set this to 1 to disable moving rodata to text
#  LOPT                - library optimisation flags
#  UOPT                - user optimisation flags
#
#  David McCullough <davidm@snapgear.com>
#
############################################################################
#
# Generic settings
#

ifndef CONSOLE_BAUD_RATE
CONSOLE_BAUD_RATE = 9600
endif

ifndef EXTRA_MODULE_DIRS
ifeq ($(ROOTDIR)/modules,$(wildcard $(ROOTDIR)/modules))
ifneq ($(filter-out linux-2.0% linux-2.2% linux-2.4%, $(LINUXDIR)),)
EXTRA_MODULE_DIRS = $(ROOTDIR)/modules/
else
EXTRA_MODULE_DIRS = $(ROOTDIR)/modules
endif
endif
endif

ifndef VERSIONPKG
#define VERSIONPKG 1.0.0
endif

ifndef VERSIONSTR
VERSIONSTR = $(CONFIG_VENDOR)/$(CONFIG_PRODUCT) Version $(VERSIONPKG)
endif

ifndef NFIMAGE
NFIMAGE=imagez.bin
endif

############################################################################
#
# The makefiles need to know how to do things in different contexts
# To save some pain we put it all here
#
# First settings we always want for all builds
#

# ARCH = kernel,  TARGET_ARCH = uClibc

MACHINE       = m68k
ARCH          = m68k
ENDIAN        = big
CROSS_COMPILE = m68k-linux-
CROSS         = $(CROSS_COMPILE)
CONFIGURE_HOST = m68k-linux

CC        = ucfront-gcc $(CROSS_COMPILE)gcc $(CPUFLAGS)
AS        = $(CROSS_COMPILE)as $(CPUFLAGS)
CXX       = ucfront-g++ $(CROSS_COMPILE)g++ $(CPUFLAGS)
AR        = $(CROSS_COMPILE)ar
LD        = ucfront-ld $(CROSS_COMPILE)ld
OBJCOPY   = $(CROSS_COMPILE)objcopy
RANLIB    = $(CROSS_COMPILE)ranlib
STRIPTOOL = $(CROSS_COMPILE)strip
STRIP     = $(STRIPTOOL)
NM        = $(CROSS_COMPILE)nm

UCLINUX_BUILD_SET = 0					# have we set a special config below

ifndef DISABLE_SHARED_LIBS
  ifeq ($(CONFIG_BINFMT_SHARED_FLAT),y)
	BUILD_SHARED = 1
  endif
endif

# These can be used by configure.
# Either configure $(CONFIGURE_OPTS)
# or     configure --host=$(TARGETARCH) --build=$(HOSTARCH) --target=$(TARGETARCH)
#
TARGETARCH    := $(CROSS)linux
HOSTARCH      := $(shell sh $(ROOTDIR)/tools/config.guess)
CONFIGURE_OPTS := --host=$(TARGETARCH) --build=$(HOSTARCH) --target=$(TARGETARCH)

############################################################################
#
# General purpose lib building rules,  uClibc.config uses these when
# possible
#

ifdef UCLINUX_BUILD_LIB
  ifeq ($(findstring glibc,$(LIBCDIR)),glibc)
        GLIBC_TARGET_OPTS = m68k-linux --enable-shared
  endif
  ifdef CONFIG_LIB_DEBUG
	CFLAGS  :=  -g
	LDFLAGS :=
  else
	CFLAGS  :=  -g
	LDFLAGS :=
  endif
	CFLAGS  += -pipe
	CFLAGS  += -fno-common -fno-builtin -Wall #-Werror
	CFLAGS  += -Dlinux -D__linux__ -Dunix
	CFLAGS  += $(VENDOR_CFLAGS) -DEMBED
	LDFLAGS  += -fno-common -fno-builtin

	CXXFLAGS = $(CFLAGS) -nostdinc++
	CXXSUP := $(shell $(CXX) -print-file-name=libsupc++.a)

	# don't want all the CFLAGS for uClibc/Config
	ARCH_CFLAGS := $(CPUFLAGS) $(CFLAGS)
	UCLINUX_BUILD_SET=1
endif

############################################################################
#
# Settings for building user apps
#

ifdef UCLINUX_BUILD_USER

  ifdef CONFIG_USER_DEBUG
	CFLAGS  :=  -g
	LDFLAGS :=
  else
	CFLAGS  :=  -O2 -g
	LDFLAGS :=
  endif
	CFLAGS  += -pipe
	CFLAGS  += -fno-common -fno-builtin -Wall #-Werror
	CFLAGS  += -Dlinux -D__linux__ -Dunix
	CFLAGS  += $(VENDOR_CFLAGS) -DEMBED
	LDFLAGS  += -fno-common -fno-builtin

	CXXFLAGS = $(CFLAGS) -nostdinc++ -fno-exceptions
	CXXSUP :=  $(shell $(CXX) -print-file-name=libsupc++.a)

	FLTFLAGS :=
	export FLTFLAGS

	# for anyone still using it
	CONVERT = /bin/true

	UCLINUX_BUILD_SET=1
endif

############################################################################
#
# fall through,  do other config options perhaps
#

ifeq ($(UCLINUX_BUILD_SET),1)
	EXTRA_CFLAGS := $(CPUFLAGS)

	CXXLIBS =
  	 
	LDLIBS = $(LIBBIND)
	SH_LDFLAGS = $(LDFLAGS)
	SH_LDLIBS = $(LDLIBS)
endif

############################################################################

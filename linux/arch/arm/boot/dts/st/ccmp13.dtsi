/*
 * Copyright 2022, 2023 Digi International, Inc.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#include <dt-bindings/regulator/st,stm32mp13-regulator.h>
#include "stm32mp133.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/mfd/st,stpmic1.h>
#include <dt-bindings/pinctrl/stm32-pinfunc.h>

/ {
	aliases {
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		i2c3 = &i2c3;
		i2c4 = &i2c4;
		i2c5 = &i2c5;
		mmc0 = &sdmmc2; /* Wireless */
	};

	memory@c0000000 {
		device_type = "memory";
		reg = <0xc0000000 0x10000000>; /* 256 MB */
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		optee_framebuffer@cd000000 {
			reg = <0xcd000000 0x1000000>;
			no-map;
		};

		optee@ce000000 {
			reg = <0xce000000 0x2000000>;
			no-map;
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_3v3_rf: regulator-som@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "3v3_rf";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpiob 7 GPIO_ACTIVE_HIGH>; /* 3V3_RF_EN */
			enable-active-high;
			startup-delay-us = <100000>;
			status = "okay";
		};

		reg_rf_wl_en: regulator-som@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "rf_wl_en";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpiod 6 GPIO_ACTIVE_HIGH>; /* WL_REG_EN */
			enable-active-high;
			startup-delay-us = <100>;
			vin-supply = <&reg_3v3_rf>;
			status = "okay";
		};
	};

	vin: vin {
		compatible = "regulator-fixed";
		regulator-name = "vin";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};
};

/* Bluetooth */
&usart2 {
	pinctrl-names = "default", "sleep", "idle";
	pinctrl-0 = <&ccmp13_usart2_pins_a>;
	pinctrl-1 = <&ccmp13_usart2_sleep_pins_a>;
	pinctrl-2 = <&ccmp13_usart2_idle_pins_a>;
	uart-has-rtscts;
	status = "disabled";

	cyw4373_bt: cyw4373-bt {
		shutdown-gpios = <&gpiod 13 GPIO_ACTIVE_HIGH>;
		compatible = "brcm,bcm43438-bt";
		max-speed = <3000000>;
		vbat-supply = <&reg_3v3_rf>;
		vddio-supply = <&reg_3v3_rf>;
		status = "disabled";
	};
};

&crc1 {
	status = "okay";
};

&dma1 {
	sram = <&dma_pool>;
};

&dma2 {
	sram = <&dma_pool>;
};

&dts {
	status = "okay";
};

&fmc {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp13_fmc_pins_a>;
	pinctrl-1 = <&ccmp13_fmc_sleep_pins_a>;
	status = "okay";

	nand-controller@4,0 {
		status = "okay";

		nand@0 {
			reg = <0>;
			nand-on-flash-bbt;
			#address-cells = <1>;
			#size-cells = <1>;
		};
	};
};

&i2c4 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ccmp13_i2c4_pins_a>;
	pinctrl-1 = <&ccmp13_i2c4_sleep_pins_a>;
	i2c-scl-rising-time-ns = <185>;
	i2c-scl-falling-time-ns = <20>;
	status = "okay";
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
};

&iwdg2 {
	timeout-sec = <32>;
	status = "okay";
};

&rtc {
	st,alarm = <RTC_OUT1>;
	st,lsco = <RTC_OUT2_RMP>;
	pinctrl-0 = <&ccmp13_rtc_out1_pins_a>;
	pinctrl-names = "default";
	status = "okay";
};


&scmi_regu {
	scmi_vdd_adc: regulator@10 {
		reg = <VOLTD_SCMI_STPMIC1_LDO1>;
		regulator-name = "vdd_adc";
	};
	scmi_vdd_usb: regulator@13 {
		reg = <VOLTD_SCMI_STPMIC1_LDO4>;
		regulator-name = "vdd_usb";
	};
	scmi_vdd_sd: regulator@14 {
		reg = <VOLTD_SCMI_STPMIC1_LDO5>;
		regulator-name = "vdd_sd";
	};
	scmi_v1v8_periph: regulator@15 {
		reg = <VOLTD_SCMI_STPMIC1_LDO6>;
		regulator-name = "v1v8_periph";
	};
	scmi_v3v3_sw: regulator@19 {
		reg = <VOLTD_SCMI_STPMIC1_PWR_SW2>;
		regulator-name = "v3v3_sw";
	};
};

/* Wireless */
&sdmmc2 {
	arm,primecell-periphid = <0x10153180>;
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_clk_pins_a>;
	pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_clk_pins_a>;
	pinctrl-2 = <&sdmmc2_b4_sleep_pins_a>;
	non-removable;
	no-1-8-v;
	st,neg-edge;
	bus-width = <4>;
	vmmc-supply = <&reg_rf_wl_en>;
	status = "okay";

	#address-cells = <1>;
	#size-cells = <0>;
	brcmf: bcrmf@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";

		brcm,broken_sg_support;
		brcm,sd_head_align = /bits/  16 <8>;
		brcm,sd_sgentry_align = /bits/ 16 <32>;
	};
};

&sram {
	dma_pool: dma-sram@0 {
		reg = <0x0 0x4000>;
		pool;
	};
};

&pinctrl {
	ccmp13_fmc_pins_a: ccmp13_fmc-0 {
		pins1 {
			pinmux = <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
				 <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
				 <STM32_PINMUX('D', 11, AF12)>, /* FMC_A16_FMC_CLE */
				 <STM32_PINMUX('D', 12, AF12)>, /* FMC_A17_FMC_ALE */
				 <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
				 <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
				 <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
				 <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
				 <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
				 <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
				 <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
				 <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
				 <STM32_PINMUX('G', 9, AF12)>; /* FMC_NE2_FMC_NCE */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>; /* OSPEEDR at High speed (0x10) */
		};
		pins2 {
			pinmux = <STM32_PINMUX('A', 9, AF10)>; /* FMC_NWAIT */
			bias-pull-up;
			slew-rate = <2>; /* OSPEEDR at High speed (0x10) */
		};
	};

	ccmp13_fmc_sleep_pins_a: ccmp13_fmc-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('D', 4, ANALOG)>, /* FMC_NOE */
				 <STM32_PINMUX('D', 5, ANALOG)>, /* FMC_NWE */
				 <STM32_PINMUX('D', 11, ANALOG)>, /* FMC_A16_FMC_CLE */
				 <STM32_PINMUX('D', 12, ANALOG)>, /* FMC_A17_FMC_ALE */
				 <STM32_PINMUX('D', 14, ANALOG)>, /* FMC_D0 */
				 <STM32_PINMUX('D', 15, ANALOG)>, /* FMC_D1 */
				 <STM32_PINMUX('D', 0, ANALOG)>, /* FMC_D2 */
				 <STM32_PINMUX('D', 1, ANALOG)>, /* FMC_D3 */
				 <STM32_PINMUX('E', 7, ANALOG)>, /* FMC_D4 */
				 <STM32_PINMUX('E', 8, ANALOG)>, /* FMC_D5 */
				 <STM32_PINMUX('E', 9, ANALOG)>, /* FMC_D6 */
				 <STM32_PINMUX('E', 10, ANALOG)>, /* FMC_D7 */
				 <STM32_PINMUX('A', 9, ANALOG)>, /* FMC_NWAIT */
				 <STM32_PINMUX('G', 9, ANALOG)>; /* FMC_NE2_FMC_NCE */
		};
	};

	ccmp13_i2c4_pins_a: ccmp13_i2c4-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 15, AF6)>, /* I2C4_SCL */
				 <STM32_PINMUX('B', 9, AF6)>; /* I2C4_SDA */
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	ccmp13_i2c4_sleep_pins_a: ccmp13_i2c4-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('E', 15, ANALOG)>, /* I2C4_SCL */
				 <STM32_PINMUX('B', 9, ANALOG)>; /* I2C4_SDA */
		};
	};

	ccmp13_rtc_out1_pins_a: ccmp13_rtc-out1-pins-0 {
		pins {
			pinmux = <STM32_PINMUX('C', 13, ANALOG)>; /* RTC_OUT1 */
		};
	};

	ccmp13_usart2_pins_a: ccmp13_usart2-0 {
		pins1 {
			pinmux = <STM32_PINMUX('H', 12, AF1)>, /* USART2_TX */
				 <STM32_PINMUX('A', 1, AF7)>; /* USART2_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins2 {
			pinmux = <STM32_PINMUX('H', 8, AF3)>, /* USART2_RX */
				 <STM32_PINMUX('D', 3, AF3)>; /* USART2_CTS_NSS */
			bias-disable;
		};
	};

	ccmp13_usart2_idle_pins_a: ccmp13_usart2-idle-0 {
		pins1 {
			pinmux = <STM32_PINMUX('H', 12, ANALOG)>, /* USART2_TX */
				 <STM32_PINMUX('D', 3, ANALOG)>; /* USART2_CTS_NSS */
		};
		pins2 {
			pinmux = <STM32_PINMUX('A', 1, AF3)>; /* USART2_RTS */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
		pins3 {
			pinmux = <STM32_PINMUX('H', 8, AF3)>; /* USART2_RX */
			bias-disable;
		};
	};

	ccmp13_usart2_sleep_pins_a: ccmp13_usart2-sleep-0 {
		pins {
			pinmux = <STM32_PINMUX('H', 12, ANALOG)>, /* USART2_TX */
				 <STM32_PINMUX('H', 8, ANALOG)>, /* USART2_RTS */
				 <STM32_PINMUX('A', 1, ANALOG)>, /* USART2_RX */
				 <STM32_PINMUX('D', 3, ANALOG)>; /* USART2_CTS_NSS */
		};
	};
};

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry id='sameaddr3'>
<refentryinfo><date>28 Nov 2000</date></refentryinfo>
<refmeta>
<refentrytitle>IPSEC_SAMEADDR</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>28 Nov 2000</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>ipsec sameaddr</refname>
<refname>ipsec addrcmp</refname>
<refname>ipsec samesubnet</refname>
<refname>ipsec addrinsubnet</refname>
<refname>ipsec subnetinsubnet</refname>
<refname>ipsec subnetishost</refname>
<refname>ipsec samesaid</refname>
<refname>ipsec sameaddrtype</refname>
<refname>ipsec samesubnettype</refname>
<refpurpose>do comparisons for addresses, subnets, SA IDs and address families</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;freeswan.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>int <function>sameaddr</function></funcdef>
    <paramdef>const ip_address * <parameter>a</parameter></paramdef>
    <paramdef>const ip_address * <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>addrcmp</function></funcdef>
    <paramdef>const ip_address * <parameter>a</parameter></paramdef>
    <paramdef>const ip_address * <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>samesubnet</function></funcdef>
    <paramdef>const ip_subnet * <parameter>a</parameter></paramdef>
    <paramdef>const ip_subnet * <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>addrinsubnet</function></funcdef>
    <paramdef>const ip_address * <parameter>a</parameter></paramdef>
    <paramdef>const ip_subnet * <parameter>s</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>subnetinsubnet</function></funcdef>
    <paramdef>const ip_subnet * <parameter>a</parameter></paramdef>
    <paramdef>const ip_subnet * <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>subnetishost</function></funcdef>
    <paramdef>const ip_subnet * <parameter>s</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>samesaid</function></funcdef>
    <paramdef>const ip_said * <parameter>a</parameter></paramdef>
    <paramdef>const ip_said * <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>sameaddrtype</function></funcdef>
    <paramdef>const ip_address * <parameter>a</parameter></paramdef>
    <paramdef>const ip_address * <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function>samesubnettype</function></funcdef>
    <paramdef>const ip_subnet * <parameter>a</parameter></paramdef>
    <paramdef>const ip_subnet * <parameter>b</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>These functions do various comparisons and tests on the
<emphasis remap='I'>ip_address</emphasis>
type and
<emphasis remap='I'>ip_subnet</emphasis>
types.</para>

<para><emphasis remap='I'>Sameaddr</emphasis>
returns
non-zero
if addresses
<varname role='parameter'>a</varname>
and
<varname role='parameter'>b</varname>
are identical,
and
<literal>0</literal>
otherwise.
Addresses of different families are never identical.</para>

<para><emphasis remap='I'>Addrcmp</emphasis>
returns
<option>-1</option>,
<literal>0</literal>,
or
<literal>1</literal>
respectively
if address
<varname role='parameter'>a</varname>
is less than, equal to, or greater than
<varname role='parameter'>b</varname>.
If they are not of the same address family,
they are never equal;
the ordering reported in this case is arbitrary
(and probably not useful) but consistent.</para>

<para><emphasis remap='I'>Samesubnet</emphasis>
returns
non-zero
if subnets
<varname role='parameter'>a</varname>
and
<varname role='parameter'>b</varname>
are identical,
and
<literal>0</literal>
otherwise.
Subnets of different address families are never identical.</para>

<para><emphasis remap='I'>Addrinsubnet</emphasis>
returns
non-zero
if address
<varname role='parameter'>a</varname>
is within subnet
<varname role='parameter'>s</varname>
and
<literal>0</literal>
otherwise.
An address is never within a
subnet of a different address family.</para>

<para><emphasis remap='I'>Subnetinsubnet</emphasis>
returns
non-zero
if subnet
<varname role='parameter'>a</varname>
is a subset of subnet
<varname role='parameter'>b</varname>
and
<literal>0</literal>
otherwise.
A subnet is deemed to be a subset of itself.
A subnet is never a subset of another
subnet if their address families differ.</para>

<para><emphasis remap='I'>Subnetishost</emphasis>
returns
non-zero
if subnet
<varname role='parameter'>s</varname>
is in fact only a single host,
and
<literal>0</literal>
otherwise.</para>

<para><emphasis remap='I'>Samesaid</emphasis>
returns
non-zero
if SA IDs
<varname role='parameter'>a</varname>
and
<varname role='parameter'>b</varname>
are identical,
and
<literal>0</literal>
otherwise.</para>

<para><emphasis remap='I'>Sameaddrtype</emphasis>
returns
non-zero
if addresses
<varname role='parameter'>a</varname>
and
<varname role='parameter'>b</varname>
are of the same address family,
and
<literal>0</literal>
otherwise.</para>

<para><emphasis remap='I'>Samesubnettype</emphasis>
returns
non-zero
if subnets
<varname role='parameter'>a</varname>
and
<varname role='parameter'>b</varname>
are of the same address family,
and
<literal>0</literal>
otherwise.</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>inet</refentrytitle><manvolnum>3</manvolnum></citerefentry>, <citerefentry><refentrytitle>ipsec_initaddr</refentrytitle><manvolnum>3</manvolnum></citerefentry></para>
</refsect1>

<refsect1 id='history'><title>HISTORY</title>
<para>Written for the FreeS/WAN project by Henry Spencer.</para>
</refsect1>
</refentry>


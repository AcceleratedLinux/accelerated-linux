<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry>
<refmeta>
<refentrytitle>IPSEC LWDNSQ</refentrytitle>
<manvolnum>8</manvolnum>
<refmiscinfo class='date'>28 October 2006</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>lwdnsq</refname>
<refpurpose>lookup items in DNS to help pluto (and others)</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>ipsec</command>
    <arg choice='plain'><replaceable>lwdnsq</replaceable></arg>
    <arg choice='opt'>--help </arg>
    <arg choice='opt'>--prompt </arg>
    <arg choice='opt'>--serial </arg>
    <arg choice='opt'>--debug </arg>
    <arg choice='opt'>--log <replaceable>logfile</replaceable></arg>
    <arg choice='opt'>--regress </arg>
    <arg choice='opt'>--ignoreeof </arg>
    <sbr/>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>The <emphasis remap='B'>ipsec lwdnsq</emphasis> is a helper program that does DNS lookups for other programs. It implements an asynchronous interface on stdin/stdout, with an ASCII driven command language.</para>


<para>If stdin is a tty or if the <option>--prompt</option> option is given, then it issues a prompt to the user. Otherwise, it is silent, except for results.</para>


<para>The program will accept multiple queries concurrently, with each result being marked with the ID provided on the output. The IDs are strings.</para>


<para>If the <option>--serial</option> option is given, then the program will not attempt to execute concurrent queries, but will serialize all input and output.</para>

</refsect1>

<refsect1 id='query_language'><title>QUERY LANGUAGE</title>
<para>There are twelve commands that the program understands. This is to lookup different types of records in both the forward and reverse maps. Every query includes a queryid, which is returned in the output, on every single line to identify the transaction.</para>

<refsect2 id='help'><title>HELP</title>
<para>This request lists the available commands</para>
</refsect2>

<refsect2 id='quit'><title>QUIT</title>
<para>This request causes lwdnsq to quit.</para>
</refsect2>

<refsect2 id='debug'><title>DEBUG</title>
<para>This request enables debugging.</para>
</refsect2>

<refsect2 id='key_queryid_fqdn'><title>KEY queryid FQDN</title>


<para>This request looks up the KEY resource record for the given <emphasis remap='B'>FQDN.</emphasis>.</para>

</refsect2>

<refsect2 id='key4_queryid_abcd'><title>KEY4 queryid A.B.C.D</title>


<para>This request looks up the KEY resource record found in the reverse map for the IP version 4 address <emphasis remap='B'>A.B.C.D</emphasis>, i.e. it looks up D.C.B.A.in-addr.arpa.</para>

</refsect2>

<refsect2 id='key6_queryid_abcd'><title>KEY6 queryid A:B::C:D</title>


<para>This request looks up the KEY resource record found in the reverse map for the IPv6 address <emphasis remap='B'>A:B::C:D</emphasis>, i.e. it looks the 32-nibble long entry in ip6.arpa (and ip6.int).</para>

</refsect2>

<refsect2 id='txt_queryid_abcd'><title>TXT queryid A.B.C.D</title>


<para>This request looks up the TXT resource record found[?]</para>

</refsect2>
<refsect2 id='txt4_queryid_abcd'><title>TXT4 queryid A.B.C.D</title>


<para>This request looks up the TXT resource record found in the reverse map for the IP version 4 address <emphasis remap='B'>A.B.C.D</emphasis>, i.e. it looks up D.C.B.A.in-addr.arpa.</para>

</refsect2>

<refsect2 id='txt6_queryid_abcd'><title>TXT6 queryid A:B::C:D</title>


<para>This request looks up the TXT resource record found in the reverse map for the IPv6 address <emphasis remap='B'>A:B::C:D</emphasis>, i.e. it looks the 32-nibble long entry in ip6.arpa (and ip6.int).</para>

</refsect2>

<refsect2 id='key_queryid_fqdn2'><title>KEY queryid FQDN</title>


<para>This request looks up the IPSECKEY resource record for the given <emphasis remap='B'>FQDN.</emphasis>. See note about IPSECKEY processing, below.</para>

</refsect2>

<refsect2 id='ipseckey_queryid_abcd'><title>IPSECKEY queryid A.B.C.D</title>
<para>This request looks up the IPSECKEY resource record found in the reverse map[?]</para>
</refsect2>

<refsect2 id='ipseckey4_queryid_abcd'><title>IPSECKEY4 queryid A.B.C.D</title>


<para>This request looks up the IPSECKEY resource record found in the reverse map for the IP version 4 address <emphasis remap='B'>A.B.C.D</emphasis>, i.e. it looks up D.C.B.A.in-addr.arpa. See special note about IPSECKEY processing, below.</para>

</refsect2>

<refsect2 id='ipseckey6_queryid_abcd'><title>IPSECKEY6 queryid A:B::C:D</title>


<para>This request looks up the IPSECKEY resource record found in the reverse map for the IPv6 address <emphasis remap='B'>A:B::C:D</emphasis>, i.e. it looks the 32-nibble long entry in ip6.arpa (and ip6.int). See special note about IPSECKEY processing, below.</para>

</refsect2>

<refsect2 id='oe4_queryid_abcd'><title>OE4 queryid A.B.C.D</title>


<para>This request looks an appropriate record for Opportunistic Encryption for the given IP address. This attempts to look for the delegation record. This may be one of IPSECKEY, KEY, or TXT record. Unless configured otherwise, (see OE4 Directives, below), then a query type of ANY will be used to retrieve all relevant records, and all will be returned.</para>

</refsect2>

<refsect2 id='oe6_queryid_abcd'><title>OE6 queryid A:B::C:D</title>


<para>This request looks an appropriate record for Opportunistic Encryption for the given IPv6 address. This attempts to look for the delegation record. This may be one of IPSECKEY, KEY, or TXT record. Unless configured otherwise, (see OE Directives, below), then a query type of ALL will be used to retrieve all relevant records, and all will be returned. i.e. it looks the 32-nibble long entry in ip6.arpa (and ip6.int).</para>

</refsect2>

<refsect2 id='a_queryid_fqdn'><title>A queryid FQDN</title>


<para>This request looks up the A (IPv4) resource record for the given <emphasis remap='B'>FQDN.</emphasis>.</para>

</refsect2>

<refsect2 id='aaaa_queryid_fqdn'><title>AAAA queryid FQDN</title>


<para>This request looks up the AAAA (IPv6) resource record for the given <emphasis remap='B'>FQDN.</emphasis>.</para>

</refsect2>

<refsect2 id='vpn4_queryid'><title>VPN4</title>
<para>synonomous for KEY4</para>
</refsect2>

<refsect2 id='vpn6_queryid'><title>VPN6</title>
<para>synonomous for KEY6</para>
</refsect2>


</refsect1>

<refsect1 id='replies_to_queries'><title>REPLIES TO QUERIES</title>
<para>All replies from the queries are in the following format:</para> 

<literallayout remap='.nf'>

&lt;ID&gt; &lt;TIME&gt; &lt;TTL&gt; &lt;TYPE&gt; &lt;TYPE-SPECIFIC&gt; \n

</literallayout> <!-- .fi -->
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='I'>ID</emphasis></term>
  <listitem>
<para>this is the <emphasis remap='B'>queryid</emphasis> value that was provided in the query. It is repeated on every line to permit the replies to be properly associated with the query. When the response is not ascribable to particular query (such as for a mis-formed query), then the query ID "0" will be used.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>TIME</emphasis></term>
  <listitem>
<para>this is the current time in seconds since epoch.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>TTL</emphasis></term>
  <listitem>
<para>for answers which have a time to live, this is the current value. The answer is valid for this number of seconds. If there is no useful value here, then the number 0 is used.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><emphasis remap='I'>TYPE</emphasis></term>
  <listitem>
<para>This is the type of the record that is being returned. The types are described in the next section. The TYPE specific data that follows is specific to the type.</para>
 

  </listitem>
  </varlistentry>
</variablelist>

<para>The replies are limited to 4096 bytes, a value defined as <emphasis remap='B'>LWDNSQ_RESULT_LEN_MAX</emphasis>. This is defined in <emphasis remap='I'>freeswan.h</emphasis>.</para>


<para>All of the replies which include resource records use the standard presentation format (with no line feeds or carriage returns) in their answer.</para>


<refsect2 id='start'><title>START</title>


<para>This reply indicates that a query has been received and has been started. It serves as an anchor point for timing, as well as an acknowledgement.</para>

</refsect2>

<refsect2 id='done'><title>DONE</title>


<para>This reply indicates that a query is entirely over, and no further information from this query will be sent.</para>

</refsect2>

<refsect2 id='retry'><title>RETRY</title>


<para>This reply indicates that a query is entirely over, but that no data was found. The records may exist, but appropriate servers could not be reached.</para>

</refsect2>

<refsect2 id='fatal'><title>FATAL</title>


<para>This reply indicates that a query is entirely over, and that no data of the type requested could be found. There were no timeouts, and all servers were available and confirmed non-existances. There may be NXT records returned prior to this.</para>

</refsect2>

<refsect2 id='cname'><title>CNAME</title>


<para>This is an interim reply, and indicates that a CNAME was found (and followed) while performing the query. The value of the CNAME is present in the type specific section.</para>

</refsect2>

<refsect2 id='cnamefrom'><title>CNAMEFROM</title>


<para>This is an interim reply, and indicates that a CNAME was found. The original name that was queries for was not the canonical name, and this reply indicates the name that was actually followed.</para>

</refsect2>

<refsect2 id='name2'><title>NAME</title>


<para>This is an interim reply. The original name that was queries for was not the canonical name. This reply indicates the canonical name.</para>

</refsect2>

<refsect2 id='dnssec'><title>DNSSEC</title>


<para>This is an interim reply. It is followed either by "OKAY" or "not present. It indicates if DNSSEC was available on the reply.</para>

</refsect2>

<refsect2 id='txt_and_adtxt'><title>TXT and AD-TXT</title>


<para>This is an interim reply. If there are TXT resource records in the reply, then each one is presented using this type. If preceded by AD-, then this record was signed with DNSSEC.</para>

</refsect2>

<refsect2 id='a_and_ada'><title>A and AD-A</title>


<para>This is an interim reply. If there are A resource records in the reply, then each one is presented using this type. If preceded by AD-, then this record was signed with DNSSEC.</para>

</refsect2>

<refsect2 id='aaaa_and_adaaaa'><title>AAAA and AD-AAAA</title>


<para>This is an interim reply. If there are AAAA resource records in the reply, then each one is presented using this type. If preceded by AD-, then this record was signed with DNSSEC.</para>

</refsect2>

<refsect2 id='ptr_and_adptr'><title>PTR and AD-PTR</title>


<para>This is an interim reply. If there are PTR resource records in the reply, then each one is presented using this type. If preceded by AD-, then this record was signed with DNSSEC.</para>

</refsect2>

<refsect2 id='key_and_adkey'><title>KEY and AD-KEY</title>


<para>This is an interim reply. If there are KEY resource records in the reply, then each one is presented using this type. If preceded by AD-, then this record was signed with DNSSEC.</para>

</refsect2>

<refsect2 id='ipseckey_and_adipseckey'><title>IPSECKEY and AD-IPSECKEY</title>


<para>This is an interim reply. If there are IPSEC resource records in the reply, then each one is presented using this type. If preceded by AD-, then this record was signed with DNSSEC.</para>

</refsect2>
</refsect1>

<refsect1 id='special_ipseckey_processing'><title>SPECIAL IPSECKEY PROCESSING</title>
<para>At the time of this writing, the IPSECKEY resource record is not entirely specified. In particular no resource record number has been assigned. This program assumes that it is resource record number 45. If the file /etc/ipsec.d/lwdnsq.conf exists, and contains a line like</para> 

<literallayout remap='.nf'>

ipseckey_rr=<emphasis remap='B'>number</emphasis>

</literallayout> <!-- .fi -->
<para> then this number will be used instead. The file is read only once at startup.</para>

</refsect1>

<refsect1 id='oe_directives'><title>OE DIRECTIVES</title>
<para>If the file /etc/ipsec.d/lwdnsq.conf exists, and contains a line like</para> 

<literallayout remap='.nf'>

queryany=false

</literallayout> <!-- .fi -->
<para> then instead of doing an ALL query when looking for OE delegation records, lwdnsq will do a series of queries. It will first look for IPSECKEY, and then TXT record. If it finds neither, it will then look for KEY records of all kinds, although they do not contain delegation information.</para>

</refsect1>

<refsect1 id='special_ipseckey_processing2'><title>SPECIAL IPSECKEY PROCESSING</title>
<literallayout remap='.nf'>

/etc/ipsec.d/lwdnsq.conf

</literallayout> <!-- .fi -->

</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para>Not all listed commands are actually implemented.</para>
</refsect1>

<refsect1 id='author'><title>AUTHOR</title>
<para>Michael Richardson &lt;mcr@sandelman.ottawa.on.ca&gt;.</para>
</refsect1>
</refentry>


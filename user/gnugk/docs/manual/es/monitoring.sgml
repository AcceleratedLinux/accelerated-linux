<sect>Monitoreando el Gatekeeper
<label id="monitor">
<p>
<sect1>Puerto de Estado
<p>
El puerto de estado es una interfaz externa para monitorear y controlar el gatekeeper.
El gatekeeper arrojará mensajes sobre las llamadas actuales hacia todos 
los clientes conectados y puede recibir comandos mediante esta interfaz.

<p>
Los mensajes enviados por el gatekeeper hacia el puerto de estado estan agrupados 
dentro de tres <bf/Niveles de rastreo de salida/:
<itemize>
<item>Nivel 0
	<quote>
	Notificaciones de recarga (Reload) y respuesta directa a comandos ejecutados.
	</quote>
<item>Nivel 1
	<quote>
	Notificaciones de recarga (Reload), respuesta directa a comandos ejecutados, CDRs y Route Requests.
	</quote>
<item>Nivel 2
	<quote>
	Todas las salidas (Notificacione se recarga (Reload), respuesta directa a comandos ejecutados, 
	CDRs, Route Requests,RAS, ...). Éste es el nivel de salida por <bf/defecto/.
	</quote>
</itemize>
El cliente que esté conectado hacia el puerto de estado puede seleccionar el nivel de salida (output level) que él desee.

<p>
La interfaz es un simple puerto TCP (por defecto: 7000), usted puede conectarse hacia éste mediante telnet u otro cliente. 
Un ejemplo de un cliente es el Java GUI, aka GkGUI. Otro ejemplo es la aplicación Automatic Call Distribution, aka GnuGk ACD.

<sect2>Áreas de aplicación.
<p>
Depende de usted lo que haga con el poder del puerto de estado, pero aqui hay algunas ideas:
<itemize>
<item>Monitoreo de llamadas
<item>Monitoreo de endpoints registrados
<item>Interfaz Gráfica de usuario (GUI)
<quote>
Ver GkGUI.
</quote>
<item>Ruteo de llamadas
<quote>
Ver GnuGk ACD.
</quote>
<item>Aplicaciones de facturación
<quote>
Analice los mensajes CDR y adminístrelos luego desde una aplicación de facturación.
</quote>
<item>Interfaz con aplicaciones externas
<quote>
Si usted no desea publicar el código fuente de alguna característica adicional, simplemente publique la funcionalidad central y únalo mediante el puerto de estado y mantenga la parte externa como privada.
</quote>
</itemize>
<p>
<sect2>Ejemplos:
<p>
Supongamos que usted esta interesado en los CDRs (call details records) y quiere un proceso que trabaje en modo batch en intervalos regulares.

Aqui está un script simple escrito en Perl (<tt/gnugk_cdr.pl/) que inicia el gatekeeper y además conecta un simple cliente para la Status Interface y registra los CDRs dentro de un logfile. Usted debería modificar un poco este script para ajustarlo a sus necesidades.

<verb>
#!/usr/bin/perl
# sample program that demonstrates how to write the CDRs to a log file
use strict;
use IO::Socket;
use IO::Handle;

my $logfile = "/home/jan/cdr.log";	# CHANGE THIS
my $gk_host = "localhost";
my $gk_port = 7000;
my $gk_pid;

if ($gk_pid = fork()) {
	# parent will listen to gatekeeper status
	sleep(1);	# wait for gk to start
	my $sock = IO::Socket::INET->new(PeerAddr => $gk_host, PeerPort => $gk_port, Proto => 'tcp');
	if (!defined $sock) {
		die "Can't connect to gatekeeper at $gk_host:$gk_port";
	}
	$SIG{HUP} = sub { kill 1, $gk_pid; };	# pass HUP to gatekeeper
	$SIG{INT} = sub { close (CDRFILE); kill 2, $gk_pid; };	# close file when terminated

	open (CDRFILE, ">>$logfile");
	CDRFILE->autoflush(1);	# don't buffer output
	while (!$sock->eof()) {
		my $msg = $sock->getline();
		$msg = (split(/;/, $msg))[0];	# remove junk at end of line
		my $msgtype = (split(/\|/, $msg))[0];
		if ($msgtype eq "CDR") {
			print CDRFILE "$msg\n";
		}
	}
	close (CDRFILE);
} else {
	# child starts gatekeeper
	exec("gnugk");
}
</verb>
<p>
Tenga siempre presente que éste es justamente un ejemplo para mostrar el uso del puerto de estado.
Usted puede utilizar el módulo FileAcct para registrar los CDRs en un sistema en producción.

<sect2>GUI para el gatekeeper
<p>
Hay algunas Graphical User Interface (GUI) frontends para el Gatekeeper.

<itemize>
<item>Java GUI<p>
Desarrollado por Jan Willamowius.
Usted puede monitorear los registros y llamadas que están en el gatekeeper.
Un clic derecho sobre un botón le muestra a usted un menú desplegable con información de dicho endpoint.

Esta GUI trabaja con Java 1.0 soportado por muchos navegadores web.
Por razones de seguridad en GUI debe ser ejecutado como una aplicación standalone
o administrada por un servidor web sobre el mismo número de IP del gatekeeper
(usted no puede ejecutar esta GUI como un applet mediante el archivo local).

La aplicación está disponible en
<url url="http://www.gnugk.org/h323gui.html" name="GnuGk Java GUI">

<item>GkGUI<p>
Una nueva aplicación standalone Java desarrollado por
<url url="http://www.citron.com.tw/" name="Citron Network Inc.">
Este requiere Java 1.4. Entre las nuevas características se incluyen:

<itemize>
<item>Monitorea múltiples gatekeepers simultáneamente.
<item>Dos modos de vista: Button List y Tree List.
<item>Call Detail Record(CDR) y estadísticas.
<item>GK Status Log.
<item>Colores diferentes para diferentes tipos de endpoints.
<item>Modifica la configuración del gatekeeper.
<item>Forza a desregistrar endpoints.
<item>Guarda e imprime el estado del log y del CDR.
</itemize>

El GkGUI está lanzada bajo GNU General Public License, disponible en
<url url="http://www.gnugk.org/h323develop.html#java" name="GnuGk Development">
</itemize>

<sect1>Comandos de Referencia
<p>
Esta sección muestra todos los comandos que usted puede enviar al puerto de estado (manualmente o mediante una aplicación externa). Todos los comandos son case-insensitive. Pero algunos parámetros pueden ser sensibles a mayúsculas.
<p>
El comando <tt/help/ o <tt/h/ le mostrará una lista de todos los comando disponibles.
<p>
<itemize>
<item><tt/Reload/
<p>Recarga o reinicia la configuración.

<item><tt/Version/, <tt/v/
<p>Muestra la versión e información del Sistema Operativo donde está ejecutándose el gatekeeper.

<item><tt/Statistics/, <tt/s/
<p>Muestra información estadística del gatekeeper.
<descrip>
<tag/Ejemplo:/
<tscreen><verb>
Statistics
-- Endpoint Statistics --
Total Endpoints: 21  Terminals: 17  Gateways: 4  NATed: 2
Cached Endpoints: 1  Terminals: 1  Gateways: 0
-- Call Statistics --
Current Calls: 1 Active: 1 From Neighbor: 0 From Parent: 0
Total Calls: 1539  Successful: 1076  From Neighbor: 60  From Parent: 5
Startup: Fri, 21 Jun 2002 10:50:22 +0800   Running: 11 days 04:22:59
;
</verb></tscreen>
</descrip>

<item><tt/PrintAllRegistrations/, <tt/r/, <tt/?/
<p>Muestra todos los endpoints registrados.
<descrip>
<tag/Formato:/
<tscreen><verb>
AllRegistrations
RCF|IP:Port|Aliases|Terminal_Type|EndpointID
...
Number of Endpoints: n
;
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
AllRegistrations
RCF|10.1.1.10:1720|800:dialedDigits=Wei:h323_ID|terminal|1289_endp
RCF|10.0.1.43:1720|613:dialedDigits=Jacky Tsai:h323_ID|terminal|1328_endp
RCF|10.0.1.55:1720|705:dialedDigits=Sherry Liu:h323_ID|terminal|1333_endp
Number of Endpoints: 3
;
</verb></tscreen>
</descrip>

<item><tt/PrintAllRegistrationsVerbose/, <tt/rv/, <tt/??/
<p>Muestra el detalle de todos los endpoints registrados.
<descrip>
<tag/Formato:/
<tscreen><verb>
AllRegistrations
RCF|IP:Port|Aliases|Terminal_Type|EndpointID
Registration_Time C(Active_Call/Connected_Call/Total_Call) &lt;r&gt;
[Prefixes: ##] (gateway only)
...
Number of Endpoints: n
;
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
AllRegistrations
RCF|10.0.1.8:1720|Accel-GW2:h323_ID|gateway|1322_endp
Wed, 26 Jun 2002 16:40:03 +0800 C(1/5/33) &lt;1&gt;
Prefixes: 09,002
RCF|10.1.1.10:1720|800:dialedDigits=Wei:h323_ID|terminal|1289_endp
Wed, 26 Jun 2002 16:40:55 +0800 C(0/32/39) &lt;1&gt;
RCF|10.0.1.66:1720|716:dialedDigits=Vicky:h323_ID|terminal|1425_endp
Wed, 26 Jun 2002 16:40:58 +0800 C(1/47/53) &lt;1&gt;
Number of Endpoints: 2
;
</verb></tscreen>
</descrip>

<item><tt/PrintCurrentCalls/, <tt/c/, <tt/!/
<p>Muestra todas las llamadas actuales utilizando la misma sintaxis de ACF como en el establecimiento de llamada.
<descrip>
<tag/Formato:/
<tscreen><verb>
CurrentCalls
Call No. # | CallID | Call_Duration | Left_Time
Dialed_Number
ACF|Caller_IP:Port|Caller_EPID|CRV|DestinationInfo|SrcInfo|IsAnswered;
ACF|Callee_IP:Port|Callee_EPID|CRV|DestinationInfo|SrcInfo|IsAnswered;
...
Number of Calls: Current_Call Active: Active_Call From Neighbor: Call_From_Neighbor \
From Parent: Call_From_Parent
;
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
CurrentCalls
Call No. 29 | CallID bd c6 17 ff aa ea 18 10 85 95 44 45 53 54 77 77 | 109 | 491
Dial 0953378875:dialedDigits
ACF|10.0.1.49:1720|4048_CGK1|25263|frank:h323_ID|gunter:h323_ID|false;
ACF|10.1.1.1:1720|4037_CGK1|25263|gunter:h323_ID|frank:h323_ID|true;
Call No. 30 | CallID 70 0e dd c0 9a cf 11 5e 00 01 00 05 5d f9 28 4d | 37 | 563
Dial 0938736860:dialedDigits
ACF|10.0.1.48:1032|4041_CGK1|11896|sue:h323_ID|peter:h323_ID|false;
ACF|10.1.1.1:1720|4037_CGK1|11896|peter:h323_ID|sue:h323_ID|true;
Number of Calls: 2 Active: 2 From Neighbor: 0 From Parent: 0
;
</verb></tscreen>
</descrip>

<item><tt/PrintCurrentCallsVerbose/, <tt/cv/, <tt/!!/
<p>Muestra el detalle de todas las llamadas actuales.
<descrip>
<tag/Formato:/
<tscreen><verb>
CurrentCalls
Call No. # | CallID | Call_Duration | Left_Time
Dialed_Number
ACF|Caller_IP:Port|Caller_EPID|CRV|DestinationInfo|SrcInfo|IsAnswered;
ACF|Callee_IP:Port|Callee_EPID|CRV|DestinationInfo|SrcInfo|IsAnswered;
# Caller_Aliases|Callee_Aliases|Bandwidth|Connected_Time &lt;r&gt;
...
Number of Calls: Current_Call Active: Active_Call From NB: Call_From_Neighbor
;
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
CurrentCalls
Call No. 48 | CallID 7d 5a f1 0a ad ea 18 10 89 16 00 50 fc 3f 0c f5 | 30 | 570
Dial 0225067272:dialedDigits
ACF|10.0.1.200:1720|1448_endp|19618|frank:h323_ID|gunter:h323_ID|false;
ACF|10.0.1.7:1720|1325_endp|19618|gunter:h323_ID|frank:h323_ID|true;
# Sherry:h323_ID|Accel-GW1:h323_ID|200000|Wed, 26 Jun 2002 17:29:55 +0800 &lt;2&gt;
Number of Calls: 1 Active: 1 From NB: 0
;
</verb></tscreen>
</descrip>

<item><tt/Find/, <tt/f/newline>
<p>Busca un endpoint registrado mediante el alias o un prefijo. Para buscar una alias
de un tipo específico (h323_ID, dialedDigits), anteponga el tipo de alias
(h323, e164, url, email) al alias, seguido por dos puntos (:).
<descrip>
<tag/Formato:/
<tscreen><verb>
Find Alias
RCF|IP:Port|Aliases|Terminal_Type|EndpointID
;
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
f 800
RCF|10.1.1.10:1720|800:dialedDigits=Wei:h323_ID|terminal|1289_endp
;
f 801
SoftPBX: alias 801 not found!
f h323:Wei
RCF|10.1.1.10:1720|800:dialedDigits=Wei:h323_ID|terminal|1289_endp
;
</verb></tscreen>
</descrip>

<item><tt/FindVerbose/, <tt/fv/<newline>
<p>Busca el detalle de un endpoint registrado mediante un alias o un prefijo. Para buscar una alias
de un tipo específico (h323_ID, dialedDigits), anteponga el tipo de alias
(h323, e164, url, email) al alias, seguido por dos puntos (:).
<descrip>
<tag/Formato:/
<tscreen><verb>
FindVerbose Alias
RCF|IP:Port|Aliases|Terminal_Type|EndpointID
Registration_Time C(Active_Call/Connected_Call/Total_Call) &lt;r&gt;
[Prefixes: ##] (gateway only)
;
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
fv 02
RCF|10.0.1.100:1720|TFN:h323_ID|gateway|4037_CGK1
Wed, 26 Jun 2002 17:47:29 +0800 C(0/84/120) &lt;1&gt;
Prefixes: 02,09
;
</verb></tscreen>
</descrip>

<item><tt/UnregisterIP/<newline>
<p>Obliga a desregistrar un endpoint mediante su dirección IP y su puerto de señalización de llamada.
<descrip>
<tag/Formato:/
<tscreen><verb>
UnregisterIP IP[:Port]
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
UnregisterIP 10.0.1.31:1720
URQ|10.0.1.31:1032|1326_endp|maintenance;
SoftPBX: Endpoint 10.0.1.31:1720 unregistered!
</verb></tscreen>
</descrip>

<item><tt/UnregisterAlias/<newline>
<p>Obliga a desregistrar un endpoint mediante uno de sus alias. Para emparejar un alias
de un tipo específico (h323_ID, dialedDigits), anteponga el nombre del tipo de alias
(h323, e164, url, email) al alias, seguido por dos puntos (:).
<descrip>
<tag/Formato:/
<tscreen><verb>
UnregisterAlias Alias
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
UnregisterAlias 601
URQ|10.0.1.31:1032|1326_endp|maintenance;
SoftPBX: Endpoint 601 unregistered!
</verb></tscreen>
</descrip>

<item><tt/UnregisterAllEndpoints/<newline>
<p>Obliga a desregistrar todos los endpoints registrados.
<descrip>
<tag/Formato:/
<tscreen><verb>
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
UnregisterAllEndpoints
URQ|10.0.1.7:1024|1325_endp|maintenance;
URQ|10.0.1.8:1024|1322_endp|maintenance;
URQ|10.0.1.32:1032|1324_endp|maintenance;
URQ|10.0.1.36:1032|1323_endp|maintenance;
URQ|10.0.1.42:1032|1318_endp|maintenance;
Done
;
</verb></tscreen>
</descrip>

<item><tt/DisconnectCall/<newline>
<p>Desconecta una llamada mediante su número.(interno, número de llamada asignada por el gatekeeper,
no el número de teléfono del emisor ni del receptor).
<descrip>
<tag/Formato:/
<tscreen><verb>
DisconnectCall Number
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
DisconnectCall 1533
</verb></tscreen>
</descrip>

<item><tt/DisconnectIP/<newline>
<p>Desconecta todas las llamadas de un endpoint mediante su IP y su puerto de señalización de llamada.
<descrip>
<tag/Formato:/
<tscreen><verb>
DisconnectIP IP[:Port]
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
DisconnectIP 10.0.1.31:1720
</verb></tscreen>
</descrip>

<item><tt/DisconnectAlias/<newline>
<p>Desconecta todas las llamadas de un endpoint mediante uno de sus alias. Para emparejar un alias
de un tipo específico (h323_ID, dialedDigits), anteponga el nombre del tipo de alias
(h323, e164, url, email) al alias, seguido de dos puntos (:).
<descrip>
<tag/Formato:/
<tscreen><verb>
DisconnectAlias Alias
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
DisconnectAlias 601
</verb></tscreen>
</descrip>

<item><tt/ClearCalls/<newline>
<p>Desconecta todas las llamadas existentes en el gatekeeper.

<item><tt/GK/<newline>
<p>Muestra información del gatekeeper padre (parent gatekeeper).

<item><tt/Trace/<newline>
<p>Establece el nivel de rastreo de salida para la interfaz de estado. Éste controla qué mensajes
son enviados a este cliente:
<itemize>
<item><tt/trace 0/ o <tt/trace min/<newline>
	<p>Solamente respuestas directas a comandos y notificaciones de recarga (reload).
<item><tt/trace 1/
	<p>CDRs, respuestas directas a comandos y notificaciones de recarga (reload).
<item><tt/trace 2/ or <tt/trace max/<newline>
	<p>Muestra todo (RAS, CDRs, respuestas directas a comandos y notificaciones de recarga (reload), etc).
</itemize>

<item><tt/Debug/<newline>
<p>Solamente utilizado para propósito de depuración. Opciones:
<itemize>
<item><tt/trc [+|-|n]/<newline>
<p>Muestra/modifica el nivel de rastreo.
<item><tt/cfg SEC PAR/<newline>
<p>Lee y muestra un parámetro de configuración de una sección.
<item><tt/set SEC PAR VAL/<newline>
<p>Escribe un valor a un parámetro de configuración de una sección.
<item><tt/remove SEC PAR/<newline>
<p>Remueve el valor de un parámetro de configuración de una sección.
<item><tt/remove SEC/<newline>
<p>Remueve una sección.
<item><tt/printrm VERBOSE/<newline>
<p>Muestra todos los registros de un endpoint removido.
</itemize>
<descrip>
<tag/Ejemplos:/
<tscreen><verb>
debug trc 3
debug set RoutedMode H245Routed 1
</verb></tscreen>
</descrip>

<item><tt/Who/<newline>
<p>Muestra todos las personas que se encuentran en el puerto de estado.

<item><tt/RouteReject/<newline>
<p>Termina esta llamada sobre una cola virtual.
Este comando es utilizado como respuesta a un evento RouteRequest (ver más adelante).
El CallingEndpointID y el CallRef deben ser devueltos tal como están en el correspondiente RouteRequest.
El parámetro CallID es opcional; si se dá, éste tiene que tener el mismo formato que el
señalado por el RouteRequest con el parámetro SignalCallID=1.
<descrip>
<tag/Formato:/
<tscreen><verb>
RouteReject CallingEndpointID CallRef [CallID]
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
RouteReject endp_4711 1234
</verb></tscreen>
</descrip>

<item><tt/RouteToAlias/, <tt/rta/<newline>
<p>Enruta esta llamada sobre una cola virtual hacia el alias especificado.
Este comando es utilizado como respuesta a un evento RouteRequest (ver más adelante).
El CallingEndpointID y el CallRef deben ser devueltos tal como están en el correspondiente RouteRequest.
El parámetro CallID es opcional; si se dá, éste tiene que tener el mismo formato que el
señalado por el RouteRequest con el parámetro SignalCallID=1.
<descrip>
<tag/Formato:/
<tscreen><verb>
RouteToAlias Alias CallingEndpointID CallRef [CallID]
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
RouteToAlias Suzi endp_4711 1234
</verb></tscreen>
</descrip>

<item><tt/RouteToGateway/, <tt/rtg/<newline>
<p>Enruta esta llamada sobre una cola virtual hacia un alias especificado y establece el destinationSignallAddress.
Este comando es utilizado como una respuesta al evento RouteRequest (ver más adelante).
Usted puede utilizar este comando para rutear llamadas hacia gateways fuera de la zona (out-of-zone) o MCUs no registrados con el gatekeeper. Asegúese que las políticas 'vqueue' y 'explicit' estén en efecto para esas llamadas.
El CallingEndpointID y el CallRef deben ser devueltos tal como están en el correspondiente RouteRequest.
El parámetro CallID es opcional; si se dá, éste tiene que tener el mismo formato que el
señalado por el RouteRequest con el parámetro SignalCallID=1.
<descrip>
<tag/Formato:/
<tscreen><verb>
RouteToGateway Alias IP:Port CallingEndpointID CallRef [CallID]
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
RouteToGateway Suzi 192.168.0.50 endp_4711 1234
</verb></tscreen>
</descrip>

<item><tt/Exit/, <tt/q/<newline>
<p>Cierra el puerto de estado.

<item><tt/TransferCall/<newline>
<p>Trasfiere una llamada establecida desde el alias A hacia el alias B. En un momento dado el alias A está hablando con el alias X, entonces el alias A está hablando con el alias B después del TransferCall.
<p>Actualmente éste trabaja solamente con endpoints que soportan
mensajes Q.931 Facility (por consiguiente éste comando no funciona con Netmeeting).
<descrip>
<tag/Formato:/
<tscreen><verb>
TransferCall Source-Alias New-Destination-Alias
</verb></tscreen>
<tag/Ejemplo:/
<tscreen><verb>
TransferCall Frank Peter
</verb></tscreen>
</descrip>

</itemize>

<sect1>Mensajes de Referencia
<p>Esta sección describe los mensajes de salida hacia la interfaz de estado.

<itemize>
<item><tt/GCF|IP|Aliases|Endpoint_Type;/<newline>
<p>El gatekeeper recibe un GatekeeperRequest (GRQ) y responde con
un GatekeeperConfirm (GCF).

<item><tt/GRJ|IP|Aliases|Endpoint_Type|RejectReason;/<newline>
<p>El gatekeeper recibe un GatekeeperRequest (GRQ) y responde con
un GatekeeperReject (GRJ).

<item><tt/RCF|IP:Port|Aliases|Endpoint_Type|EndpointID;/<newline>
<p>El gatekeeper recibe un RegistrationRequest (RRQ) y responde con
un RegistrationConfirm (RCF).

<item><tt/RRJ|IP|Aliases|Endpoint_Type|RejectReason;/<newline>
<p>El gatekeeper recibe un RegistrationRequest (RRQ) y responde con
a RegistrationReject (RRJ).

<item><tt/ACF|Caller_IP:Port|Caller_EndpointID|CRV|DestinationInfo|SrcInfo|IsAnswered[|CallID];/<newline>
<p>El gatekeeper recibe un AdmissionRequest (ARQ) y responde con
un AdmissionConfirm (ACF).
El CallID es solamente enviado cuando el SignalCallId=1 está configurado.

<item><tt/ARJ|Caller_IP:Port|DestinationInfo|SrcInfo|IsAnswered|RejectReason[|CallID];/<newline>
<p>El gatekeeper recibe un AdmissionRequest (ARQ) y responde con
un AdmissionReject (ARJ).
El CallID es solamente enviado cuando el SignalCallId=1 está configurado.

<item><tt/DCF|IP|EndpointID|CRV|DisengageReason[|CallID];/<newline>
<p>El gatekeeper recibe un DisengageRequest (DRQ) y responde con
un DisengageConfirm (DCF).
El CallID es solamente enviado cuando el SignalCallId=1 está configurado.

<item><tt/DRJ|IP|EndpointID|CRV|RejectReason[|CallID];/<newline>
<p>El gatekeeper recibe un DisengageRequest (DRQ) y responde con
un DisengageReject (DRJ).
El CallID es solamente enviado cuando el SignalCallId=1 está configurado.

<item><tt/LCF|IP|EndpointID|DestinationInfo|SrcInfo;/<newline>
<p>El gatekeeper recibe un LocationRequest (LRQ) y responde con
un LocationConfirm (LCF).

<item><tt/LRJ|IP|DestinationInfo|SrcInfo|RejectReason;/<newline>
<p>El gatekeeper recibe un LocationRequest (LRQ) y responde con
un LocationReject (LRJ).

<item><tt/BCF|IP|EndpointID|Bandwidth;/<newline>
<p>El gatekeeper recibe un BandwidthRequest (BRQ) y responde con
un BandwidthConfirm (BCF).

<item><tt/BRJ|IP|EndpointID|Bandwidth|RejectReason;/<newline>
<p>El gatekeeper recibe un BandwidthRequest (BRQ) y responde con
un BandwidthReject (BRJ).

<item><tt/UCF|IP|EndpointID;/<newline>
<p>El gatekeeper recibe un UnregistrationRequest (URQ) y responde con
un UnregistrationConfirm (UCF).

<item><tt/URJ|IP|EndpointID|RejectReason;/<newline>
<p>El gatekeeper recibe un UnregistrationRequest (URQ) y responde con
un UnregistrationReject (URJ).

<item><tt/IRQ|IP:Port|EndpointID;/<newline>
<p>El gatekeeper envía un InfoRequest (IRQ) hacia un endpoint para consultarle si éste
está aún en actividad. El endpoint debe responder con un InfoRequestResponse (IRR)
inmediatamente.

<item><tt/URQ|IP:Port|EndpointID|Reason;/<newline>
<p>El gatekeeper envía un UnregistrationRequest (URQ) hacia un endpoint para
cancelar su registro. El endpoint debe responder con
un UnregistrationConfirm (UCF).

<item><tt/CDR|CallNo|CallId|Duration|Starttime|Endtime|CallerIP|CallerEndId|/ \
<newline><tt/CalledIP|CalledEndId|DestinationInfo|SrcInfo|GatekeeperID;/
<p>
Después de una llamada desconectada, el registro de detalle de llamada (call detail record) es mostrado (en una línea).

<item><tt/RouteRequest|CallerIP:Port|CallerEndpointId|CallRef|VirtualQueue|CallerAlias[|CallID];/<newline>
<p>Petición para que una aplicación externa enrute una llamada entrante sobre una cola virtual.
Esto puede ser hecho con los comandos RouteToAlias o RouteReject.
El CallID es solamente enviado cuando el SignalCallId=1 está configurado.

</itemize>

<sect1>Filtrado del Puerto de Estado
<label id="statusportfiltering">
<p>
Esta sección facilita el control de la cantidad y tipo de los mensajes de salida presentados al usuario final.
El Filtrado (Filtering) se realiza utilizando expresiones regulares, las mismas que son utilizadas para decidir si incluír (mostrar) o
excluír (ignorar) un mensaje de salida.
El control del Filtrado (Filtering) es realizado utilizando el siguiente conjunto de comandos:

<itemize>
<item><tt/addincludefilter REGEX/<newline>
Agrega una expresión regular a la lista de lo que se va a incluír (include list)

<item><tt/addexcludefilter REGEX/<newline>
Agrega una expresión regular a la lista de lo que se va a excluír (exclude list)

<item><tt/removeincludefilter INDEX/<newline>
Quita el filtro dado INDEX de la lista de inclusiones (include list)

<item><tt/removeexcludefilter INDEX/<newline>
Quita el filtro dado INDEX de la lista de exclusiones (exclude list)

<item><tt/filter 1|0/<newline>
Habilita/Deshabilita el filtrado de Mensajes

<item><tt/printincludefilters/<newline>
Presenta la lista de filtros incluídos (include filter list)

<item><tt/printexcludefilters/<newline>
Presenta la lista de filtros excluídos (exclude filter list)

</itemize>
<p>
Para habilitar el uso de filtros predeterminados, se ha añadido la sección <ref id="gkstatusfilteringsect" name="[GkStatus::Filtering]">.
En esta sección, los usuarios pueden poner sus filtros predeterminados que serán cargados cuando se inicie el Puerto de estado.
<p>
<descrip>
<tag/Ejemplo:/
<tscreen><verb>
[GkStatus::Filtering]
IncludeFilter=.+
ExcludeFilter=.RQ
</verb></tscreen>
</descrip>
<p>
Cuando el Filtrado es activado, mediante el comando <tt/filter 1/, se mostrarán todos los mensajes, pero no aquellas líneas con ARQ, LRQ etc.
El mismo efecto puede lograrse utilizando el comando line:
<tscreen><verb>
addincludefilter .+
addexcludefilter .RQ
filter 1
</verb></tscreen>
<p>
Tenga en cuenta que habilitar el Filtrado cuando no se han definido filtros, automáticamente excluye todos los mensajes de salida.


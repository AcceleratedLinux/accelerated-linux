<sect>Configuración de Vecinos
<p>
<sect1>Sección &lsqb;RasSrv::Neighbors&rsqb;
<label id="neighbor">
<p>
Si el destino de un ARQ es desconocido, el gatekeeper envía LRQs hacia
sus vecinos para preguntarles si ellos tienen este endpoint destino.
Un vecino es seleccionado si uno de sus prefijos se corresponde con el destino
o si éste tiene el prefijo "<tt/*/". Se pueden especificar más de un prefijo.
Usted puede utilizar caracteres especiales como "<tt/./"' y "<tt/!/" para 
emparejar mediante comodines (wildcards) y deshabilitar un prefijo específico.

Recíprocamente, el gatekeeper solamente contestará a los LRQs enviados desde los vecinos
definidos en esta sección.
Si usted especifica un prefijo vacío, ningún LRQ será enviado hacia ese vecino,
pero el gatekeeper aceptará LRQs que vengan desde éste. Para especificar un prefijo vacío
se añade un punto y coma a la entrada del vecino. Ejemplo:<newline>
<newline>
<tt/	GK1=192.168.0.5;/<newline>
<newline>
Si usted no pone el punto y coma, LRQs serán siempre enviados hacia este vecino.

El campo <tt/password/ es utilizado pata autenticar LRQs desde ese vecino.
Revise la sección <ref id="gkauth" name="[Gatekeeper::Auth]"> para más información.

Si una llamada que viene desde un vecino es aceptada o no depende también del parámetro AcceptNeighborsCalls configurado en la sección <ref id="routed" name="[RoutedMode]">.

El manejo de los vecinos ha cambiado significativamente desde la versión 2.0 hasta la version 2.2.
Actualmente los vecinos pueden ser configurados de dos maneras - de la forma anteriormente conocida y de una nueva manera.

<descrip>
<tag/Configuración en el formato anterior:/
<tt>GKID=ip[:port;prefixes;password;dynamic]</tt>
<p>
<tag/Ejemplo:/
<tt/GK1=192.168.0.5;*/<newline>
<tt/GK2=10.0.1.1:1719;035,036;gk2/<newline>
<tt/GK3=gk.citron.com.tw;;gk3;1/
</descrip>

<descrip>
<tag/Configuración en el nuevo formato:/
<tt>GKID="GnuGK" | "CiscoGK" | "ClarentGK" | "GlonetGK"</tt>
<p>
<tag/Ejemplo:/
<tt/[RasSrv::Neighbors]/<newline>
<tt/GK1=CiscoGK/<newline>
<tt/GK2=GnuGK/<newline>
<newline>
<tt/[Neighbor::GK1]/<newline>
<tt/GatekeeperIdentifier=GK1/<newline>
<tt/Host=192.168.1.1/<newline>
<tt/SendPrefixes=02/<newline>
<tt/AcceptPrefixes=*/<newline>
<tt/ForwardLRQ=always/<newline>
<newline>
<tt/[Neighbor::GK2]/<newline>
<tt/GatekeeperIdentifier=GK2/<newline>
<tt/Host=192.168.1.2/<newline>
<tt/SendPrefixes=03,0048/<newline>
<tt/AcceptPrefixes=0049,001/<newline>
<tt/ForwardHopCount=2/<newline>
<tt/ForwardLRQ=depends/<newline>
<newline>
</descrip>

El nuevo formato especifica dentro de la sección <tt/[RasSrv::Neighbors]/ solamente tipos de gatekeeper y las configuraciones para cada vecino se ubican en una sección separada.


<sect1>Sección &lsqb;RasSrv::LRQFeatures&rsqb;
<p>
Define algunas características de los eventos LRQ y LCF.
<itemize>
<item><tt/NeighborTimeout=1/<newline>
Default: <tt/2/<newline>
<p>
Tiempo de espera en segundos para esperar respuestas desde los vecinos.
Si no hay respuesta desde todos los vecinos después de este tiempo, el gatekeeper
contestará con un ARJ al endpoint que envió el ARQ.

<item><tt/ForwardHopCount=2/<newline>
Default: <tt>N/A</tt><newline>
<p>
Si el gatekeeper recive un LRQ en el que el destino es desconocido,
éste reenviará este mensaje hacia sus vecinos.
Cuando el gatekeeper recibe un LRQ y decide que el mensaje
debe ser reenviado hacia otro gatekeeeper, éste, primero decrementa
el campo <bf/hopCount/ del mensaje LRQ.
Si <bf/hopCount/ ha llegado a 0, el gatekeeper no reenviará el mensaje.
Esta opción define el número de gatekeepers a través de los cuales un mensaje LRQ
puede propagarse. Tenga en cuenta que esto solo afecta al remitente del LRQ, no al receptor.
Este ajuste puede ser superpuesto con la configuración de un vecino particular.

<item><tt/AlwaysForwardLRQ=1/<newline>
Default: <tt>0</tt><newline>
<p>
Forzar a que el gatekeeper reenvie un LRQ incluso si no hay <bf/hopCount/
en el LRQ. Para evitar LRQ repetidos, usted debe utilizar esta opción muy cuidadosamente.
Esta opción es utilizada solamente para estilos anteriores de configuración de vecinos (Version 2.0),
el nuevo estilo lee las configuraciones desde la sección de configuración de un vecino específico.

<item><tt/AcceptForwardedLRQ=1/<newline>
Default: <tt/1/<newline>
<p>
Definir si aceptar o no un LRQ reenviado desde los vecinos.
Esta configuración puede ser superpuesta o deshabilitada con la configuración
de un vecino particular.

<item><tt/ForwardResponse=0/<newline>
Default: <tt/0/<newline>
<p>
Si el gatekeeper reenvia los mensajes LRQ recibidos, éste puede decidir entre
recibir la repuesta LCF o permitir que ésta regrese directamente hacia el
gatekeeper que originó en LRQ. Establezca esta opción en 1, si el gatekeeper necesita recibir respuestas LCF
de los LRQs reenviados. Este ajuste puede ser superpuesto o deshabilitado con la configuración
de un vecino particular.

<item><tt/ForwardLRQ=always | never | depends/<newline>
Default: <tt/depends/<newline>
<p>
Esta configuración determina si el LRQ recibido debería o no ser reenviado. Si se establece en
<tt/always/, reenvía LRQs de manera incondicional, si es <tt/never/, bloquea los LRQ
reenviados, y si es <tt/depends/ le indica al gatekeeper que reenviará LRQ solamente si su
contador de saltos (hop count) es mayor a 1. Esta configuración puede ser superpuesta o deshabilitada con la configuración
de un vecino particular.

<item><tt/AcceptNonNeighborLRQ=1/<newline>
Default: <tt/0/<newline>
<p>
Definir si aceptar o no un mensaje LRQ enviado desde GKs que no han sido definidos como vecinos.
Eso puede ser utilizado con la política de enrutado "SRV routing policy" para ubicar llamadas hacia GKs de terceros.
Esto debe ser utilizado conjuntamente con una política "LRQ Authentication".
</itemize>

<sect2>Sección &lsqb;Neighbor::...&rsqb;
<p>
Las secciones que empiezan con <tt/[Neighbor::/ son para las configuraciones especificas de un vecino.

<itemize>
<item><tt/GatekeeperIdentifier=GKID/<newline>
Default: <tt>N/A</tt><newline>
<p>
Identificador del Gatekeeper para este vecino. Si esta opción no se especifica,
el identificador es tomado de la segunda parte del nombre de esta sección <tt/Neighbor::/.

<item><tt/Host=192.168.1.1/<newline>
Default: <tt>N/A</tt><newline>
<p>
Una dirección IP para este vecino.

<item><tt/Password=secret/<newline>
Default: <tt>N/A</tt><newline>
<p>
Un password que se utilizará pata validar los crypto tokens recibidos desde los LRQs entrantes.
<tt/Esto aún no está implementado/.

<item><tt/Dynamic=0/<newline>
Default: <tt>0</tt>
<p>
1 significa que la dirección IP para este vecino puede cambiar.

<item><tt/SendPrefixes=004,002:=1,001:=2/<newline>
Default: <tt>N/A</tt><newline>
<p>
Una lista de prefijos que este vecino espera recibir para los LRQs.
Si se especifica '*', Los LRQs siempre serán enviados hacia este vecino.
Se puede asignar una prioridad a cada prefijo para cada vecino (usando la sintaxis := ),
de esta manera en caso de que hayan demasiados LCF recibidos de demasiados vecinos, aquel
con la prioridad más alta será elegido para rutear la llamada.
Uno también puede dirigir el gatekeeper para que envíe LRQs hacia este vecino
basándose en el tipo de alias:<newline>
SendPrefixes=h323_ID,dialedDigits,001<newline>

<item><tt/AcceptPrefixes=*/<newline>
Default: <tt>*</tt><newline>
<p>
Una lista de prefijos que el gatekeeper aceptará en los LRQs recibidos
desde este vecino. Si se especifica '*' , todos los LRQs serán aceptados desde este vecino.
Uno puede también dirigir al gatekeeper para que acepte LRQ desde este vecino
basándose en el tipo de alias:<newline>
AcceptPrefixes=dialedDigits<newline>

<item><tt/ForwardHopCount=2/<newline>
Default: <tt>N/A</tt><newline>
<p>
Si el gatekeeper recibe un LRQ en el que el destino es desconocido,
éste podría reenviar este mensaje hacia sus vecinos.
Cuando el gatekeeper recibe un LRQ y decide que el mensaje
debe ser reenviado hacia otro gatekeeper, éste primero decrementa
el campo <bf/hopCount/ del LRQ.
Si <bf/hopCount/ ha llegado a 0, el gatekeeper no reenviará el mensaje.
Esta opción define el número de gatekeepers a través de los cuales un LRQ
puede propagarse. Tenga en cuenta que ésto solo afecta al remitente del LRQ, no al receptor.

<item><tt/AcceptForwardedLRQ=1/<newline>
Default: <tt/1/<newline>
<p>
Definir si aceptar o no un LRQ reenviado desde este vecino.

<item><tt/ForwardResponse=0/<newline>
Default: <tt/0/<newline>
<p>
Si el gatekeeper reenvió los mensajes LRQ recibidos, éste puede decidir entre
recibir la repuesta LCF o permitir que ésta regrese directamente hacia el
gatekeeper que originó en LRQ. Establezca esta opción en 1, si el gatekeeper necesita recibir respuestas LCF
de los LRQs reenviados.

<item><tt/ForwardLRQ=always | never | depends/<newline>
Default: <tt/depends/<newline>
<p>
Esta configuración determina si el LRQ recibido deberá o no ser reenviado.
Si es <tt/always/, reenvía LRQs de manera incondicional, si es <tt/never/, bloquea los LRQ
reenviados ys is es <tt/depends/ le indica al gatekeeper que reenviará LRQ solamente si su
contador de saltos (hop count) es mayor a 1. Este ajuste puede ser superpuesto o deshabilitado con la configuración
de un vecino particular.

</itemize>


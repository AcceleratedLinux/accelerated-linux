AC_INIT(gk.h)

AC_PROG_CC
AC_PROG_CXX

dnl ########################################################################
dnl Check if recv call supports MSG_NOSIGNAL flag
AC_MSG_CHECKING(if MSG_NOSIGNAL is supported by recv call)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
],
[recv(0,NULL,1,MSG_NOSIGNAL);], HAS_MSG_NOSIGNAL=1, HAS_MSG_NOSIGNAL=0)
if test "$HAS_MSG_NOSIGNAL" = 0 ; then
  AC_MSG_RESULT(no)
else
  AC_MSG_RESULT(yes)
  STDCCFLAGS="-DHAS_MSG_NOSIGNAL=1 $STDCCFLAGS"
fi

dnl ########################################################################
dnl look for ptlib, use a preference order of explicit PWLIBDIR, directory
dnl at same level, home directory, /usr/local or /usr.

#if test "${PWLIBDIR:-unset}" != "unset" ; then
#  if test -d ${PWLIBDIR}; then
#  	AC_CHECK_FILE(${PWLIBDIR}/make/unix.mak, HAS_PTLIB=1)
#  fi
#  if test "${HAS_PTLIB:-unset}" != "unset" ; then
#    AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PWLIBDIR}/make)
#  fi
#fi
#if test "${HAS_PTLIB:-unset}" = "unset" ; then
#  if test -d ${HOME}/pwlib/include; then
#  	AC_CHECK_FILE(${HOME}/pwlib/include/ptlib.h, HAS_PTLIB=1)
#  fi
#  if test "${HAS_PTLIB:-unset}" != "unset" ; then
#    PWLIBDIR="${HOME}/pwlib"
#    AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PWLIBDIR}/make)
#  else
#	if test -d ../pwlib; then
#  	  AC_CHECK_FILE(../pwlib/include/ptlib.h, HAS_PTLIB=1)
#  	fi
#  	if test "${HAS_PTLIB:-unset}" != "unset" ; then
#      PWLIBDIR="../pwlib"
#      AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , ${PWLIBDIR}/make)
#  	else
#      if test -d /usr/local/include; then
#	    AC_CHECK_FILE(/usr/local/include/ptlib.h, HAS_PTLIB=1)
#	  fi
#      if test "${HAS_PTLIB:-unset}" != "unset" ; then
#        AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , /usr/local/share/pwlib/make:/usr/local/bin)
#      else
#	    if test -d /usr/include; then
#          AC_CHECK_FILE(/usr/include/ptlib.h, HAS_PTLIB=1)
#	    fi
#        if test "${HAS_PTLIB:-unset}" != "unset" ; then
#          AC_PATH_PROG(PTLIB_CONFIG, ptlib-config, , /usr/share/pwlib/make/)
#        fi
#      fi
#    fi
#  fi
#fi
#
#if test "${HAS_PTLIB:-unset}" = "unset" ; then
#  echo "Cannot find pwlib - please install or set PWLIBDIR and try again"
#  exit
#fi
#
#if test "${PWLIBDIR:-unset}" = "unset" ; then
#  if test "${PTLIB_CONFIG:-unset}" = "unset" ; then
#    echo "Cannot find ptlib-config - please install and try again"
#    exit
#  fi
#  PWLIBDIR=`$PTLIB_CONFIG --pwlibdir`
#fi

echo "PWLib prefix set to $PWLIBDIR"

AC_SUBST(PWLIBDIR)

dnl ########################################################################
dnl extract the PWLIB version
if test "${PTLIB_CONFIG:-unset}" = "unset"; then
  #AC_CHECK_FILE(${PWLIBDIR}/version.h, HAS_PWLIB_VERSION_FILE=1)
  if test "${HAS_PWLIB_VERSION_FILE:-unset}" != "unset"; then
    PWLIB_MAJOR_VERSION=`cat ${PWLIBDIR}/version.h | grep MAJOR_VERSION | cut -f3 -d' '`
    PWLIB_MINOR_VERSION=`cat ${PWLIBDIR}/version.h | grep MINOR_VERSION | cut -f3 -d' '`
    PWLIB_BUILD_NUMBER=`cat ${PWLIBDIR}/version.h | grep BUILD_NUMBER | cut -f3 -d' '`
    PWLIB_VERSION="${PWLIB_MAJOR_VERSION}.${PWLIB_MINOR_VERSION}.${PWLIB_BUILD_NUMBER}"
  else
    AC_CHECK_FILE(${PWLIBDIR}/ptbuildopts.h, HAS_PWLIB_VERSION_FILE=1)
	if test "${HAS_PWLIB_VERSION_FILE:-unset}" != "unset"; then
      PWLIB_MAJOR_VERSION=`cat ${PWLIBDIR}/ptbuildopts.h | grep PWLIB_MAJOR | cut -f3 -d' '`
      PWLIB_MINOR_VERSION=`cat ${PWLIBDIR}/ptbuildopts.h | grep PWLIB_MINOR | cut -f3 -d' '`
      PWLIB_BUILD_NUMBER=`cat ${PWLIBDIR}/ptbuildopts.h | grep PWLIB_BUILD | cut -f3 -d' '`
      PWLIB_VERSION="${PWLIB_MAJOR_VERSION}.${PWLIB_MINOR_VERSION}.${PWLIB_BUILD_NUMBER}"
    fi
  fi
else
  PWLIB_VERSION=`${PTLIB_CONFIG} --version`
  PWLIB_MAJOR_VERSION=[`echo "${PWLIB_VERSION}" | sed -e "s/\([0-9]*\)\.[0-9]*\.[0-9]*.*/\1/"`]
  PWLIB_MINOR_VERSION=[`echo "${PWLIB_VERSION}" | sed -e 's/[0-9]*\.\([0-9]*\)\.[0-9]*.*/\1/'`]
  PWLIB_BUILD_NUMBER=[`echo "${PWLIB_VERSION}" | sed -e 's/[0-9]*\.[0-9]*\.\([0-9]*\).*/\1/'`]
fi
if test "${PWLIB_VERSION:-unset}" = "unset" -o "${PWLIB_VERSION}" = ".."; then
  echo "Error: could not determine PWLib version"
  exit
fi

echo "PTLib version is ${PWLIB_VERSION}"

if test ${PWLIB_MAJOR_VERSION} -lt 1; then
  echo "Error: at leat PWLib version 1.7.5.2 (Pandora) required"
  exit
fi
if test ${PWLIB_MAJOR_VERSION} -eq 1; then
  if test ${PWLIB_MINOR_VERSION} -lt 7; then
    echo "Error: at leat PWLib version 1.7.5.2 (Pandora) required"
    exit
  elif test ${PWLIB_MINOR_VERSION} -eq 7; then
    if test ${PWLIB_BUILD_NUMBER} -lt 5; then
      echo "Error: at leat PWLib version 1.7.5.2 (Pandora) required"
      exit
    fi
  fi
fi

AC_SUBST(PWLIB_VERSION)

dnl ########################################################################
dnl look for openh323, use a preference order of explicit OPENH323DIR, directory
dnl at same level, home directory, /usr/local or /usr.

NEEDOPENH323PREFIX=0

#if test "${OPENH323DIR:-unset}" != "unset" ; then
#  if test -d ${OPENH323DIR}; then
#    AC_CHECK_FILE(${OPENH323DIR}/openh323u.mak, HAS_OPENH323=1)
#  fi
#fi
#if test "${HAS_OPENH323:-unset}" = "unset" ; then
#  if test -d ${PWLIBDIR}/../openh323; then
#    AC_CHECK_FILE(${PWLIBDIR}/../openh323/version.h, HAS_OPENH323=1)
#  fi
#  if test "${HAS_OPENH323:-unset}" != "unset" ; then
#    OPENH323DIR="${PWLIBDIR}/../openh323"
#  else
#    if test -d ${HOME}/openh323/include; then
#      AC_CHECK_FILE(${HOME}/openh323/include/h323.h, HAS_OPENH323=1)
#	fi
#    if test "${HAS_OPENH323:-unset}" != "unset" ; then
#      OPENH323DIR="${HOME}/openh323"
#    else
#	  if test -d /usr/local/include/openh323; then
#        AC_CHECK_FILE(/usr/local/include/openh323/h323.h, HAS_OPENH323=1)
#	  fi
#      if test "${HAS_OPENH323:-unset}" != "unset" ; then
#        OPENH323DIR="/usr/local"
#		OPENH323INSTALLPREFIX="/usr/local"
#		NEEDOPENH323PREFIX=1
#      else
#	    if test -d /usr/include/openh323; then
#          AC_CHECK_FILE(/usr/include/openh323/h323.h, HAS_OPENH323=1)
#		fi
#        if test "${HAS_OPENH323:-unset}" != "unset" ; then
#		  OPENH323DIR="/usr"
#		  OPENH323INSTALLPREFIX="/usr"
#		  NEEDOPENH323PREFIX=1
#        fi
#      fi
#    fi
#  fi
#fi

if test "${HAS_OPENH323:-unset}" = "unset" ; then
  echo "Cannot find OpenH323 - please install or set OPENH323DIR and try again"
  exit
fi

if test -d "${OPENH323DIR}/share/openh323"; then
  OPENH323MAKEDIR=${OPENH323DIR}/share/openh323/
fi

echo "OpenH323 prefix set to $OPENH323DIR"

if test "${OPENH323MAKEDIR:-unset}" = "unset"; then
  OPENH323MAKEDIR=${OPENH323DIR}
fi

AC_SUBST(OPENH323DIR)
AC_SUBST(OPENH323MAKEDIR)

dnl ########################################################################
dnl extract the OpenH323 version
if test -d ${OPENH323DIR}; then
#  AC_CHECK_FILE(${OPENH323DIR}/version.h, HAS_OPENH323_VERSIONFILE=1)
  if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
    OPENH323_VERSION_FILE=${OPENH323DIR}/version.h
	OPENH323_MAJOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep MAJOR_VERSION | cut -f3 -d' '`
	OPENH323_MINOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep MINOR_VERSION | cut -f3 -d' '`
	OPENH323_BUILD_NUMBER=`cat ${OPENH323_VERSION_FILE} | grep BUILD_NUMBER | cut -f3 -d' '`
  else
    AC_CHECK_FILE(${OPENH323MAKEDIR}/openh323buildopts.h, HAS_OPENH323_VERSIONFILE=1)
    if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
      OPENH323_VERSION_FILE=${OPENH323MAKEDIR}/openh323buildopts.h
      OPENH323_MAJOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep OPENH323_MAJOR | cut -f3 -d' '`
      OPENH323_MINOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep OPENH323_MINOR | cut -f3 -d' '`
      OPENH323_BUILD_NUMBER=`cat ${OPENH323_VERSION_FILE} | grep OPENH323_BUILD | cut -f3 -d' '`
    else
      AC_CHECK_FILE(${OPENH323MAKEDIR}/../../include/openh323/openh323buildopts.h, HAS_OPENH323_VERSIONFILE=1)
      if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
        OPENH323_VERSION_FILE=${OPENH323MAKEDIR}/../../include/openh323/openh323buildopts.h
        OPENH323_MAJOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep OPENH323_MAJOR | cut -f2 -d' '`
        OPENH323_MINOR_VERSION=`cat ${OPENH323_VERSION_FILE} | grep OPENH323_MINOR | cut -f2 -d' '`
        OPENH323_BUILD_NUMBER=`cat ${OPENH323_VERSION_FILE} | grep "OPENH323_BUILD " | cut -f2 -d' '`
      fi
    fi
  fi
fi
if test "${HAS_OPENH323_VERSIONFILE:-unset}" != "unset"; then
  if test "${OPENH323_MAJOR_VERSION}" = ""; then
    echo "Error: Could not determine OpenH323 version"
    exit
  fi
  OPENH323_VERSION="${OPENH323_MAJOR_VERSION}.${OPENH323_MINOR_VERSION}.${OPENH323_BUILD_NUMBER}"
  echo "OpenH323 version is ${OPENH323_VERSION}"
else
  echo "Error: Could not determine OpenH323 version"
  exit
fi

if test ${OPENH323_MAJOR_VERSION} -lt 1; then
  echo "Error: at leat OpenH323 version 1.14.4.2 (Pandora) required"
  exit
fi
if test ${OPENH323_MAJOR_VERSION} -eq 1; then
  if test ${OPENH323_MINOR_VERSION} -lt 14; then
    echo "Error: at leat OpenH323 version 1.14.4.2 (Pandora) required"
    exit
  elif test ${OPENH323_MINOR_VERSION} -eq 14; then
    if test ${OPENH323_BUILD_NUMBER} -lt 4; then
      echo "Error: at leat OpenH323 version 1.14.4.2 (Pandora) required"
      exit
    fi
  fi
fi

AC_SUBST(OPENH323_VERSION)

dnl ########################################################################
dnl set the PREFIX accordingly
if test "x$prefix" = "xNONE"; then
   INSTALLPREFIX="/usr/local"
else
   INSTALLPREFIX="${prefix}"
fi

AC_SUBST(INSTALLPREFIX)

dnl #########################################################################
dnl  Check for RADIUS
dnl ########################################################################
AC_ARG_ENABLE(radius, 
[  --enable-radius               enable RADIUS support (default=yes)], 
[ radius="${enableval}" ], [radius="yes"] 
)
	
if test "x${radius}" != "xno" ; then     
   HAS_RADIUS=1
   STDCCFLAGS="-DHAS_RADIUS=1 $STDCCFLAGS"
   SOURCES="$SOURCES radproto.cxx radauth.cxx radacct.cxx"
   HEADERS="$HEADERS radproto.h radauth.h radacct.h"
   echo "RADIUS support enabled"
else
   echo "RADIUS support disabled"
   HAS_RADIUS=0
fi
AC_SUBST(HAS_RADIUS)

dnl #########################################################################
dnl  Check for LARGE FDSET
dnl ########################################################################
AC_ARG_WITH(large-fdset,
[  --with-large-fdset[=MAXFD]    Maximum number of sockets supported (default=1024)],
[ largefdset="$withval" ], 
[ largefdset="no" ]
)

if test "x${largefdset}" != "xno" ; then     
	if test "x${largefdset}" = "xyes"; then
		LARGE_FDSET=8192
	else
   		LARGE_FDSET=${largefdset}
	fi
   	STDCCFLAGS="-DLARGE_FDSET=${LARGE_FDSET} $STDCCFLAGS"
   	echo "LARGE FDSET support enabled"
else
	echo "LARGE FDSET support disabled"
fi
AC_SUBST(LARGE_FDSET)

dnl #########################################################################
dnl  Check for MySQL
dnl ########################################################################
AC_ARG_ENABLE(mysql, 
[  --enable-mysql                enable MySQL support (default=yes)], 
[ mysql="${enableval}" ], [ mysql="yes" ]
)

AC_ARG_WITH(mysql-include-dir,
[  --with-mysql-include-dir=DIR  directory where the MySQL includes may be found ],
[ mysql_include_dir="$withval" ]
)

AC_ARG_WITH(mysql-lib-dir,
[  --with-mysql-lib-dir=DIR      directory where the MySQL libraries may be found ],
[ mysql_lib_dir="$withval" ]
)

AC_ARG_WITH(mysql-dir,
[  --with-mysql-dir=DIR          base directory where MySQL is installed ],
[ mysql_lib_dir="$withval/lib/mysql"
  mysql_include_dir="$withval/include/mysql"
]
)

if test "x${mysql}" != "xno"; then

	AC_CHECK_LIB(z, compress, MYSQL_LIBS=" -lz")
	AC_CHECK_LIB(z, compress, MYSQL_LIBS+=" -lm")

	AC_MSG_CHECKING([for mysql.h])

	AC_TRY_COMPILE([#include <mysql.h>], [int a = 1;],
		MYSQL_INCLUDE=" ",
		MYSQL_INCLUDE=
	)

	if test "x$MYSQL_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in $mysql_include_dir /usr/include/mysql /usr/local/include/mysql /usr/local/mysql/include/mysql; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <mysql.h>], [int a = 1;],
					MYSQL_INCLUDE="-I$try",
					MYSQL_INCLUDE=
				)
				if test "x$MYSQL_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$MYSQL_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([mysql headers not found. Use --with-mysql-include-dir=<path>])
		mysql="no"
	else
		sql_mysql_cflags="${sql_mysql_cflags} ${MYSQL_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for mysql_init in -lmysqlclient])

		old_LIBS="$LIBS"

		for try in $mysql_lib_dir /usr/lib /usr/lib/mysql /usr/local/lib/mysql /usr/local/mysql/lib/mysql; do
			if test -d $try; then
				LIBS="$old_LIBS -L$try -lmysqlclient ${MYSQL_LIBS}"
				AC_TRY_LINK([extern char mysql_init();], [mysql_init()],
					[ MYSQL_LIBS="-lmysqlclient ${MYSQL_LIBS}"
					  MYSQL_LDFLAGS="-L$try"
					]
				)
				if test "x$MYSQL_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		LIBS="$old_LIBS"

		dnl #  If one or the other isn't found, disable them both..
		dnl #  If both are found, enable them both.
		if test "x$MYSQL_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			MYSQL_INCLUDE=
			AC_MSG_WARN([mysql lib not found. Use --with-mysql-lib-dir=<path>])
			mysql="no"
		else
			AC_MSG_RESULT(yes) 
			sql_mysql_ldflags="$sql_mysql_ldflags $MYSQL_LDFLAGS"
		fi
	fi

	sql_mysql_ldflags="$sql_mysql_ldflags $LIBS"

	if test "x$mysql" = "xno"; then
		AC_MSG_WARN([MySQL disabled])
	fi
else
	mysql="no"
fi

if test "x$mysql" != "xno"; then
	HAS_MYSQL=1
	SOURCES="$SOURCES gksql_mysql.cxx"
	STDCCFLAGS="${sql_mysql_cflags} -DHAS_MYSQL=1 $STDCCFLAGS"
	LDFLAGS="$MYSQL_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$MYSQL_LIBS $ENDLDLIBS"
    echo "MySQL support enabled"
else
    echo "MySQL support disabled"
	HAS_MYSQL=0
fi
AC_SUBST(HAS_MYSQL)

dnl #########################################################################
dnl  Check for PostgreSQL
dnl ########################################################################
AC_ARG_ENABLE(pgsql, 
[  --enable-pgsql                enable PostgreSQL support (default=yes)], 
[ pgsql="${enableval}" ], [ pgsql="yes" ]
)

AC_ARG_WITH(pgsql-include-dir,
[  --with-pgsql-include-dir=DIR  directory where the PostgreSQL includes may be found ],
[ pgsql_include_dir="$withval" ]
)

AC_ARG_WITH(pgsql-lib-dir,
[  --with-pgsql-lib-dir=DIR      directory where the PostgreSQL libraries may be found ],
[ pgsql_lib_dir="$withval" ]
)

AC_ARG_WITH(pgsql-dir,
[  --with-pgsql-dir=DIR          base directory where PostgreSQL is installed ],
[ pgsql_lib_dir="$withval/lib"
  pgsql_include_dir="$withval/include"
]
)

if test "x${pgsql}" != "xno"; then

	AC_MSG_CHECKING([for libpq-fe.h])

	AC_TRY_COMPILE([#include <libpq-fe.h>], [int a = 1;],
		PGSQL_INCLUDE=" ",
		PGSQL_INCLUDE=
	)

	if test "x$PGSQL_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/pgsql /usr/local/include /usr/local/include/pgsql /usr/local/pgsql/include $pgsql_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <libpq-fe.h>], [int a = 1;],
					PGSQL_INCLUDE="-I$try",
					PGSQL_INCLUDE=
				)
				if test "x$PGSQL_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$PGSQL_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([pgsql headers not found. Use --with-pgsql-include-dir=<path>])
		pgsql="no"
	else
		sql_pgsql_cflags="${sql_pgsql_cflags} ${PGSQL_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for PQconnectdb in -lpq])

		old_LIBS="$LIBS"

		for try in /usr/lib /usr/local/lib /usr/local/pgsql/lib $pgsql_lib_dir; do
			if test -d $try; then
				LIBS="$old_LIBS -L$try -lpq -lcrypt ${PGSQL_LIBS}"
				AC_TRY_LINK([extern char PQconnectdb();], [PQconnectdb],
					[ PGSQL_LIBS="-lpq -lcrypt ${PGSQL_LIBS}"
					  PGSQL_LDFLAGS="-L$try"
					]
				)
				if test "x$PGSQL_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		LIBS="$old_LIBS"

		dnl #  If one or the other isn't found, disable them both..
		dnl #  If both are found, enable them both.
		if test "x$PGSQL_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			PGSQL_INCLUDE=
			AC_MSG_WARN([pgsql lib not found. Use --with-pgsql-lib-dir=<path>])
			pgsql="no"
		else
			AC_MSG_RESULT(yes) 
			sql_pgsql_ldflags="$sql_pgsql_ldflags $PGSQL_LDFLAGS"
		fi
	fi

	sql_pgsql_ldflags="$sql_pgsql_ldflags $LIBS"

	if test "x$pgsql" = "xno"; then
		AC_MSG_WARN([PostgreSQL disabled])
	fi
else
	pgsql="no"
fi

if test "x$pgsql" != "xno"; then
	HAS_PGSQL=1
	SOURCES="$SOURCES gksql_pgsql.cxx"
	STDCCFLAGS="${sql_pgsql_cflags} -DHAS_PGSQL=1 $STDCCFLAGS"
	LDFLAGS="$PGSQL_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$PGSQL_LIBS $ENDLDLIBS"
    echo "PostgreSQL support enabled"
else
    echo "PostgreSQL support disabled"
	HAS_PGSQL=0
fi
AC_SUBST(HAS_PGSQL)

if test "x$pgsql" != "xno" -o "x$mysql" != "xno"; then
	SOURCES="$SOURCES sqlauth.cxx sqlacct.cxx gksql.cxx"
	HEADERS="$HEADERS sqlacct.h gksql.h"
fi

dnl #########################################################################
dnl  Check for Firebird
dnl ########################################################################
AC_ARG_ENABLE(firebird, 
[  --enable-firebird                enable Interbase/Firebird support (default=yes)], 
[ firebird="${enableval}" ], [ firebird="yes" ]
)

AC_ARG_WITH(firebird-include-dir,
[  --with-firebird-include-dir=DIR  directory where Firebird includes may be found ],
[ firebird_include_dir="$withval" ]
)

AC_ARG_WITH(firebird-lib-dir,
[  --with-firebird-lib-dir=DIR      directory where Firebird libraries may be found ],
[ firebird_lib_dir="$withval" ]
)

AC_ARG_WITH(firebird-dir,
[  --with-firebird-dir=DIR          base directory where Firebird is installed ],
[ firebird_lib_dir="$withval/lib"
  firebird_include_dir="$withval/include"
]
)

if test "x${firebird}" != "xno"; then

	AC_MSG_CHECKING([for ibase.h])

	AC_TRY_COMPILE([#include <ibase.h>], [int a = 1;],
		FIREBIRD_INCLUDE=" ",
		FIREBIRD_INCLUDE=
	)

	if test "x$FIREBIRD_INCLUDE" = "x"; then
		old_CFLAGS="$CFLAGS"

		for try in /usr/include/firebird /usr/local/include/firebird /usr/local/firebird/include $firebird_include_dir; do
			if test -d $try; then
				CFLAGS="$old_CFLAGS -I$try"
				AC_TRY_COMPILE([#include <ibase.h>], [int a = 1;],
					FIREBIRD_INCLUDE="-I$try",
					FIREBIRD_INCLUDE=
				)
				if test "x$FIREBIRD_INCLUDE" != "x"; then
					break;
				fi
			fi
		done
		CFLAGS="$old_CFLAGS"
	fi

	if test "x$FIREBIRD_INCLUDE" = "x"; then
		AC_MSG_RESULT(no)
		AC_MSG_WARN([Firebird headers not found. Use --with-firebird-include-dir=<path>])
		firebird="no"
	else
		sql_firebird_cflags="${sql_firebird_cflags} ${FIREBIRD_INCLUDE}"
		AC_MSG_RESULT(yes)

		AC_MSG_CHECKING([for isc_attach_database in -lfbclient])

		old_LIBS="$LIBS"

		for try in /usr/lib /usr/lib/firebird /usr/local/lib /usr/local/lib/firebird /usr/local/firebird/lib $firebird_lib_dir; do
			if test -d $try; then
				LIBS="$old_LIBS -L$try -lfbclient ${FIREBIRD_LIBS}"
				AC_TRY_LINK([extern char isc_attach_database();], [isc_attach_database()],
					[ FIREBIRD_LIBS="-lfbclient ${FIREBIRD_LIBS}"
					  FIREBIRD_LDFLAGS="-L$try"
					]
				)
				if test "x$FIREBIRD_LDFLAGS" != "x"; then
					break;
				fi
			fi
		done
		LIBS="$old_LIBS"

		dnl #  If one or the other isn't found, disable them both..
		dnl #  If both are found, enable them both.
		if test "x$FIREBIRD_LDFLAGS" = "x"; then
			AC_MSG_RESULT(no)
			FIREBIRD_INCLUDE=
			AC_MSG_WARN([Firebird lib not found. Use --with-firebird-lib-dir=<path>])
			firebird="no"
		else
			AC_MSG_RESULT(yes) 
			sql_firebird_ldflags="$sql_firebird_ldflags $FIREBIRD_LDFLAGS"
		fi
	fi

	sql_firebird_ldflags="$sql_firebird_ldflags $LIBS"

	if test "x$firebird" = "xno"; then
		AC_MSG_WARN([Firebird disabled])
	fi
else
	firebird="no"
fi

if test "x$firebird" != "xno"; then
	HAS_FIREBIRD=1
	SOURCES="$SOURCES gksql_firebird.cxx"
	STDCCFLAGS="${sql_firebird_cflags} -DHAS_FIREBIRD=1 $STDCCFLAGS"
	LDFLAGS="$FIREBIRD_LDFLAGS $LDFLAGS"
	ENDLDLIBS="$FIREBIRD_LIBS $ENDLDLIBS"
    echo "Firebird support enabled"
else
    echo "Firebird support disabled"
	HAS_FIREBIRD=0
fi
AC_SUBST(HAS_FIREBIRD)

dnl ########################################################################
dnl make directives

dnl ########################################################################
dnl extract the OpenH323 version
GNUGK_MAJOR_VERSION=`cat version.h | grep "define GNUGK_MAJOR_VERSION" | cut -f4 -d' '`
GNUGK_MINOR_VERSION=`cat version.h | grep "define GNUGK_MINOR_VERSION" | cut -f4 -d' '`
GNUGK_BUILD_NUMBER=`cat version.h | grep "define GNUGK_BUILD_NUMBER" | cut -f4 -d' '`
GNUGK_BUILD_TYPE=`cat version.h | grep "define GNUGK_BUILD_TYPE" | cut -f4 -d' '`
GNUGK_VERSION="${GNUGK_MAJOR_VERSION}.${GNUGK_MINOR_VERSION}.${GNUGK_BUILD_NUMBER}"
echo "GNU Gatkeeper version is ${GNUGK_VERSION}"
AC_SUBST(GNUGK_VERSION)
AC_SUBST(GNUGK_MAJOR_VERSION)
AC_SUBST(GNUGK_MINOR_VERSION)
AC_SUBST(GNUGK_BUILD_NUMBER)
AC_SUBST(GNUGK_BUILD_TYPE)

MANUFACTURER="GNU"
PROGRAMNAME="Gatekeeper"

AC_SUBST(MANUFACTURER)
AC_SUBST(PROGRAMNAME)
AC_SUBST(STDCCFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ENDLDLIBS)
AC_SUBST(ENDLDFLAGS)
AC_SUBST(SOURCES)
AC_SUBST(HEADERS)
AC_SUBST(HAS_MSG_NOSIGNAL)
AC_SUBST(NEEDOPENH323PREFIX)
AC_SUBST(OPENH323INSTALLPREFIX)

dnl ########################################################################
dnl Output configured files

AC_OUTPUT(Makefile)


diff -Nuar iptables-1.4.3.2/extensions/libip6t_IMQ.c iptables/extensions/libip6t_IMQ.c
--- iptables-1.4.3.2/extensions/libip6t_IMQ.c	1970-01-01 10:00:00.000000000 +1000
+++ iptables/extensions/libip6t_IMQ.c	2014-10-23 17:24:12.188176809 +1000
@@ -0,0 +1,102 @@
+/* Shared library add-on to iptables to add IMQ target support. */
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <getopt.h>
+
+#include <ip6tables.h>
+#include <linux/netfilter_ipv6/ip6_tables.h>
+#include <linux/netfilter_ipv6/ip6t_IMQ.h>
+
+/* Function which prints out usage message. */
+static void
+help(void)
+{
+	printf(
+"IMQ target v%s options:\n"
+"  --todev <N>		enqueue to imq<N>, defaults to 0\n", 
+IPTABLES_VERSION);
+}
+
+static struct option opts[] = {
+	{ "todev", 1, 0, '1' },
+	{ 0 }
+};
+
+/* Initialize the target. */
+static void
+init(struct ip6t_entry_target *t, unsigned int *nfcache)
+{
+	struct ip6t_imq_info *mr = (struct ip6t_imq_info*)t->data;
+
+	mr->todev = 0;
+	*nfcache |= NFC_UNKNOWN;
+}
+
+/* Function which parses command options; returns true if it
+   ate an option */
+static int
+parse(int c, char **argv, int invert, unsigned int *flags,
+      const struct ip6t_entry *entry,
+      struct ip6t_entry_target **target)
+{
+	struct ip6t_imq_info *mr = (struct ip6t_imq_info*)(*target)->data;
+	
+	switch(c) {
+	case '1':
+		if (check_inverse(optarg, &invert, NULL, 0))
+			exit_error(PARAMETER_PROBLEM,
+				   "Unexpected `!' after --todev");
+		mr->todev=atoi(optarg);
+		break;
+	default:
+		return 0;
+	}
+	return 1;
+}
+
+static void
+final_check(unsigned int flags)
+{
+}
+
+/* Prints out the targinfo. */
+static void
+print(const struct ip6t_ip6 *ip,
+      const struct ip6t_entry_target *target,
+      int numeric)
+{
+	struct ip6t_imq_info *mr = (struct ip6t_imq_info*)target->data;
+
+	printf("IMQ: todev %u ", mr->todev);
+}
+
+/* Saves the union ipt_targinfo in parsable form to stdout. */
+static void
+save(const struct ip6t_ip6 *ip, const struct ip6t_entry_target *target)
+{
+	struct ip6t_imq_info *mr = (struct ip6t_imq_info*)target->data;
+
+	printf("--todev %u", mr->todev);
+}
+
+static
+struct ip6tables_target imq
+= { NULL,
+    "IMQ",
+    IPTABLES_VERSION,
+    IP6T_ALIGN(sizeof(struct ip6t_imq_info)),
+    IP6T_ALIGN(sizeof(struct ip6t_imq_info)),
+    &help,
+    &init,
+    &parse,
+    &final_check,
+    &print,
+    &save,
+    opts
+};
+
+void _init(void)
+{
+	register_target6(&imq);
+}
diff -Nuar iptables-1.4.3.2/extensions/libipt_IMQ.c iptables/extensions/libipt_IMQ.c
--- iptables-1.4.3.2/extensions/libipt_IMQ.c	1970-01-01 10:00:00.000000000 +1000
+++ iptables/extensions/libipt_IMQ.c	2014-10-23 17:24:12.188176809 +1000
@@ -0,0 +1,94 @@
+/* Shared library add-on to iptables to add IMQ target support. */
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <getopt.h>
+
+#include <xtables.h>
+#include <linux/netfilter_ipv4/ipt_IMQ.h>
+
+static void
+help(void)
+{
+	printf(
+"IMQ target options:\n"
+"  --todev <N>		enqueue to imq<N>, defaults to 0\n");
+}
+
+static struct option opts[] = {
+	{ "todev", 1, 0, '1' },
+	{ .name = NULL }
+};
+
+static void
+init(struct xt_entry_target *t)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)t->data;
+
+	mr->todev = 0;
+}
+
+static int
+parse(int c, char **argv, int invert, unsigned int *flags,
+      const void *entry,
+      struct xt_entry_target **target)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)(*target)->data;
+	
+	switch(c) {
+	case '1':
+		if (xtables_check_inverse(optarg, &invert, NULL, 0))
+			xtables_error(PARAMETER_PROBLEM,
+				   "Unexpected `!' after --todev");
+		mr->todev=atoi(optarg);
+		break;
+	default:
+		return 0;
+	}
+	return 1;
+}
+
+static void
+final_check(unsigned int flags)
+{
+}
+
+static void
+print(const void *ip,
+      const struct xt_entry_target *target,
+      int numeric)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)target->data;
+
+	printf("IMQ: todev %u ", mr->todev);
+}
+
+static void
+save(const void *ip, const struct xt_entry_target *target)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)target->data;
+
+	printf("--todev %u", mr->todev);
+}
+
+static
+struct xtables_target imq
+= {
+    .name = "IMQ",
+    .version = XTABLES_VERSION,
+    .family = NFPROTO_IPV4,
+    .size = XT_ALIGN(sizeof(struct ipt_imq_info)),
+    .userspacesize = XT_ALIGN(sizeof(struct ipt_imq_info)),
+    .help = &help,
+    .init = &init,
+    .parse = &parse,
+    .final_check = &final_check,
+    .print = &print,
+    .save = &save,
+    .extra_opts = opts
+};
+
+void _init(void)
+{
+	xtables_register_target(&imq);
+}

diff -ur /tmp/openssh-5.8p1/auth1.c ./auth1.c
--- /tmp/openssh-5.8p1/auth1.c	2010-08-31 22:36:39.000000000 +1000
+++ ./auth1.c	2014-05-23 17:00:39.673183196 +1000
@@ -41,6 +41,11 @@
 #include "monitor_wrap.h"
 #include "buffer.h"
 
+#ifdef SECURITY_COUNTS
+#define AA_EXTERN_ONLY
+#include "../login/logcnt.c"
+#endif
+
 /* import */
 extern ServerOptions options;
 extern Buffer loginmsg;
@@ -351,6 +356,12 @@
 #endif
 
  skip:
+#ifdef SECURITY_COUNTS
+		if (! access__permitted(authctxt->user))
+			authenticated = 0;
+		access__attempted(!authenticated, authctxt->user);
+#endif
+
 		/* Log before sending the reply */
 		auth_log(authctxt, authenticated, get_authname(type), info);
 
diff -ur /tmp/openssh-5.8p1/auth2.c ./auth2.c
--- /tmp/openssh-5.8p1/auth2.c	2010-08-31 22:36:39.000000000 +1000
+++ ./auth2.c	2014-05-23 17:00:39.673183196 +1000
@@ -50,6 +50,11 @@
 #include "pathnames.h"
 #include "buffer.h"
 
+#ifdef SECURITY_COUNTS
+#define AA_EXTERN_ONLY
+#include "../login/logcnt.c"
+#endif
+
 #ifdef GSSAPI
 #include "ssh-gss.h"
 #endif
@@ -328,6 +333,12 @@
 	}
 #endif /* _UNICOS */
 
+#ifdef SECURITY_COUNTS
+	if (! access__permitted(authctxt->user))
+		authenticated = 0;
+	access__attempted(!authenticated, authctxt->user);
+#endif
+
 	/* Log before sending the reply */
 	auth_log(authctxt, authenticated, method, " ssh2");
 
diff -ur /tmp/openssh-5.8p1/auth.c ./auth.c
--- /tmp/openssh-5.8p1/auth.c	2010-12-01 11:21:51.000000000 +1000
+++ ./auth.c	2014-05-23 17:00:39.673183196 +1000
@@ -72,6 +72,10 @@
 #include "authfile.h"
 #include "monitor_wrap.h"
 
+#ifdef SECURITY_COUNTS
+#include "../login/logcnt.c"
+#endif
+
 /* import */
 extern ServerOptions options;
 extern int use_privsep;
@@ -105,6 +109,14 @@
 	if (!pw || !pw->pw_name)
 		return 0;
 
+#ifdef SECURITY_COUNTS
+	/* Early check to see if the security counters are currently
+	 * blocking us from accessing the unit.
+	 */
+	if (! access__permitted(pw->pw_name))
+		return 0;
+#endif
+
 #ifdef USE_SHADOW
 	if (!options.use_pam)
 		spw = getspnam(pw->pw_name);
@@ -297,6 +309,10 @@
 	if (authenticated == 0 && !authctxt->postponed)
 		audit_event(audit_classify_auth(method));
 #endif
+#ifdef SECURITY_COUNTS
+	if (strcmp(method, "password") == 0)
+		access__attempted(!authenticated, authctxt->user);
+#endif
 }
 
 /*
@@ -588,6 +604,9 @@
 	if (pw == NULL) {
 		logit("Invalid user %.100s from %.100s",
 		    user, get_remote_ipaddr());
+#ifdef SECURITY_COUNTS
+		access__attempted(1, user);
+#endif
 #ifdef CUSTOM_FAILED_LOGIN
 		record_failed_login(user,
 		    get_canonical_hostname(options.use_dns), "ssh");
@@ -597,11 +616,18 @@
 #endif /* SSH_AUDIT_EVENTS */
 		return (NULL);
 	}
-	if (!allowed_user(pw))
+	if (!allowed_user(pw)) {
+#ifdef SECURITY_COUNTS
+		access__attempted(1, user);
+#endif
 		return (NULL);
+	}
 #ifdef HAVE_LOGIN_CAP
 	if ((lc = login_getclass(pw->pw_class)) == NULL) {
 		debug("unable to get login class: %s", user);
+#ifdef SECURITY_COUNTS
+		access__attempted(1, user);
+#endif
 		return (NULL);
 	}
 #ifdef BSD_AUTH

diff -Naur ipset-6.32.org/kernel/net/netfilter/xt_set.c ipset-6.32/kernel/net/netfilter/xt_set.c
--- ipset-6.32.org/kernel/net/netfilter/xt_set.c	2017-03-13 03:41:03.000000000 +1000
+++ ipset-6.32/kernel/net/netfilter/xt_set.c	2017-06-02 13:34:51.181150265 +1000
@@ -72,7 +72,7 @@
 {
 	const struct xt_set_info_match_v0 *info = par->matchinfo;
 
-	ADT_OPT(opt, par->family, info->match_set.u.compat.dim,
+	ADT_OPT(opt, xt_family(par), info->match_set.u.compat.dim,
 		info->match_set.u.compat.flags, 0, UINT_MAX);
 
 	return match_set(info->match_set.index, skb, par, &opt,
@@ -135,7 +135,7 @@
 {
 	const struct xt_set_info_match_v1 *info = par->matchinfo;
 
-	ADT_OPT(opt, par->family, info->match_set.dim,
+	ADT_OPT(opt, xt_family(par), info->match_set.dim,
 		info->match_set.flags, 0, UINT_MAX);
 
 	if (opt.flags & IPSET_RETURN_NOMATCH)
@@ -201,7 +201,7 @@
 	const struct xt_set_info_match_v3 *info = par->matchinfo;
 	int ret;
 
-	ADT_OPT(opt, par->family, info->match_set.dim,
+	ADT_OPT(opt, xt_family(par), info->match_set.dim,
 		info->match_set.flags, info->flags, UINT_MAX);
 
 	if (info->packets.op != IPSET_COUNTER_NONE ||
@@ -248,7 +248,7 @@
 	const struct xt_set_info_match_v4 *info = par->matchinfo;
 	int ret;
 
-	ADT_OPT(opt, par->family, info->match_set.dim,
+	ADT_OPT(opt, xt_family(par), info->match_set.dim,
 		info->match_set.flags, info->flags, UINT_MAX);
 
 	if (info->packets.op != IPSET_COUNTER_NONE ||
@@ -284,9 +284,9 @@
 {
 	const struct xt_set_info_target_v0 *info = par->targinfo;
 
-	ADT_OPT(add_opt, par->family, info->add_set.u.compat.dim,
+	ADT_OPT(add_opt, xt_family(par), info->add_set.u.compat.dim,
 		info->add_set.u.compat.flags, 0, UINT_MAX);
-	ADT_OPT(del_opt, par->family, info->del_set.u.compat.dim,
+	ADT_OPT(del_opt, xt_family(par), info->del_set.u.compat.dim,
 		info->del_set.u.compat.flags, 0, UINT_MAX);
 
 	if (info->add_set.index != IPSET_INVALID_ID)
@@ -362,9 +362,9 @@
 {
 	const struct xt_set_info_target_v1 *info = par->targinfo;
 
-	ADT_OPT(add_opt, par->family, info->add_set.dim,
+	ADT_OPT(add_opt, xt_family(par), info->add_set.dim,
 		info->add_set.flags, 0, UINT_MAX);
-	ADT_OPT(del_opt, par->family, info->del_set.dim,
+	ADT_OPT(del_opt, xt_family(par), info->del_set.dim,
 		info->del_set.flags, 0, UINT_MAX);
 
 	if (info->add_set.index != IPSET_INVALID_ID)
@@ -436,9 +436,9 @@
 {
 	const struct xt_set_info_target_v2 *info = par->targinfo;
 
-	ADT_OPT(add_opt, par->family, info->add_set.dim,
+	ADT_OPT(add_opt, xt_family(par), info->add_set.dim,
 		info->add_set.flags, info->flags, info->timeout);
-	ADT_OPT(del_opt, par->family, info->del_set.dim,
+	ADT_OPT(del_opt, xt_family(par), info->del_set.dim,
 		info->del_set.flags, 0, UINT_MAX);
 
 	/* Normalize to fit into jiffies */
@@ -468,11 +468,11 @@
 	const struct xt_set_info_target_v3 *info = par->targinfo;
 	int ret;
 
-	ADT_OPT(add_opt, par->family, info->add_set.dim,
+	ADT_OPT(add_opt, xt_family(par), info->add_set.dim,
 		info->add_set.flags, info->flags, info->timeout);
-	ADT_OPT(del_opt, par->family, info->del_set.dim,
+	ADT_OPT(del_opt, xt_family(par), info->del_set.dim,
 		info->del_set.flags, 0, UINT_MAX);
-	ADT_OPT(map_opt, par->family, info->map_set.dim,
+	ADT_OPT(map_opt, xt_family(par), info->map_set.dim,
 		info->map_set.flags, 0, UINT_MAX);
 
 	/* Normalize to fit into jiffies */
--- ipset-6.32/kernel/include/linux/netfilter/ipset/ip_set_compat.h.in.org	2017-06-02 13:51:40.233143211 +1000
+++ ipset-6.32/kernel/include/linux/netfilter/ipset/ip_set_compat.h.in	2017-06-02 13:52:20.561142929 +1000
@@ -288,7 +288,7 @@
 #ifdef HAVE_NET_IN_XT_ACTION_PARAM
 #define IPSET_DEV_NET(par)	(par)->net
 #else
-#define IPSET_DEV_NET(par)	dev_net((par)->in ? (par)->in : (par)->out)
+#define IPSET_DEV_NET(par)	dev_net(xt_in(par) ? xt_in(par) : xt_out(par))
 #endif
 
 #ifndef smp_mb__before_atomic
diff -Naur ipset-6.32.org/kernel/net/netfilter/ipset/ip_set_hash_netiface.c ipset-6.32/kernel/net/netfilter/ipset/ip_set_hash_netiface.c
--- ipset-6.32.org/kernel/net/netfilter/ipset/ip_set_hash_netiface.c	2017-03-13 03:41:03.000000000 +1000
+++ ipset-6.32/kernel/net/netfilter/ipset/ip_set_hash_netiface.c	2017-06-02 14:06:36.757136944 +1000
@@ -170,7 +170,8 @@
 	ip4addrptr(skb, opt->flags & IPSET_DIM_ONE_SRC, &e.ip);
 	e.ip &= ip_set_netmask(e.cidr);
 
-#define IFACE(dir)	(par->dir ? par->dir->name : "")
+#define INFACE()	(xt_in(par) ? xt_inname(par) : "")
+#define OUTFACE()	(xt_out(par) ? xt_outname(par) : "")
 #define SRCDIR		(opt->flags & IPSET_DIM_TWO_SRC)
 
 	if (opt->cmdflags & IPSET_FLAG_PHYSDEV) {
@@ -184,7 +185,7 @@
 		e.physdev = 1;
 #endif
 	} else {
-		STRLCPY(e.iface, SRCDIR ? IFACE(in) : IFACE(out));
+		STRLCPY(e.iface, SRCDIR ? INFACE() : OUTFACE());
 	}
 
 	if (strlen(e.iface) == 0)
@@ -392,7 +393,7 @@
 		e.physdev = 1;
 #endif
 	} else {
-		STRLCPY(e.iface, SRCDIR ? IFACE(in) : IFACE(out));
+		STRLCPY(e.iface, SRCDIR ? INFACE() : OUTFACE());
 	}
 
 	if (strlen(e.iface) == 0)

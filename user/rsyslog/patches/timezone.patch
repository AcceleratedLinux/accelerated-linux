diff -Naur b/tools/rsyslogd.c c/tools/rsyslogd.c
--- b/tools/rsyslogd.c	2018-01-22 21:15:45.000000000 +1000
+++ c/tools/rsyslogd.c	2018-03-02 08:47:41.531336982 +1000
@@ -1189,6 +1189,25 @@
 	}
 }
 
+/* Read /etc/TZ file to get timezone.
+ * Return 0 on success, -1 on failure.
+ */
+static int setEtcTZ(void) {
+	if (!access("/etc/TZ", R_OK) == 0) {
+		return -1;
+	}
+	char tzval[128];
+	char tz[128];
+	FILE *ftz = fopen("/etc/TZ", "r");
+	if (!ftz) {
+		return -1;
+	}
+	fgets(tzval, sizeof(tzval), ftz);
+	snprintf(tz, sizeof(tz), "TZ=%s", tzval);
+	putenv((char*)tz);
+	return 0;
+}
+
 
 /* This is the main entry point into rsyslogd. Over time, we should try to
  * modularize it a bit more...
@@ -1304,11 +1323,13 @@
 	/* we now can emit error messages "the regular way" */
 
 	if(getenv("TZ") == NULL) {
-		const char *const tz =
-			(access("/etc/localtime", R_OK) == 0) ? "TZ=/etc/localtime" : "TZ=UTC";
-		putenv((char*)tz);
-		LogMsg(0, RS_RET_NO_TZ_SET, LOG_WARNING, "environment variable TZ is not "
-			"set, auto correcting this to %s\n", tz);
+		if (setEtcTZ() != 0) {
+			const char *const tz =
+				(access("/etc/localtime", R_OK) == 0) ? "TZ=/etc/localtime" : "TZ=UTC";
+			putenv((char*)tz);
+			LogMsg(0, RS_RET_NO_TZ_SET, LOG_WARNING, "environment variable TZ is not "
+				"set, auto correcting this to %s\n", tz);
+		}
 	}
 
 	/* END core initializations - we now come back to carrying out command line options*/

#14312

Move the code to send a query upstream into a separate function.
Code cleanup only; no change to operation.

Index: dnsmasq2/src/forward.c
===================================================================
--- dnsmasq2.orig/src/forward.c	2009-03-23 11:51:23.000000000 +1000
+++ dnsmasq2/src/forward.c	2009-03-23 11:54:05.000000000 +1000
@@ -201,6 +201,94 @@ static unsigned short search_servers(tim
   return  flags;
 }
 
+static int send_query(HEADER *header, size_t plen, struct frec *forward,
+		      struct server *start, int type, char *domain, int gotname)
+{
+  struct server *firstsentto = start;
+  int forwarded = 0;
+
+  while (1)
+    { 
+      /* only send to servers dealing with our domain.
+	 domain may be NULL, in which case server->domain 
+	 must be NULL also. */
+      
+      if (type == (start->flags & SERV_TYPE) &&
+	  (type != SERV_HAS_DOMAIN || hostname_isequal(domain, start->domain)) &&
+	  !(start->flags & SERV_LITERAL_ADDRESS))
+	{
+	  int fd;
+
+	  /* find server socket to use, may need to get random one. */
+	  if (start->sfd)
+	    fd = start->sfd->fd;
+	  else 
+	    {
+#ifdef HAVE_IPV6
+	      if (start->addr.sa.sa_family == AF_INET6)
+		{
+		  if (!forward->rfd6 &&
+		      !(forward->rfd6 = allocate_rfd(AF_INET6)))
+		    break;
+		  daemon->rfd_save = forward->rfd6;
+		  fd = forward->rfd6->fd;
+		}
+	      else
+#endif
+		{
+		  if (!forward->rfd4 &&
+		      !(forward->rfd4 = allocate_rfd(AF_INET)))
+		    break;
+		  daemon->rfd_save = forward->rfd4;
+		  fd = forward->rfd4->fd;
+		}
+	    }
+	  
+	  if (sendto(fd, (char *)header, plen, 0,
+		     &start->addr.sa,
+		     sa_len(&start->addr)) == -1)
+	    {
+	      if (retry_send())
+		continue;
+	    }
+	  else
+	    {
+	      /* Keep info in case we want to re-send this packet */
+	      daemon->srv_save = start;
+	      daemon->packet_len = plen;
+	      
+	      if (!gotname)
+		strcpy(daemon->namebuff, "query");
+	      if (start->addr.sa.sa_family == AF_INET)
+		log_query(F_SERVER | F_IPV4 | F_FORWARD, daemon->namebuff, 
+			  (struct all_addr *)&start->addr.in.sin_addr, NULL); 
+#ifdef HAVE_IPV6
+	      else
+		log_query(F_SERVER | F_IPV6 | F_FORWARD, daemon->namebuff, 
+			  (struct all_addr *)&start->addr.in6.sin6_addr, NULL);
+#endif 
+	      start->queries++;
+	      forwarded = 1;
+	      forward->sentto = start;
+	      if (!forward->forwardall) 
+		break;
+	      forward->forwardall++;
+	    }
+	} 
+      
+      if (!(start = start->next))
+	start = daemon->servers;
+      
+      if (start == firstsentto)
+	break;
+    }
+  
+  if (forwarded)
+    return 1;
+
+  return 0;
+}
+
 static int forward_query(int udpfd, union mysockaddr *udpaddr,
 			 struct all_addr *dst_addr, unsigned int dst_iface,
 			 HEADER *header, size_t plen, time_t now, struct frec *forward)
@@ -276,86 +364,7 @@ static int forward_query(int udpfd, unio
   
   if (!flags && forward)
     {
-      struct server *firstsentto = start;
-      int forwarded = 0;
-
-      while (1)
-	{ 
-	  /* only send to servers dealing with our domain.
-	     domain may be NULL, in which case server->domain 
-	     must be NULL also. */
-	  
-	  if (type == (start->flags & SERV_TYPE) &&
-	      (type != SERV_HAS_DOMAIN || hostname_isequal(domain, start->domain)) &&
-	      !(start->flags & SERV_LITERAL_ADDRESS))
-	    {
-	      int fd;
-
-	      /* find server socket to use, may need to get random one. */
-	      if (start->sfd)
-		fd = start->sfd->fd;
-	      else 
-		{
-#ifdef HAVE_IPV6
-		  if (start->addr.sa.sa_family == AF_INET6)
-		    {
-		      if (!forward->rfd6 &&
-			  !(forward->rfd6 = allocate_rfd(AF_INET6)))
-			break;
-		      daemon->rfd_save = forward->rfd6;
-		      fd = forward->rfd6->fd;
-		    }
-		  else
-#endif
-		    {
-		      if (!forward->rfd4 &&
-			  !(forward->rfd4 = allocate_rfd(AF_INET)))
-			break;
-		      daemon->rfd_save = forward->rfd4;
-		      fd = forward->rfd4->fd;
-		    }
-		}
-	      
-	      if (sendto(fd, (char *)header, plen, 0,
-			 &start->addr.sa,
-			 sa_len(&start->addr)) == -1)
-		{
-		  if (retry_send())
-		    continue;
-		}
-	      else
-		{
-		  /* Keep info in case we want to re-send this packet */
-		  daemon->srv_save = start;
-		  daemon->packet_len = plen;
-		  
-		  if (!gotname)
-		    strcpy(daemon->namebuff, "query");
-		  if (start->addr.sa.sa_family == AF_INET)
-		    log_query(F_SERVER | F_IPV4 | F_FORWARD, daemon->namebuff, 
-			      (struct all_addr *)&start->addr.in.sin_addr, NULL); 
-#ifdef HAVE_IPV6
-		  else
-		    log_query(F_SERVER | F_IPV6 | F_FORWARD, daemon->namebuff, 
-			      (struct all_addr *)&start->addr.in6.sin6_addr, NULL);
-#endif 
-		  start->queries++;
-		  forwarded = 1;
-		  forward->sentto = start;
-		  if (!forward->forwardall) 
-		    break;
-		  forward->forwardall++;
-		}
-	    } 
-	  
-	  if (!(start = start->next))
- 	    start = daemon->servers;
-	  
-	  if (start == firstsentto)
-	    break;
-	}
-      
-      if (forwarded)
+      if (send_query(header, plen, forward, start, type, domain, gotname))
 	return 1;
       
       /* could not send on, prepare to return */ 

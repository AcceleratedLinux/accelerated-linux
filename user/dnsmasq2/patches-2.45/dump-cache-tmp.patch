Date: 2008/12/18 22:09:50
#13964:

Modify dns cache dump to send to a file in tmp, so we can easily put it
into the diagnostics page.

Index: dnsmasq2/src/cache.c
===================================================================
--- dnsmasq2.orig/src/cache.c	2009-03-12 12:13:04.000000000 +1000
+++ dnsmasq2/src/cache.c	2009-03-12 12:13:10.000000000 +1000
@@ -1236,15 +1236,41 @@ void cache_add_dhcp_entry(char *host_nam
 #endif
 
 #define USE_BROKEN_RTC_DUMP   /* Displays TTL instead of formatted expiry time */
+#define DUMP_CACHE_TO_TMP
 void dump_cache(time_t now)
 {
   struct server *serv, *serv1;
 
+#ifdef DUMP_CACHE_TO_TMP
+  char b[150];
+  int len;
+
+  memset(b, '\0', sizeof(b));
+  int fd = open("/tmp/dns_cache_dump",
+		  O_CREAT|O_WRONLY|O_SYNC|O_TRUNC, S_IRUSR|S_IWUSR);
+
+  if (fd < 0) {
+	  my_syslog(LOG_ERR, "%s:%s failed to create /tmp/dns_cache_dump with err: %m",
+		  __FILE__, __FUNCTION__);
+	  return;
+  }
+
+  len = snprintf(b, sizeof(b), "time %lu%s\n", (unsigned long)now, "");
+  if (len > 0) write(fd, b, len);
+  len = snprintf(b, sizeof(b), "cache size %d, %d/%d cache insertions "
+		  "re-used unexpired cache entries.\n", 
+	    daemon->cachesize, cache_live_freed, cache_inserted);
+  if (len > 0) write(fd, b, len);
+  len = snprintf(b, sizeof(b), "queries forwarded %u, queries answered locally %u\n", 
+	    daemon->queries_forwarded, daemon->local_answer);
+  if (len > 0) write(fd, b, len);
+#else
   my_syslog(LOG_INFO, _("time %lu"), (unsigned long)now);
   my_syslog(LOG_INFO, _("cache size %d, %d/%d cache insertions re-used unexpired cache entries."), 
 	    daemon->cachesize, cache_live_freed, cache_inserted);
   my_syslog(LOG_INFO, _("queries forwarded %u, queries answered locally %u"), 
 	    daemon->queries_forwarded, daemon->local_answer);
+#endif
 
   if (!addrbuff && !(addrbuff = whine_malloc(ADDRSTRLEN)))
     return;
@@ -1266,14 +1292,25 @@ void dump_cache(time_t now)
 	      failed_queries += serv1->failed_queries;
 	    }
 	port = prettyprint_addr(&serv->addr, addrbuff);
+#ifdef DUMP_CACHE_TO_TMP
+	len = snprintf(b, sizeof(b), "server %s#%d: queries sent %u, retried or failed %u\n",
+			addrbuff, port, queries, failed_queries);
+    if (len > 0) write(fd, b, len);
+#else
 	my_syslog(LOG_INFO, _("server %s#%d: queries sent %u, retried or failed %u"), addrbuff, port, queries, failed_queries);
+#endif
       }
   
   if ((daemon->options & (OPT_DEBUG | OPT_LOG)))
     {
       struct crec *cache ;
       int i;
+#ifdef DUMP_CACHE_TO_TMP
+      len = snprintf(b, sizeof(b), "Host                                     Address                        Flags     Expires\n");
+      if (len > 0) write(fd, b, len);
+#else
       my_syslog(LOG_DEBUG, "Host                                     Address                        Flags     Expires");
+#endif
     
       for (i=0; i<hash_size; i++)
 	for (cache = hash_table[i]; cache; cache = cache->hash_next)
@@ -1320,9 +1357,17 @@ void dump_cache(time_t now)
 	    /* ctime includes trailing \n - eat it */
 	    *(p-1) = 0;
 #endif
+#ifdef DUMP_CACHE_TO_TMP
+        write(fd, daemon->namebuff, strlen(daemon->namebuff));
+        write(fd, "\n", 1);
+#else
 	    my_syslog(LOG_DEBUG, daemon->namebuff);
+#endif
 	  }
     }
+#ifdef DUMP_CACHE_TO_TMP
+    close(fd);
+#endif
 }
 
 char *record_source(struct hostsfile *addn_hosts, int index)

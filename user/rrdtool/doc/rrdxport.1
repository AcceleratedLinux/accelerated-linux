.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RRDXPORT 1"
.TH RRDXPORT 1 "2005-06-17" "1.2.10" "rrdtool"
.SH "NAME"
rrdxport \- Export data in XML format based on data from one or several RRD
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBrrdtool\fR \fBxport\fR
[\fB\-s\fR|\fB\-\-start\fR\ \fIseconds\fR]
[\fB\-e\fR|\fB\-\-end\fR\ \fIseconds\fR]
[\fB\-m\fR|\fB\-\-maxrows\fR\ \fIrows\fR]
[\fB\-\-step\fR\ \fIvalue\fR]
[\fB\s-1DEF:\s0\fR\fIvname\fR\fB=\fR\fIrrd\fR\fB:\fR\fIds-name\fR\fB:\fR\fI\s-1CF\s0\fR]
[\fB\s-1CDEF:\s0\fR\fIvname\fR\fB=\fR\fIrpn-expression\fR]
[\fB\s-1XPORT\s0\fR\fB:\fR\fIvname\fR[\fB:\fR\fIlegend\fR]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBxport\fR function's main purpose is to write an \s-1XML\s0 formatted
representation of the data stored in one or several \fB\s-1RRD\s0\fRs. It
can also extract numerical reports.
.PP
If no \fI\s-1XPORT\s0\fR statements are found, there will be no output.
.IP "\fB\-s\fR|\fB\-\-start\fR \fIseconds\fR (default end\-1day)" 4
.IX Item "-s|--start seconds (default end-1day)"
The time when the exported range should begin. Time in seconds since
epoch (1970\-01\-01) is required. Negative numbers are relative to the
current time. By default one day worth of data will be printed.
See also AT-STYLE \s-1TIME\s0 \s-1SPECIFICATION\s0 section in the \fIrrdfetch\fR
documentation for a detailed explanation on how to specify time.
.IP "\fB\-e\fR|\fB\-\-end\fR \fIseconds\fR (default now)" 4
.IX Item "-e|--end seconds (default now)"
The time when the exported range should end. Time in seconds since epoch.
See also AT-STYLE \s-1TIME\s0 \s-1SPECIFICATION\s0 section in the \fIrrdfetch\fR
documentation for a detailed explanation of ways to specify time.
.IP "\fB\-m\fR|\fB\-\-maxrows\fR \fIrows\fR (default 400 rows)" 4
.IX Item "-m|--maxrows rows (default 400 rows)"
This works like the \fB\-w\fR|\fB\-\-width\fR parameter of \fIrrdgraph\fR.
In fact it is exactly the same, but the parameter was renamed to
describe its purpose in this module. See \fIrrdgraph\fR documentation
for details.
.IP "\fB\-\-step\fR \fIvalue\fR (default automatic)" 4
.IX Item "--step value (default automatic)"
See rrdgraph documentation.
.IP "\fB\s-1DEF:\s0\fR\fIvname\fR\fB=\fR\fIrrd\fR\fB:\fR\fIds-name\fR\fB:\fR\fI\s-1CF\s0\fR" 4
.IX Item "DEF:vname=rrd:ds-name:CF"
See \fIrrdgraph\fR documentation.
.IP "\fB\s-1CDEF:\s0\fR\fIvname\fR\fB=\fR\fIrpn-expression\fR" 4
.IX Item "CDEF:vname=rpn-expression"
See \fIrrdgraph\fR documentation.
.IP "\fB\s-1XPORT:\s0\fR\fIvname\fR\fB:\fR\fB:\fR\fIlegend\fR" 4
.IX Item "XPORT:vname::legend"
At least one \fI\s-1XPORT\s0\fR statement should be present. The values
referenced by \fIvname\fR are printed. Optionally add a legend.
.SH "Output format"
.IX Header "Output format"
The output is enclosed in an \fBxport\fR element and contains two
blocks. The first block is enclosed by a \fBmeta\fR element and
contains some meta data. The second block is enclosed by a
\&\fBdata\fR element and contains the data rows.
.PP
Let's assume that the \fIxport\fR command looks like this:
.PP
.Vb 7
\&  rrdtool xport \e
\&          --start now-1h --end now \e
\&          DEF:xx=host-inout.lo.rrd:output:AVERAGE \e
\&          DEF:yy=host-inout.lo.rrd:input:AVERAGE \e
\&          CDEF:aa=xx,yy,+,8,* \e
\&          XPORT:xx:"out bytes" \e
\&          XPORT:aa:"in and out bits"
.Ve
.PP
The resulting meta data section is (the values will depend on the
\&\s-1RRD\s0 characteristics):
.PP
.Vb 11
\&  <meta>
\&    <start>1020611700</start>
\&    <step>300</step>
\&    <end>1020615600</end>
\&    <rows>14</rows>
\&    <columns>2</columns>
\&    <legend>
\&      <entry>out bytes</entry>
\&      <entry>in and out bits</entry>
\&    </legend>
\&  </meta>
.Ve
.PP
The resulting data section is:
.PP
.Vb 16
\&  <data>
\&    <row><t>1020611700</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020612000</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020612300</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020612600</t><v>3.4113333333e+00</v><v>5.4581333333e+01</v></row>
\&    <row><t>1020612900</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020613200</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020613500</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020613800</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020614100</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020614400</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020614700</t><v>3.7333333333e+00</v><v>5.9733333333e+01</v></row>
\&    <row><t>1020615000</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020615300</t><v>3.4000000000e+00</v><v>5.4400000000e+01</v></row>
\&    <row><t>1020615600</t><v>NaN</v><v>NaN</v></row>
\&  </data>
.Ve
.SH "EXAMPLE 1"
.IX Header "EXAMPLE 1"
.Vb 3
\&  rrdtool xport \e
\&          DEF:out=if1-inouts.rrd:outoctets:AVERAGE \e
\&          XPORT:out:"out bytes"
.Ve
.SH "EXAMPLE 2"
.IX Header "EXAMPLE 2"
.Vb 7
\&  rrdtool xport \e
\&          DEF:out1=if1-inouts.rrd:outoctets:AVERAGE \e
\&          DEF:out2=if2-inouts.rrd:outoctets:AVERAGE \e
\&          CDEF:sum=out1,out2,+ \e
\&          XPORT:out1:"if1 out bytes" \e
\&          XPORT:out2:"if2 out bytes" \e
\&          XPORT:sum:"output sum"
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Tobias Oetiker <oetiker@ee.ethz.ch>

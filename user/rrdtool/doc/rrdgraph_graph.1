.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "RRDGRAPH_GRAPH 1"
.TH RRDGRAPH_GRAPH 1 "2005-06-17" "1.2.10" "rrdtool"
.SH "NAME"
rrdgraph_graph \- rrdtool graph command reference
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB\s-1PRINT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fIformat\fR
.PP
\&\fB\s-1GPRINT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fIformat\fR
.PP
\&\fB\s-1COMMENT\s0\fR\fB:\fR\fItext\fR
.PP
\&\fB\s-1VRULE\s0\fR\fB:\fR\fItime\fR\fB#\fR\fIcolor\fR[\fB:\fR\fIlegend\fR]
.PP
\&\fB\s-1LINE\s0\fR[\fIwidth\fR]\fB:\fR\fIvalue\fR[\fB#\fR\fIcolor\fR][\fB:\fR[\fIlegend\fR][\fB:STACK\fR]]
.PP
\&\fB\s-1AREA\s0\fR\fB:\fR\fIvalue\fR[\fB#\fR\fIcolor\fR][\fB:\fR[\fIlegend\fR][\fB:STACK\fR]]
.PP
\&\fB\s-1TICK\s0\fR\fB:\fR\fIvname\fR\fB#\fR\fIrrggbb\fR[\fIaa\fR][\fB:\fR\fIfraction\fR[\fB:\fR\fIlegend\fR]]
.PP
\&\fB\s-1SHIFT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fIoffset\fR
.PP
\&\fB\s-1PRINT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fI\s-1CF\s0\fR\fB:\fR\fIformat\fR (deprecated)
.PP
\&\fB\s-1GPRINT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fI\s-1CF\s0\fR\fB:\fR\fIformat\fR (deprecated)
.PP
\&\fB\s-1HRULE\s0\fR\fB:\fR\fIvalue\fR\fB#\fR\fIcolor\fR[\fB:\fR\fIlegend\fR] (deprecated)
.PP
\&\fB\s-1STACK\s0\fR\fB:\fR\fIvname\fR\fB#\fR\fIcolor\fR[\fB:\fR\fIlegend\fR] (deprecated)
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These instructions allow you to generate your image or report.
If you don't use any graph elements, no graph is generated.
Similarly, no report is generated if you don't use print options.
.SH "PRINT"
.IX Header "PRINT"
.IP "\fB\s-1PRINT:\s0\fR\fIvname\fR\fB:\fR\fIformat\fR" 4
.IX Item "PRINT:vname:format"
Depending on the context, either the value component or the time
component of a \fB\s-1VDEF\s0\fR is printed using \fIformat\fR. It is an error
to specify a \fIvname\fR generated by a \fB\s-1DEF\s0\fR or \fB\s-1CDEF\s0\fR.
.Sp
Any text in \fIformat\fR is printed literally with one exception:
The percent character introduces a formatter string. This string
can be:
.Sp
For printing values:
.RS 4
.IP "*" 4
\&\fB%%\fR just prints a literal '%' character
.IP "*" 4
\&\fB%#.#le\fR prints numbers like 1.2346e+04. The optional integers # denote field
width and decimal precision.
.IP "*" 4
\&\fB%#.#lf\fR prints numbers like 12345.6789, with optional field width
and precision.
.IP "*" 4
\&\fB%s\fR place this after \fB%le\fR, \fB%lf\fR or \fB%lg\fR. This will be replaced by the
appropriate \s-1SI\s0 magnitude unit and the value will be scaled
accordingly (123456 \-> 123.456 k).
.IP "*" 4
\&\fB%S\fR is similar to \fB%s\fR. It does, however, use a previously defined
magnitude unit. If there is no such unit yet, it tries to define
one (just like \fB%s\fR) unless the value is zero, in which case the magnitude
unit stays undefined. Thus, formatter strings using \fB%S\fR and no \fB%s\fR
will all use the same magnitude unit except for zero values.
.RE
.RS 4
.Sp
For printing times:
.IP "*" 4
\&\fB%%\fR just prints a literal '%' character
.IP "*" 4
\&\fB%a, \f(CB%A\fB\fR print the abbreviated or full name of the day of the week.
.IP "*" 4
\&\fB%b, \f(CB%B\fB\fR print the abbreviated or full name of the month.
.IP "*" 4
\&\fB%d, \f(CB%m\fB, \f(CB%y\fB, \f(CB%H\fB, \f(CB%M\fB, \f(CB%S\fB\fR print day, month, year, hour, minute, and
second in two-digit format.
.IP "*" 4
\&\fB%Y\fR prints the year in 4\-digit format.
.IP "*" 4
\&\fB%I, \f(CB%p\fB\fR print the hour (01..12), 'am' or 'pm'.
.IP "*" 4
\&\fB%j, \f(CB%w\fB\fR print day of the week (0..6), day of the year (1..366)
.IP "*" 4
\&\fB%c, \f(CB%x\fB, \f(CB%X\fB\fR print date+time, date only, time only.
.IP "*" 4
\&\fB%U, \f(CB%W\fB\fR number of the week of the current year, with either the
first Sunday (%U) or the first Monday (%W) determining the first week.
.IP "*" 4
\&\fB%Z\fR prints the time zone.
.RE
.RS 4
.RE
.IP "\fB\s-1PRINT:\s0\fR\fIvname\fR\fB:\fR\fI\s-1CF\s0\fR<:>\fIformat\fR" 4
.IX Item "PRINT:vname:CF<:>format"
\&\fIDeprecated. Use the new form of this command in new scripts.\fR
The first form of this command is to be used with \fB\s-1CDEF\s0\fR \fIvname\fRs.
.SH "GRAPH"
.IX Header "GRAPH"
.IP "\fB\s-1GPRINT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fIformat\fR" 4
.IX Item "GPRINT:vname:format"
This is the same as \f(CW\*(C`PRINT\*(C'\fR, but printed inside the graph.
.IP "\fB\s-1GPRINT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fI\s-1CF\s0\fR\fB:\fR\fIformat\fR" 4
.IX Item "GPRINT:vname:CF:format"
\&\fIDeprecated. Use the new form of this command in new scripts.\fR
This is the same as \f(CW\*(C`PRINT\*(C'\fR, but printed inside the graph.
.IP "\fB\s-1COMMENT\s0\fR\fB:\fR\fItext\fR" 4
.IX Item "COMMENT:text"
Text is printed literally in the legend section of the graph. Note that in
RRDtool 1.2 you have to escape colons in \s-1COMMENT\s0 text in the same way you
have to escape them in \fB*PRINT\fR commands by writing \fB'\e:'\fR.
.IP "\fB\s-1HRULE\s0\fR\fB:\fR\fIvalue\fR\fB#\fR\fIcolor\fR [ :\fIlegend\fR ]" 4
.IX Item "HRULE:value#color [ :legend ]"
\&\fIDeprecated. Use \f(BI\s-1LINE\s0\fI in new scripts.\fR
.IP "\fB\s-1VRULE\s0\fR\fB:\fR\fItime\fR\fB#\fR\fIcolor\fR [\fB:\fR\fIlegend\fR ]" 4
.IX Item "VRULE:time#color [:legend ]"
Draw a vertical line at \fItime\fR.  Its color is composed from three
hexadecimal numbers specifying the rgb color components (00 is off, \s-1FF\s0 is
maximum) red, green and blue. Optionally, a legend box and string is
printed in the legend section. \fItime\fR may be a number or a variable
from a \fB\s-1VDEF\s0\fR. It is an error to use \fIvname\fRs from \fB\s-1DEF\s0\fR or \fB\s-1CDEF\s0\fR here.
.IP "\fB\s-1LINE\s0\fR[\fIwidth\fR]\fB:\fR\fIvalue\fR[\fB#\fR\fIcolor\fR][\fB:\fR[\fIlegend\fR][\fB:STACK\fR]]" 4
.IX Item "LINE[width]:value[#color][:[legend][:STACK]]"
Draw a line of the specified width onto the graph. \fIwidth\fR can be a
floating point number. If the color is not specified, the drawing is done
\&'invisibly'. This is useful when stacking something else on top of this
line. Also optional is the legend box and string which will be printed in
the legend section if specified. The \fBvalue\fR can be generated by \fB\s-1DEF\s0\fR,
\&\fB\s-1VDEF\s0\fR, and \fB\s-1CDEF\s0\fR.  If the optional \fB\s-1STACK\s0\fR modifier is used, this line
is stacked on top of the previous element which can be a \fB\s-1LINE\s0\fR or an
\&\fB\s-1AREA\s0\fR.
.Sp
When you do not specify a color, you cannot specify a legend.  Should
you want to use \s-1STACK\s0, use the \*(L"LINEx:<value>::STACK\*(R" form.
.IP "\fB\s-1AREA\s0\fR\fB:\fR\fIvalue\fR[\fB#\fR\fIcolor\fR][\fB:\fR[\fIlegend\fR][\fB:STACK\fR]]" 4
.IX Item "AREA:value[#color][:[legend][:STACK]]"
See \fB\s-1LINE\s0\fR, however the area between the x\-axis and the line will
be filled.
.IP "\fB\s-1TICK\s0\fR\fB:\fR\fIvname\fR\fB#\fR\fIrrggbb\fR[\fIaa\fR][\fB:\fR\fIfraction\fR[\fB:\fR\fIlegend\fR]]" 4
.IX Item "TICK:vname#rrggbb[aa][:fraction[:legend]]"
Plot a tick mark (a vertical line) for each value of \fIvname\fR that is
non-zero and not *UNKNOWN*. The \fIfraction\fR argument specifies the
length of the tick mark as a fraction of the y\-axis; the default value
is 0.1 (10% of the axis). Note that the color specification is not
optional.
.IP "\fB\s-1SHIFT\s0\fR\fB:\fR\fIvname\fR\fB:\fR\fIoffset\fR" 4
.IX Item "SHIFT:vname:offset"
Using this command \fBRRDtool\fR will graph the following elements
with the specified offset.  For instance, you can specify an
offset of (\ 7*24*60*60\ =\ )\ 604'800\ seconds to \*(L"look back\*(R" one
week. Make sure to tell the viewer of your graph you did this ...
As with the other graphing elements, you can specify a number or
a variable here.
.IP "\fB\s-1STACK\s0\fR\fB:\fR\fIvname\fR\fB#\fR\fIcolor\fR[\fB:\fR\fIlegend\fR]" 4
.IX Item "STACK:vname#color[:legend]"
\&\fIDeprecated.  Use the \f(BI\s-1STACK\s0\fI modifiers on the other commands.\fR
.PP
\&\fBSome notes on stacking\fR
.PP
When stacking, an element is not placed above the X\-axis but rather
on top of the previous element.  There must be something to stack
upon.
.PP
You can use an \fBinvisible\fR \s-1LINE\s0 or \s-1AREA\s0 to stacked upon.
.PP
An \fBunknown\fR value makes the entire stack unknown from that moment on.
You don't know where to begin (the unknown value) and therefore do
not know where to end.
.PP
If you want to make sure you will be displaying a certain variable,
make sure never to stack upon the unknown value.  Use a \s-1CDEF\s0 instruction
with \fB\s-1IF\s0\fR and \fB\s-1UN\s0\fR to do so.
.SH "NOTES on legend arguments"
.IX Header "NOTES on legend arguments"
.Sh "Escaping the colon"
.IX Subsection "Escaping the colon"
A colon ':' in a \fIlegend\fR argument will mark the end of the
legend. To enter a ':' as part of a legend, the colon must be escaped
with a backslash '\e:'.  Beware that many environments process
backslashes themselves, so it may be necessary to write two
backslashes in order to one being passed onto rrd_graph.
.Sh "String Formatting"
.IX Subsection "String Formatting"
The text printed below the actual graph can be formatted by appending special
escape characters at the end of a text. When ever such a character occurs,
all pending text is pushed onto the graph according to the character
specified.
.PP
Valid markers are: \fB\ej\fR for justified, \fB\el\fR for left aligned, \fB\er\fR for
right aligned, and \fB\ec\fR for centered. In the next section there is an
example showing how to use centered formatting.
.PP
Normally there are two space characters inserted between every two items
printed into the graph. The space following a string can be suppressed by
putting a \fB\eg\fR at the end of the string. The \fB\eg\fR also ignores any space
inside the string if it is at the very end of the string. This can be used
in connection with \fB%s\fR to suppress empty unit strings.
.PP
.Vb 1
\& GPRINT:a:MAX:%lf%s\eg
.Ve
.PP
A special case is \s-1COMMENT:\s0\fB\es\fR which inserts some additional vertical space
before placing the next row of legends.
.PP
If you are using the proportional font in your graph, you can use tab
characters or the sequence \fB\et\fR to line-up legend elements. Note that
the tabs inserted are relative to the start of the current legend
element!
.SH "SEE ALSO"
.IX Header "SEE ALSO"
rrdgraph gives an overview of how \fBrrdtool graph\fR works.
rrdgraph_data describes \fB\s-1DEF\s0\fR,\fB\s-1CDEF\s0\fR and \fB\s-1VDEF\s0\fR in detail.
rrdgraph_rpn describes the \fB\s-1RPN\s0\fR language used in the \fB?DEF\fR statements.
rrdgraph_graph page describes all of the graph and print functions.
.PP
Make sure to read rrdgraph_examples for tips&tricks.
.SH "AUTHOR"
.IX Header "AUTHOR"
Program by Tobias Oetiker <oetiker@ee.ethz.ch>
.PP
This manual page by Alex van den Bogaerdt <alex@ergens.op.het.net>

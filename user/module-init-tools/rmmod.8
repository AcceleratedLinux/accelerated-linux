...\" $Header: /aolnet/dev/src/CVS/sgml/docbook-to-man/cmd/docbook-to-man.sh,v 1.1.1.1 1998/11/13 21:31:59 db3l Exp $
...\"
...\"	transcript compatibility for postscript use.
...\"
...\"	synopsis:  .P! <file.ps>
...\"
.de P!
.fl
\!!1 setgray
.fl
\\&.\"
.fl
\!!0 setgray
.fl			\" force out current output buffer
\!!save /psv exch def currentpoint translate 0 0 moveto
\!!/showpage{}def
.fl			\" prolog
.sy sed -e 's/^/!/' \\$1\" bring in postscript file
\!!psv restore
.
.de pF
.ie     \\*(f1 .ds f1 \\n(.f
.el .ie \\*(f2 .ds f2 \\n(.f
.el .ie \\*(f3 .ds f3 \\n(.f
.el .ie \\*(f4 .ds f4 \\n(.f
.el .tm ? font overflow
.ft \\$1
..
.de fP
.ie     !\\*(f4 \{\
.	ft \\*(f4
.	ds f4\"
'	br \}
.el .ie !\\*(f3 \{\
.	ft \\*(f3
.	ds f3\"
'	br \}
.el .ie !\\*(f2 \{\
.	ft \\*(f2
.	ds f2\"
'	br \}
.el .ie !\\*(f1 \{\
.	ft \\*(f1
.	ds f1\"
'	br \}
.el .tm ? font underflow
..
.ds f1\"
.ds f2\"
.ds f3\"
.ds f4\"
'\" t 
.ta 8n 16n 24n 32n 40n 48n 56n 64n 72n  
.TH "rmmod" "8" 
.SH "NAME" 
rmmod \(em simple program to remove a module from the Linux Kernel 
.SH "SYNOPSIS" 
.PP 
\fBrmmod\fR [\fB-f\fP]  [\fB-w\fP]  [\fB-s\fP]  [\fB-v\fP]  [\fImodulename\fR]  
.SH "DESCRIPTION" 
.PP 
\fBrmmod\fR is a trivial program to remove a 
module from the kernel.  Most users will want to use 
\fBmodprobe\fP\fB(8)\fP instead, with the \fB-r\fP option. 
 
.SH "OPTIONS" 
.IP "\fB-v\fP \fB--verbose\fP         " 10 
Print messages about what the program is doing. 
Usually \fBrmmod\fR only prints messages 
if something goes wrong. 
 
.IP "\fB-f\fP \fB--force\fP         " 10 
This option can be extremely dangerous: it has no effect unless 
CONFIG_MODULE_FORCE_UNLOAD was set when the kernel was 
compiled.  With this option, you can remove modules which are 
being used, or which are not designed to be removed, or have 
been marked as unsafe (see \fBlsmod\fP\fB(8)\fP). 
 
.IP "\fB-w\fP \fB--wait\fP         " 10 
Normally, \fBrmmod\fR will refuse to 
unload modules which are in use.  With this option, 
\fBrmmod\fR will isolate the module, and 
wait until the module is no longer used.  Noone new 
will be able to use the module, but it's up to you to 
make sure the current users eventually finish with it. 
See \fBlsmod\fP\fB(8)\fP) for information on usage counts. 
 
.IP "\fB-s\fP \fB--syslog\fP         " 10 
Send errors to the syslog, instead of standard error. 
 
.IP "\fB-V\fP \fB--version\fP         " 10 
Show version of program, and exit.  See below for caveats 
when run on older kernels. 
 
.SH "BACKWARDS COMPATIBILITY" 
.PP 
This version of \fBrmmod\fR is for kernels 
\fB2.5.48\fP and above.  If it detects a kernel 
with support for old-style modules (for which much of the work 
was done in userspace), it will attempt to run 
\fBrmmod.old\fR in its place, so it is completely 
transparent to the user. 
 
.SH "COPYRIGHT" 
.PP 
This manual page Copyright 2002, Rusty Russell, IBM Corporation. 
 
.SH "SEE ALSO" 
.PP 
\fBmodprobe\fP\fB(8)\fP, 
\fBinsmod\fP\fB(8)\fP, 
\fBlsmod\fP\fB(8)\fP, 
\fBrmmod.old\fP\fB(8)\fP      
...\" created by instant / docbook-to-man, Thu 30 Oct 2003, 11:07 

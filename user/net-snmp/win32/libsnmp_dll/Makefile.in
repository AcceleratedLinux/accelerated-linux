PROGNAME=
CFG=
OUTDIR=
INTDIR=
SSL=

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE 
NULL=nul
!ENDIF 

!IF $(SSL) == 1
OPENSSL=libeay32.lib gdi32.lib
!ELSE
OPENSSL=""
!ENDIF

!IF  "$(CFG)" == "release"

ALL : "..\bin\$(OUTDIR)\netsnmp.dll"


CLEAN :
	-@erase "$(INTDIR)\asn1.obj"
	-@erase "$(INTDIR)\callback.obj"
	-@erase "$(INTDIR)\check_varbind.obj"
	-@erase "$(INTDIR)\cmu_compat.obj"
	-@erase "$(INTDIR)\container.obj"
	-@erase "$(INTDIR)\container_binary_array.obj"
	-@erase "$(INTDIR)\container_iterator.obj"
	-@erase "$(INTDIR)\container_list_ssll.obj"
	-@erase "$(INTDIR)\container_null.obj"
	-@erase "$(INTDIR)\data_list.obj"
	-@erase "$(INTDIR)\default_store.obj"
	-@erase "$(INTDIR)\getopt.obj"
	-@erase "$(INTDIR)\int64.obj"
	-@erase "$(INTDIR)\inet_ntop.obj"
	-@erase "$(INTDIR)\inet_pton.obj"
	-@erase "$(INTDIR)\keytools.obj"
	-@erase "$(INTDIR)\lcd_time.obj"
	-@erase "$(INTDIR)\md5.obj"
	-@erase "$(INTDIR)\mib.obj"
	-@erase "$(INTDIR)\mt_support.obj"
	-@erase "$(INTDIR)\oid_stash.obj"
	-@erase "$(INTDIR)\parse.obj"
	-@erase "$(INTDIR)\read_config.obj"
	-@erase "$(INTDIR)\scapi.obj"
	-@erase "$(INTDIR)\snmp-tc.obj"
	-@erase "$(INTDIR)\snmp.obj"
	-@erase "$(INTDIR)\snmp_alarm.obj"
	-@erase "$(INTDIR)\snmp_api.obj"
	-@erase "$(INTDIR)\snmp_auth.obj"
	-@erase "$(INTDIR)\snmp_client.obj"
	-@erase "$(INTDIR)\snmp_debug.obj"
	-@erase "$(INTDIR)\snmp_enum.obj"
	-@erase "$(INTDIR)\snmp_logging.obj"
	-@erase "$(INTDIR)\snmp_parse_args.obj"
	-@erase "$(INTDIR)\snmp_secmod.obj"
	-@erase "$(INTDIR)\snmp_transport.obj"
	-@erase "$(INTDIR)\snmp_version.obj"
	-@erase "$(INTDIR)\snmp_service.obj"
	-@erase "$(INTDIR)\snmpCallbackDomain.obj"
	-@erase "$(INTDIR)\snmpTCPDomain.obj"
	-@erase "$(INTDIR)\snmpTCPIPv6Domain.obj"
	-@erase "$(INTDIR)\snmpUDPDomain.obj"
	-@erase "$(INTDIR)\snmpUDPIPv6Domain.obj"
	-@erase "$(INTDIR)\snmpusm.obj"
	-@erase "$(INTDIR)\snmpv3.obj"
	-@erase "$(INTDIR)\strlcpy.obj"
	-@erase "$(INTDIR)\system.obj"
	-@erase "$(INTDIR)\tools.obj"
	-@erase "$(INTDIR)\strtok_r.obj"
	-@erase "$(INTDIR)\strtoull.obj"
	-@erase "$(INTDIR)\ucd_compat.obj"
	-@erase "$(INTDIR)\vacm.obj"
	-@erase "$(INTDIR)\vc??.idb"
	-@erase "$(INTDIR)\winpipe.obj"
	-@erase "$(INTDIR)\fd_event_manager.obj"
	-@erase "$(INTDIR)\large_fd_set.obj"
	-@erase "$(INTDIR)\$(PROGNAME).pch"
	-@erase "..\lib\$(OUTDIR)\netsnmp.exp"
	-@erase "..\lib\$(OUTDIR)\netsnmp.lib"
	-@erase "..\bin\$(OUTDIR)\netsnmp.dll"
	-@erase "..\bin\$(OUTDIR)\netsnmp.dll.manifest"

"..\lib\$(OUTDIR)" :
    if not exist "..\lib\$(OUTDIR)/$(NULL)" mkdir "..\lib\$(OUTDIR)"

"..\bin\$(OUTDIR)" :
    if not exist "..\bin\$(OUTDIR)/$(NULL)" mkdir "..\bin\$(OUTDIR)"

"$(INTDIR)" :
    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"

CPP=cl.exe
CPP_PROJ=/nologo /MD /W3 /GX /O2 /I "." /I ".." /I "..\..\snmplib" /I "..\.." /I "..\..\include" /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /D "NETSNMP_DLL" /Fp"$(INTDIR)\libsnmp_dll.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

MTL=midl.exe
MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32 
RSC=rc.exe
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(INTDIR)\libsnmp_dll.bsc" 
BSC32_SBRS= \
	
LINK32=link.exe
LINK32_FLAGS=$(OPENSSL) advapi32.lib ws2_32.lib kernel32.lib user32.lib /nologo /subsystem:console /dll /pdb:none /def:".\libsnmp.def" /out:"../bin/$(OUTDIR)/netsnmp.dll" /implib:"../lib/$(OUTDIR)\netsnmp.lib" 
LINK32_OBJS= \
	"$(INTDIR)\asn1.obj" \
	"$(INTDIR)\callback.obj" \
	"$(INTDIR)\check_varbind.obj" \
	"$(INTDIR)\cmu_compat.obj" \
	"$(INTDIR)\container.obj" \
	"$(INTDIR)\container_binary_array.obj" \
	"$(INTDIR)\container_iterator.obj" \
	"$(INTDIR)\container_list_ssll.obj" \
	"$(INTDIR)\container_null.obj" \
	"$(INTDIR)\data_list.obj" \
	"$(INTDIR)\default_store.obj" \
	"$(INTDIR)\getopt.obj" \
	"$(INTDIR)\int64.obj" \
	"$(INTDIR)\inet_ntop.obj" \
	"$(INTDIR)\inet_pton.obj" \
	"$(INTDIR)\keytools.obj" \
	"$(INTDIR)\lcd_time.obj" \
	"$(INTDIR)\md5.obj" \
	"$(INTDIR)\mib.obj" \
	"$(INTDIR)\mt_support.obj" \
	"$(INTDIR)\oid_stash.obj" \
	"$(INTDIR)\parse.obj" \
	"$(INTDIR)\read_config.obj" \
	"$(INTDIR)\scapi.obj" \
	"$(INTDIR)\snmp-tc.obj" \
	"$(INTDIR)\snmp.obj" \
	"$(INTDIR)\snmp_alarm.obj" \
	"$(INTDIR)\snmp_api.obj" \
	"$(INTDIR)\snmp_auth.obj" \
	"$(INTDIR)\snmp_client.obj" \
	"$(INTDIR)\snmp_debug.obj" \
	"$(INTDIR)\snmp_enum.obj" \
	"$(INTDIR)\snmp_logging.obj" \
	"$(INTDIR)\snmp_parse_args.obj" \
	"$(INTDIR)\snmp_secmod.obj" \
	"$(INTDIR)\snmp_transport.obj" \
	"$(INTDIR)\snmp_version.obj" \
	"$(INTDIR)\snmp_service.obj" \
	"$(INTDIR)\snmpCallbackDomain.obj" \
	"$(INTDIR)\snmpTCPDomain.obj" \
	"$(INTDIR)\snmpTCPIPv6Domain.obj" \
	"$(INTDIR)\snmpUDPDomain.obj" \
	"$(INTDIR)\snmpUDPIPv6Domain.obj" \
	"$(INTDIR)\snmpusm.obj" \
	"$(INTDIR)\snmpv3.obj" \
	"$(INTDIR)\strlcpy.obj" \
	"$(INTDIR)\system.obj" \
	"$(INTDIR)\tools.obj" \
	"$(INTDIR)\strtok_r.obj" \
	"$(INTDIR)\strtoull.obj" \
	"$(INTDIR)\ucd_compat.obj" \
	"$(INTDIR)\vacm.obj" \
	"$(INTDIR)\winpipe.obj" \
	"$(INTDIR)\fd_event_manager.obj" \
	"$(INTDIR)\large_fd_set.obj"

"..\bin\$(OUTDIR)\netsnmp.dll" : "..\bin\$(OUTDIR)" "..\lib\$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<
 if exist "../bin/$(OUTDIR)/netsnmp.dll.manifest" \
	    mt.exe -manifest "../bin/$(OUTDIR)/netsnmp.dll.manifest" -outputresource:"../bin/$(OUTDIR)/netsnmp.dll";2
		
!ELSEIF  "$(CFG)" == "debug"

ALL : "..\bin\$(OUTDIR)\netsnmp.dll"


CLEAN :
	-@erase "$(INTDIR)\asn1.obj"
	-@erase "$(INTDIR)\callback.obj"
	-@erase "$(INTDIR)\check_varbind.obj"
	-@erase "$(INTDIR)\cmu_compat.obj"
	-@erase "$(INTDIR)\container.obj"
	-@erase "$(INTDIR)\container_binary_array.obj"
	-@erase "$(INTDIR)\container_iterator.obj"
	-@erase "$(INTDIR)\container_list_ssll.obj"
	-@erase "$(INTDIR)\container_null.obj"
	-@erase "$(INTDIR)\data_list.obj"
	-@erase "$(INTDIR)\default_store.obj"
	-@erase "$(INTDIR)\getopt.obj"
	-@erase "$(INTDIR)\int64.obj"
	-@erase "$(INTDIR)\inet_ntop.obj"
	-@erase "$(INTDIR)\inet_pton.obj"
	-@erase "$(INTDIR)\keytools.obj"
	-@erase "$(INTDIR)\lcd_time.obj"
	-@erase "$(INTDIR)\md5.obj"
	-@erase "$(INTDIR)\mib.obj"
	-@erase "$(INTDIR)\mt_support.obj"
	-@erase "$(INTDIR)\oid_stash.obj"
	-@erase "$(INTDIR)\parse.obj"
	-@erase "$(INTDIR)\read_config.obj"
	-@erase "$(INTDIR)\scapi.obj"
	-@erase "$(INTDIR)\snmp-tc.obj"
	-@erase "$(INTDIR)\snmp.obj"
	-@erase "$(INTDIR)\snmp_alarm.obj"
	-@erase "$(INTDIR)\snmp_api.obj"
	-@erase "$(INTDIR)\snmp_auth.obj"
	-@erase "$(INTDIR)\snmp_client.obj"
	-@erase "$(INTDIR)\snmp_debug.obj"
	-@erase "$(INTDIR)\snmp_enum.obj"
	-@erase "$(INTDIR)\snmp_logging.obj"
	-@erase "$(INTDIR)\snmp_parse_args.obj"
	-@erase "$(INTDIR)\snmp_secmod.obj"
	-@erase "$(INTDIR)\snmp_transport.obj"
	-@erase "$(INTDIR)\snmp_version.obj"
	-@erase "$(INTDIR)\snmp_service.obj"
	-@erase "$(INTDIR)\snmpCallbackDomain.obj"
	-@erase "$(INTDIR)\snmpTCPDomain.obj"
	-@erase "$(INTDIR)\snmpTCPIPv6Domain.obj"
	-@erase "$(INTDIR)\snmpUDPDomain.obj"
	-@erase "$(INTDIR)\snmpUDPIPv6Domain.obj"
	-@erase "$(INTDIR)\snmpusm.obj"
	-@erase "$(INTDIR)\snmpv3.obj"
	-@erase "$(INTDIR)\strlcpy.obj"
	-@erase "$(INTDIR)\system.obj"
	-@erase "$(INTDIR)\tools.obj"
	-@erase "$(INTDIR)\strtok_r.obj"
	-@erase "$(INTDIR)\strtoull.obj"
	-@erase "$(INTDIR)\ucd_compat.obj"
	-@erase "$(INTDIR)\vacm.obj"
	-@erase "$(INTDIR)\vc??.idb"
	-@erase "$(INTDIR)\vc??.pdb"
	-@erase "$(INTDIR)\winpipe.obj"
	-@erase "$(INTDIR)\fd_event_manager.obj"
	-@erase "$(INTDIR)\large_fd_set.obj"
	-@erase "$(INTDIR)\$(PROGNAME).pch"
	-@erase "..\lib\$(OUTDIR)\netsnmp.exp"
	-@erase "..\lib\$(OUTDIR)\netsnmp.lib"
	-@erase "$(INTDIR)\netsnmp.pdb"
	-@erase "..\bin\$(OUTDIR)\netsnmp.dll"
	-@erase "..\bin\$(OUTDIR)\netsnmp.dll.manifest"

"..\lib\$(OUTDIR)" :
    if not exist "..\lib\$(OUTDIR)/$(NULL)" mkdir "..\lib\$(OUTDIR)"

"..\bin\$(OUTDIR)" :
    if not exist "..\bin\$(OUTDIR)/$(NULL)" mkdir "..\bin\$(OUTDIR)"

"$(INTDIR)" :
    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"

CPP=cl.exe
CPP_PROJ=/nologo /MDd /W3 /Gm /GX /Zi /Od /I "." /I ".." /I "..\..\snmplib" /I "..\.." /I "..\..\include" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /D "NETSNMP_DLL" /Fp"$(INTDIR)\libsnmp_dll.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

MTL=midl.exe
MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32 
RSC=rc.exe
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(INTDIR)\libsnmp_dll.bsc" 
BSC32_SBRS= \
	
LINK32=link.exe
LINK32_FLAGS=$(OPENSSL) advapi32.lib ws2_32.lib kernel32.lib user32.lib /nologo /subsystem:console /dll /incremental:no /pdb:"$(INTDIR)\netsnmp.pdb" /debug /def:".\libsnmp.def" /out:"../bin/$(OUTDIR)/netsnmp.dll" /implib:"../lib/$(OUTDIR)\netsnmp.lib" 
LINK32_OBJS= \
	"$(INTDIR)\asn1.obj" \
	"$(INTDIR)\callback.obj" \
	"$(INTDIR)\check_varbind.obj" \
	"$(INTDIR)\cmu_compat.obj" \
	"$(INTDIR)\container.obj" \
	"$(INTDIR)\container_binary_array.obj" \
	"$(INTDIR)\container_iterator.obj" \
	"$(INTDIR)\container_list_ssll.obj" \
	"$(INTDIR)\container_null.obj" \
	"$(INTDIR)\data_list.obj" \
	"$(INTDIR)\default_store.obj" \
	"$(INTDIR)\getopt.obj" \
	"$(INTDIR)\int64.obj" \
	"$(INTDIR)\inet_ntop.obj" \
	"$(INTDIR)\inet_pton.obj" \
	"$(INTDIR)\keytools.obj" \
	"$(INTDIR)\lcd_time.obj" \
	"$(INTDIR)\md5.obj" \
	"$(INTDIR)\mib.obj" \
	"$(INTDIR)\mt_support.obj" \
	"$(INTDIR)\oid_stash.obj" \
	"$(INTDIR)\parse.obj" \
	"$(INTDIR)\read_config.obj" \
	"$(INTDIR)\scapi.obj" \
	"$(INTDIR)\snmp-tc.obj" \
	"$(INTDIR)\snmp.obj" \
	"$(INTDIR)\snmp_alarm.obj" \
	"$(INTDIR)\snmp_api.obj" \
	"$(INTDIR)\snmp_auth.obj" \
	"$(INTDIR)\snmp_client.obj" \
	"$(INTDIR)\snmp_debug.obj" \
	"$(INTDIR)\snmp_enum.obj" \
	"$(INTDIR)\snmp_logging.obj" \
	"$(INTDIR)\snmp_parse_args.obj" \
	"$(INTDIR)\snmp_secmod.obj" \
	"$(INTDIR)\snmp_transport.obj" \
	"$(INTDIR)\snmp_version.obj" \
	"$(INTDIR)\snmp_service.obj" \
	"$(INTDIR)\snmpCallbackDomain.obj" \
	"$(INTDIR)\snmpTCPDomain.obj" \
	"$(INTDIR)\snmpTCPIPv6Domain.obj" \
	"$(INTDIR)\snmpUDPDomain.obj" \
	"$(INTDIR)\snmpUDPIPv6Domain.obj" \
	"$(INTDIR)\snmpusm.obj" \
	"$(INTDIR)\snmpv3.obj" \
	"$(INTDIR)\strlcpy.obj" \
	"$(INTDIR)\system.obj" \
	"$(INTDIR)\tools.obj" \
	"$(INTDIR)\strtok_r.obj" \
	"$(INTDIR)\strtoull.obj" \
	"$(INTDIR)\ucd_compat.obj" \
	"$(INTDIR)\vacm.obj" \
	"$(INTDIR)\winpipe.obj" \
	"$(INTDIR)\fd_event_manager.obj" \
	"$(INTDIR)\large_fd_set.obj"

"..\bin\$(OUTDIR)\netsnmp.dll" : "..\bin\$(OUTDIR)" "..\lib\$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<
 if exist "../bin/$(OUTDIR)/netsnmp.dll.manifest" \
	    mt.exe -manifest "../bin/$(OUTDIR)/netsnmp.dll.manifest" -outputresource:"../bin/$(OUTDIR)/netsnmp.dll";2
!ENDIF 


!IF "$(NO_EXTERNAL_DEPS)" != "1"
!IF EXISTS("libsnmp_dll.dep")
!INCLUDE "libsnmp_dll.dep"
!ELSE 
!MESSAGE Warning: cannot find "libsnmp_dll.dep"
!ENDIF 
!ENDIF 


!IF "$(CFG)" == "release" || "$(CFG)" == "debug"
SOURCE=..\..\snmplib\asn1.c

"$(INTDIR)\asn1.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\callback.c

"$(INTDIR)\callback.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\check_varbind.c

"$(INTDIR)\check_varbind.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\cmu_compat.c

"$(INTDIR)\cmu_compat.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\container.c

"$(INTDIR)\container.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\container_binary_array.c

"$(INTDIR)\container_binary_array.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\container_iterator.c

"$(INTDIR)\container_iterator.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\container_list_ssll.c

"$(INTDIR)\container_list_ssll.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\container_null.c

"$(INTDIR)\container_null.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\data_list.c

"$(INTDIR)\data_list.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\default_store.c

"$(INTDIR)\default_store.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\getopt.c

"$(INTDIR)\getopt.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\int64.c

"$(INTDIR)\int64.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\inet_ntop.c

"$(INTDIR)\inet_ntop.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\inet_pton.c

"$(INTDIR)\inet_pton.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\keytools.c

"$(INTDIR)\keytools.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\lcd_time.c

"$(INTDIR)\lcd_time.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\md5.c

"$(INTDIR)\md5.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\mib.c

"$(INTDIR)\mib.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\mt_support.c

"$(INTDIR)\mt_support.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\oid_stash.c

"$(INTDIR)\oid_stash.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\parse.c

"$(INTDIR)\parse.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\read_config.c

"$(INTDIR)\read_config.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\scapi.c

"$(INTDIR)\scapi.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE="..\..\snmplib\snmp-tc.c"

"$(INTDIR)\snmp-tc.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp.c

"$(INTDIR)\snmp.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_alarm.c

"$(INTDIR)\snmp_alarm.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_api.c

"$(INTDIR)\snmp_api.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_auth.c

"$(INTDIR)\snmp_auth.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_client.c

"$(INTDIR)\snmp_client.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_debug.c

"$(INTDIR)\snmp_debug.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_enum.c

"$(INTDIR)\snmp_enum.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_logging.c

"$(INTDIR)\snmp_logging.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_parse_args.c

"$(INTDIR)\snmp_parse_args.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_secmod.c

"$(INTDIR)\snmp_secmod.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_transport.c

"$(INTDIR)\snmp_transport.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_version.c

"$(INTDIR)\snmp_version.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmp_service.c

"$(INTDIR)\snmp_service.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpCallbackDomain.c

"$(INTDIR)\snmpCallbackDomain.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpTCPDomain.c

"$(INTDIR)\snmpTCPDomain.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpTCPIPv6Domain.c

"$(INTDIR)\snmpTCPIPv6Domain.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpUDPDomain.c

"$(INTDIR)\snmpUDPDomain.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpUDPIPv6Domain.c

"$(INTDIR)\snmpUDPIPv6Domain.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpusm.c

"$(INTDIR)\snmpusm.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\snmpv3.c

"$(INTDIR)\snmpv3.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\strlcpy.c

"$(INTDIR)\strlcpy.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\system.c

"$(INTDIR)\system.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\tools.c

"$(INTDIR)\tools.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\strtok_r.c

"$(INTDIR)\strtok_r.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\strtoull.c

"$(INTDIR)\strtoull.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\ucd_compat.c

"$(INTDIR)\ucd_compat.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\vacm.c

"$(INTDIR)\vacm.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\winpipe.c

"$(INTDIR)\winpipe.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\fd_event_manager.c

"$(INTDIR)\fd_event_manager.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=..\..\snmplib\large_fd_set.c

"$(INTDIR)\large_fd_set.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


!ENDIF 



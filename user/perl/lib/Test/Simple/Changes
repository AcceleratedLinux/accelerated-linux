0.62  Sat Oct  8 01:25:03 PDT 2005
    * Aborbed Test::Builder::Tester.  The last release broke it because its
      screen scraping Test::More and the failure output changed.  By
      distributing them together we ensure TBT won't break again.
    * Test::Builder->BAILOUT() was missing.
    - is_deeply() can now handle function and code refs in a very limited
      way.  It simply looks to see if they have the same referent.
      [rt.cpan.org 14746]

0.61  Fri Sep 23 23:26:05 PDT 2005
    - create.t was trying to read from a file before it had been closed
      (and thus the changes may not have yet been written).
    * is_deeply() would call stringification methods on non-object strings
      which happened to be the name of a string overloaded class.
      [rt.cpan.org 14675]

0.60_02  Tue Aug  9 00:27:41 PDT 2005
    * Added Test::Builder::Module.
    - Changed Test::More and Test::Simple to use Test::Builder::Module
    - Minor Win32 testing nit in fail-more.t
    * Added no_diag() method to Test::Builder and changed Test::More's
      no_diag internals to use that. [rt.cpan.org 8655]
    * Deprecated no_diag() as an option to "use Test::More".  Call the
      Test::Builder method instead.

0.60_01  Sun Jul  3 18:11:58 PDT 2005
    - Moved the docs around a little to better group all the testing
      functions together. [rt.cpan.org 8388]
    * Added a BAIL_OUT() function to Test::More [rt.cpan.org 8381]
    - Changed Test::Builder->BAILOUT to BAIL_OUT to match other method's
      naming conventions.  BAILOUT remains but is deprecated.
    * Changed the standard failure diagnostics to include the test name.
      [rt.cpan.org 12490]
    - is_deeply() was broken for overloaded objects in the top level in
      0.59_01.  [rt.cpan.org 13506]
    - String overloaded objects without an 'eq' or '==' method are now
      handled in cmp_ok() and is().
    - cmp_ok() will now treat overloaded objects as numbers if the comparison
      operator is numeric. [rt.cpan.org 13156]
    - cmp_ok(), like() and unlike will now throw uninit warnings if their
      arguments are undefined. [rt.cpan.org 13155]
    - cmp_ok() will now throw warnings as if the comparison were run 
      normally, for example cmp_ok(2, '==', 'foo') will warn about 'foo' 
      not being numeric.  Previously all warnings in the comparison were
      supressed. [rt.cpan.org 13155]
    - Tests will now report *both* the number of tests failed and if the
      wrong number of tests were run.  Previously if tests failed and the
      wrong number were run it would only report the latter. 
      [rt.cpan.org 13494]
    - Missing or extra tests are not considered failures for the purposes
      of calculating the exit code.  Should there be no failures but the
      wrong number of tests the exit code will be 254.
    - Avoiding an unbalanced sort in eq_set() [bugs.perl.org 36354]
    - Documenting that eq_set() doesn't deal well with refs.
    - Clarified how is_deeply() compares a bit.
    * Once again working on 5.4.5.

0.60  Tue May  3 14:20:34 PDT 2005

0.59_01  Tue Apr 26 21:51:12 PDT 2005
    * Test::Builder now has a create() method which allows you to create
      a brand spanking new Test::Builder object.
    * require_ok() was not working for single letter module names.
    * is_deeply() and eq_* now work with circular scalar references
      (Thanks Fergal)
    * Use of eq_* now officially discouraged.
    - Removed eq_* from the SYNOPSIS.
    - is_deeply(undef, $not_undef); now works. [rt.cpan.org 9441]
    - is_deeply() was mistakenly interpeting the same reference used twice
      in a data structure as being circular causing failures.
      [rt.cpan.org 11623]
    - Loading Test::Builder but not using it would interfere with the
      exit code if the code exited. [rt.cpan.org 12310]
    - is_deeply() diagnostics now disambiguate between stringified references
      and references. [rt.cpan.org 8865]
    - Files opened by the output methods are now autoflushed.
    - todo() now honors $Level when looking for $TODO.

0.54  Wed Dec 15 04:18:43 EST 2004
    * $how_many is optional for skip() and todo_skip().  Thanks to 
      Devel::Cover for pointing this out.
    - Removed a user defined function called err() in the tests to placate
      users of older versions of the dor patch before err() was weakend.
      [rt.cpan.org 8734]

0.53_01  Sat Dec 11 19:02:18 EST 2004
    - current_test() can now be set backward.
    - *output() methods now handle tied handles and *FOO{IO} properly.
    - maybe_regex() now handles undef gracefully.
    - maybe_regex() now handles 'm,foo,' style regexes.
    - sort_bug.t wasn't checking for threads properly.  Would fail on
      5.6 that had ithreads compiled in. [rt.cpan.org 8765]

0.53  Mon Nov 29 04:43:24 EST 2004
    - Apparently its possible to have Module::Signature installed without
      it being functional.  Fixed the signature test to account for this.
      (not a real bug)

0.52  Sun Nov 28 21:41:03 EST 2004
    - plan() now better checks that the given plan is valid. 
      [rt.cpan.org 2597]

0.51_02  Sat Nov 27 01:25:25 EST 2004
    * is_deeply() and all the eq_* functions now handle circular data
      structures.  [rt.cpan.org 7289]
    * require_ok() now handles filepaths in addition to modules.
    - Clarifying Test::More's position on overloaded objects 
    - Fixed a bug introduced in 0.51_01 causing is_deeply() to pierce
      overloaded objects.
    - Mentioning rt.cpan.org for reporting bugs.

0.51_01  Fri Nov 26 02:59:30 EST 2004
    - plan() was accidentally exporting functions [rt.cpan.org 8385]
    * diag @msgs would insert # between arguments. [rt.cpan.org 8392]
    * eq_set() could cause problems under threads due to a weird sort bug
      [rt.cpan.org 6782]
    * undef no longer equals '' in is_deeply() [rt.cpan.org 6837]
    * is_deeply() would sometimes compare references as strings.
      [rt.cpan.org 7031]
    - eq_array() and eq_hash() could hold onto references if they failed
      keeping them in memory and preventing DESTROY.  [rt.cpan.org 7032]
    * is_deeply() could confuse [] with a non-existing value
      [rt.cpan.org 7030]
    - is_deeply() diagnostics a little off when scalar refs were inside
      an array or hash ref [rt.cpan.org 7033]
    - Thanks to Fergal Daly for ferretting out all these long standing 
      is_deeply and eq_* bugs.

0.51  Tue Nov 23 04:51:12 EST 2004
    - Fixed bug in fail_one.t on Windows (not a real bug).
    - TODO reasons as overloaded objects now won't blow up under threads.
      [Autrijus Tang]
    - skip() in 0.50 tickled yet another bug in threads::shared.  Hacked
      around it.

0.50  Sat Nov 20 00:28:44 EST 2004
    - Fixed bug in fail-more test on Windows (not a real bug).
      [rt.cpan.org 8022]
    - Change from CVS to SVK.  Hopefully this is the last time I move
      version control systems.
    - Again removing File::Spec dependency (came back in 0.48_02)
    - Change from Aegis back to CVS

0.49  Thu Oct 14 21:58:50 EDT 2004
    - t/harness_active.t would fail for frivolous reasons with older
      MakeMakers (test bug) [thanks Bill Moseley for noticing]

0.48_02  Mon Jul 19 02:07:23 EDT 2004
    * Overloaded objects as names now won't blow up under threads
      [rt.cpan.org 4218 and 4232]
    * Overloaded objects which stringify to undef used as test names
      now won't cause internal uninit warnings. [rt.cpan.org 4232]
    * Failure diagnostics now come out on their own line when run in 
      Test::Harness.
    - eq_set() sometimes wasn't giving the right results if nested refs 
      were involved [rt.cpan.org 3747]
    - isnt() giving wrong diagnostics and warning if given any undefs.
    * Give unlike() the right prototype [rt.cpan.org 4944]
    - Change from CVS to Aegis
    - is_deeply() will now do some basic argument checks to guard against
      accidentally passing in a whole array instead of its reference.
    - Mentioning Test::Differences, Test::Deep and Bundle::Test.
    - Removed dependency on File::Spec.
    - Fixing the grammar of diagnostic outputs when only a single test
      is run or failed (ie. "Looks like you failed 1 tests").
      [Darren Chamberlain]

0.48_01  Mon Nov 11 02:36:43 EST 2002
    - Mention Test::Class in Test::More's SEE ALSO
    * use_ok() now DWIM for version checks
    - More problems with ithreads fixed.
    * Test::Harness upgrade no longer optional.  It was causing too
      many problems when the T::H upgrade didn't work.
    * Drew Taylor added a 'no_diag' option to Test::More to switch
      off all diag() statements.
    * Test::Builder/More no longer automatically loads threads.pm
      when threads are enabled.  The user must now do this manually.
    * Alex Francis added reset() reset the state of Test::Builder in 
      persistent environments.
    - David Hand noted that Test::Builder/More exit code behavior was
      not documented.  Only Test::Simple.

0.47  Mon Aug 26 03:54:22 PDT 2002 
    * Tatsuhiko Miyagawa noticed Test::Builder was accidentally storing 
      objects passed into test functions causing problems with tests 
      relying on object destruction.
    - Added example of calculating the number of tests to Test::Tutorial
    - Peter Scott made the ending logic not fire on child processes when
      forking.
    * Test::Builder is once again ithread safe.

0.46  Sat Jul 20 19:57:40 EDT 2002
    - Noted eq_set() isn't really a set comparision.
    - Test fix, exit codes are broken on MacPerl (bleadperl@16868)
    - Make Test::Simple install itself into the core for >= 5.8
    - Small fixes to Test::Tutorial and skip examples
    * Added TB->has_plan() from Adrian Howard
    - Clarified the meaning of 'actual_ok' from TB->details
    * Added TB->details() from chromatic
    - Neil Watkiss fixed a pre-5.8 test glitch with threads.t
    * If the test died before a plan, it would exit with 0 [ID 20020716.013]

0.45  Wed Jun 19 18:41:12 EDT 2002
    - Andy Lester made the SKIP & TODO docs a bit clearer.
    - Explicitly disallowing double plans. (RT #553)
    - Kicking up the minimum version of Test::Harness to one that's
      fairly bug free.
    - Made clear a common problem with use_ok and BEGIN blocks.
    - Arthur Bergman made Test::Builder thread-safe.

0.44  Thu Apr 25 00:27:27 EDT 2002
    - names containing newlines no longer produce confusing output
      (from chromatic)
    - chromatic provided a fix so can_ok() honors can() overrides.
    - Nick Ing-Simmons suggested todo_skip() be a bit clearer about
      the skipping part.
    - Making plan() vomit if it gets something it doesn't understand.
    - Tatsuhiko Miyagawa fixed use_ok() with pragmata on older perls.
    - quieting diag(undef)

0.43  Thu Apr 11 22:55:23 EDT 2002
    - Adrian Howard added TB->maybe_regex()
    - Adding Mark Fowler's suggestion to make diag() return
      false.
    - TB->current_test() still not working when no tests were run via
      TB itself.  Fixed by Dave Rolsky.

0.42  Wed Mar  6 15:00:24 EST 2002
    - Setting Test::Builder->current_test() now works (see what happens
      when you forget to test things?)
    - The change in is()'s undef/'' handling in 0.34 was an API change, 
      but I forgot to declare it as such.
    - The apostrophilic jihad attacks!  Philip Newtons patch for
      grammar mistakes in the doc's.

0.41  Mon Dec 17 22:45:20 EST 2001
    * chromatic added diag()
    - Internal eval()'s sometimes interfering with $@ and $!.  Fixed.

0.40  Fri Dec 14 15:41:39 EST 2001
    * isa_ok() now accepts unblessed references gracefully
    - Nick Clark found a bug with like() and a regex with % in it.
    - exit.t was hanging on 5.005_03 VMS perl.  Test now skipped.
    - can_ok() would pass if no methods were given.  Now fails.
    - isnt() diagnostic output format changed
    * Added some docs about embedding and extending Test::More
    * Added Test::More->builder
    * Added cmp_ok()
    * Added todo_skip()
    * Added unlike()
    - Piers pointed out that sometimes people override isa().
      isa_ok() now accounts for that.

0.36  Thu Nov 29 14:07:39 EST 2001
    - Matthias Urlichs found that intermixed prints to STDOUT and test 
      output came out in the wrong order when piped.

0.35  Tue Nov 27 19:57:03 EST 2001
    - Little glitch in the test suite.  No actual bug.

0.34  Tue Nov 27 15:43:56 EST 2001
    * **API CHANGE** Empty string no longer matches undef in is() 
      and isnt().
    * Added isnt_eq and isnt_num to Test::Builder.

0.33  Mon Oct 22 21:05:47 EDT 2001
    * It's now officially safe to redirect STDOUT and STDERR without
      affecting test output.
    - License and POD cleanup by Autrijus Tang
    - Synched up Test::Tutorial with the wiki version
    - Minor VMS test nit.

0.32  Tue Oct 16 16:52:02 EDT 2001
    * Finally added a seperate plan() function
    * Adding a name field to isa_ok()
      (Requested by Dave Rolsky)
    - Test::More was using Carp.pm, causing the occasional false positive.
      (Reported by Tatsuhiko Miyagawa)

0.31  Mon Oct  8 19:24:53 EDT 2001
    * Added an import option to Test::More
    * Added no_ending and no_header options to Test::Builder
      (Thanks to Dave Rolsky for giving this a swift kick in the ass)
    * Added is_deeply().  Display of scalar refs not quite 100%
      (Thanks to Stas Bekman for Apache::TestUtil idea thievery)
    - Fixed a minor warning with skip()
      (Thanks to Wolfgang Weisselberg for finding this one)

0.30  Thu Sep 27 22:10:04 EDT 2001
    * Added Test::Builder
      (Thanks muchly to chromatic for getting this off the ground!)
    * Diagnostics are back to using STDERR *unless* it's from a todo
      test.  Those go to STDOUT.
    - Fixed it so nothing is printed if a test is run with a -c flag.
      Handy when a test is being deparsed with B::Deparse.

0.20  *UNRELEASED*

0.19  Tue Sep 18 17:48:32 EDT 2001
    * Test::Simple and Test::More no longer print their diagnostics
      to STDERR.  It instead goes to STDOUT.
    * TODO tests which fail now print full failure diagnostics.
    - Minor bug in ok()'s test name diagnostics made it think a blank
      name was a number.
    - ok() less draconian about test names
    - Added temporary special case for Parrot::Test
    - Now requiring File::Spec for our tests.

0.18  Wed Sep  5 20:35:24 EDT 2001
    * ***API CHANGE*** can_ok() only counts as one test
    - can_ok() has better diagnostics
    - Minor POD fixes from mjd
    - adjusting the internal layout to make it easier to put it into
      the core

0.17  Wed Aug 29 20:16:28 EDT 2001
    * Added can_ok() and isa_ok() to Test::More

0.16  Tue Aug 28 19:52:11 EDT 2001
    * vmsperl foiled my sensisble exit codes.  Reverting to a much more
      coarse scheme.

0.15  Tue Aug 28 06:18:35 EDT 2001  *UNRELEASED*
    * Now using sensible exit codes on VMS.

0.14  Wed Aug 22 17:26:28 EDT 2001
    * Added a first cut at Test::Tutorial

0.13  Tue Aug 14 15:30:10 EDT 2001
    * Added a reason to the skip_all interface
    - Fixed a bug to allow 'use Test::More;' to work.
      (Thanks to Tatsuhiko Miyagawa again)
    - Now always testing backwards compatibility.

0.12  Tue Aug 14 11:02:39 EDT 2001
    * Fixed some compatibility bugs with older Perls
      (Thanks to Tatsuhiko Miyagawa)

0.11  Sat Aug 11 23:05:19 EDT 2001
    * Will no longer warn about testing undef values
    - Escaping # in test names
    - Ensuring that ok() returns true or false and not undef
    - Minor doc typo in the example

0.10  Tue Jul 31 15:01:11 EDT 2001
    * Test::More is now distributed in this tarball.
    * skip and todo tests work!
    * Extended use_ok() so it can import
    - A little internal rejiggering
    - Added a TODO file

0.09  Wed Jun 27 02:55:54 EDT 2001
    - VMS fixes

0.08  Fri Jun 15 14:39:50 EDT 2001
    - Guarding against $/ and -l
    - Reformatted the way failed tests are reported to make them stand out
      a bit better.

0.07  Tue Jun 12 15:55:54 BST 2001
    - 'use Test::Simple' by itself no longer causes death
    - Yet more fixes for death in eval
    - Limiting max failures reported via exit code to 254.

0.06  Wed May  9 23:38:17 BST 2001
    - Whoops, left a private method in the public docs.

0.05  Wed May  9 20:40:35 BST 2001
    - Forgot to include the exit tests.
    - Trouble with exiting properly under 5.005_03 and 5.6.1 fixed
    - Turned off buffering
    * 5.004 new minimum version
    - Now explicitly tested with 5.6.1, 5.6.0, 5.005_03 and 5.004

0.04  Mon Apr  2 11:05:01 BST 2001
    - Fixed "require Test::Simple" so it doesn't bitch and exit 255
    - Now installable with the CPAN shell.

0.03  Fri Mar 30 08:08:33 BST 2001
    - ok() now prints on what line and file it failed.
    - eval 'die' was considered abnormal.  Fixed.

0.02  Fri Mar 30 05:12:14 BST 2001      *UNRELEASED*
    - exit codes tested
    * exit code on abnormal exit changed to 255 (thanks to Tim Bunce for
      pointing out that Unix can't do negative exit codes)
    - abnormal exits now better caught.
    - No longer using Test.pm to test this, but still minimum of 5.005
      due to needing $^S.

0.01  Wed Mar 28 06:44:44 BST 2001
    - First working version released to CPAN


-include ../user.mak

CFLAGS += -Wall
CFLAGS += -D_GNU_SOURCE

EXEC = netflash
EXTRA_TARGETS :=
OBJS = tftpmain.o tftp.o tftpsubs.o http.o fileblock.o fileblock_ram.o fileblock_file.o base64.o program.o check.o
COBJS = netflash.o

OBJS += util.o

ifdef CONFIG_USER_NETFLASH_ATECC508A
OBJS += crypto_atmel.o sha256.o dev_mode.o
ifdef CONFIG_USER_NETFLASH_ATECC508A_KERNEL_DRIVER
OBJS += atecc_kernel.o
else
OBJS += atecc.o
endif
ifdef CONFIG_USER_NETFLASH_ATECC508A_EMBEDDED_KERNEL
CPPFLAGS += -DCONFIG_USER_NETFLASH_ATECC508A_EMBEDDED_KERNEL
endif
ifdef CONFIG_USER_NETFLASH_ATECC508A_ALG_ECDSA
CPPFLAGS += -DCONFIG_USER_NETFLASH_ATECC508A_ALG_ECDSA
else
ifdef CONFIG_USER_NETFLASH_ATECC508A_ALG_HMAC
CPPFLAGS += -DCONFIG_USER_NETFLASH_ATECC508A_ALG_HMAC
endif
endif
ifneq ($(CONFIG_DEFAULTS_DIGI_IX14)$(CONFIG_DEFAULTS_DIGI_IX14_WX),)
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_IX14
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTIT_MINI
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTIT_MINI
endif
ifneq ($(CONFIG_DEFAULTS_DIGI_EX12)$(CONFIG_DEFAULTS_DIGI_EX12_PR),)
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_EX12
endif
ifdef CONFIG_DEFAULTS_DIGI_EX50
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_EX50
endif
ifdef CONFIG_DEFAULTS_DIGI_IX10
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_IX10
endif
ifneq ($(CONFIG_DEFAULTS_DIGI_IX15)$(CONFIG_DEFAULTS_DIGI_IX15_SX),)
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_IX15
endif
ifneq ($(CONFIG_DEFAULTS_DIGI_IX20)$(CONFIG_DEFAULTS_DIGI_IX20_PR)$(CONFIG_DEFAULTS_DIGI_IX20W)$(CONFIG_DEFAULTS_DIGI_IX20W_PR),)
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_IX20
endif
ifneq ($(CONFIG_DEFAULTS_DIGI_IX30)$(CONFIG_DEFAULTS_DIGI_IX30_PR),)
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_IX30
endif
ifneq (,$(CONFIG_DEFAULTS_DIGI_CONNECTIT16)$(CONFIG_DEFAULTS_DIGI_CONNECTIT48))
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTITXX
LIBS += -li2c
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ1
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ1
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ2
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ2
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ4
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ4
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ8
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ8
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ8W
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ8W
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ8M
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ8M
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ8IOS
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ8IOS
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ8IO
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ8IO
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ16
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ16
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ16M
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ16M
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ32
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ32
endif
ifdef CONFIG_DEFAULTS_DIGI_CONNECTEZ32M
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_CONNECTEZ32M
endif
ifdef CONFIG_DEFAULTS_DIGI_ANYWHEREUSB2
CPPFLAGS += -DCONFIG_DEFAULTS_DIGI_ANYWHEREUSB2
endif
endif

ifdef CONFIG_USER_NETFLASH_CRYPTO_ECDSA_SW
LIBS += $(LIBCRYPTO)
OBJS += crypto_ecdsa_sw.o sha256.o dev_mode.o
endif

ifdef CONFIG_USER_NETFLASH_WITH_FTP
CPPFLAGS += -DFTP
OBJS += cmds.o cmdtab.o domacro.o ftp.o glob.o ftpmain.o ruserpass.o
endif

ifdef CONFIG_USER_NETFLASH_WITH_CGI
OBJS += cgi.o cgiparse.o kmp.o
endif

ifdef CONFIG_USER_NETFLASH_HMACMD5
EXEC += hmacmd5
OBJS += md5.o hmacmd5.o
endif

ifdef CONFIG_USER_NETFLASH_CRYPTO_V2
HOSTCFLAGS += -DCONFIG_USER_NETFLASH_CRYPTO_V2
endif

ifdef HW_COMPAT_VENDOR
VENDOR=$(HW_COMPAT_VENDOR)
else
ifdef HW_VENDOR
VENDOR=$(HW_VENDOR)
else
VENDOR=$(CONFIG_VENDOR)
endif
endif
CPPFLAGS += -DVENDOR=\"$(VENDOR)\"

ifdef HW_COMPAT_PRODUCT
PRODUCT=$(HW_COMPAT_PRODUCT)
else
ifdef HW_PRODUCT
PRODUCT=$(HW_PRODUCT)
else
PRODUCT=$(CONFIG_PRODUCT)
endif
endif
CPPFLAGS += -DPRODUCT=\"$(PRODUCT)\"

CPPFLAGS += -DVERSION=\"$(VERSIONPKG)\"
COBJS += versioning.o

ifdef CONFIG_USER_NETFLASH_DECOMPRESS
OBJS += decompress.o
LIBS += -lz
endif

ifdef CONFIG_USER_NETFLASH_SETSRC
CPPFLAGS += -DSETSRC
endif

ifdef CONFIG_USER_NETFLASH_CRYPTO

ifdef HOSTBUILD
PUBLIC_KEY_FILE=netflash.pem
else
ifdef CONFIG_USER_NETFLASH_CRYPTO_V2
PUBLIC_KEY_FILE=/etc/publickey.pem
else
ifdef CONFIG_USER_FLATFSD_ETC_CONFIG
PUBLIC_KEY_FILE=/etc/config/netflash.pem
else
PUBLIC_KEY_FILE=/etc/netflash.pem
endif
endif
endif
CPPFLAGS += -DPUBLIC_KEY_FILE=\"$(PUBLIC_KEY_FILE)\"

LIBS += $(LIBCRYPTO)
OBJS += crypto.o
EXTRA_TARGETS += flashkey cryptimage decryptimage
endif

ifdef CONFIG_USER_NETFLASH_CRYPTO_V3
LIBS += $(LIBCRYPTO)
OBJS += cryptov3.o
endif

ifdef CONFIG_USER_NETFLASH_SHA256
LIBS += $(LIBCRYPTO)
EXEC += sha256sum
endif

ifneq ($(CONFIG_USER_NETFLASH_MINIMUM_VERSION),)
ifneq ($(CONFIG_USER_NETFLASH_MINIMUM_VERSION),"")
MINIMUM_VERSION=$(subst ",,$(CONFIG_USER_NETFLASH_MINIMUM_VERSION))
CFLAGS += -DMINIMUM_VERSION=\"$(MINIMUM_VERSION)\"
endif
endif

CPPFLAGS += -Dnetflashmain=main
# CPPFLAGS += -DDEBUG_CGI

ifdef CONFIG_MODULES_CRYPTODEV_CRYPTODEV
LDLIBS += -ldl
endif

ifdef CONFIG_USER_NETFLASH_VERIFY_FW_PRODUCT_INFO
CFLAGS += -DCONFIG_USER_NETFLASH_VERIFY_FW_PRODUCT_INFO
LDLIBS += -l:libsquashfs.a -lz -llzma
LDFLAGS += -Wl,--gc-sections
OBJS += squashfs.o
endif

all: $(EXEC) $(EXTRA_TARGETS)

netflash: $(OBJS) build_netflash build_versioning
	$(CC) $(LDFLAGS) -o $@ $(OBJS) $(COBJS) $(LIBS) $(LDLIBS$(LDLIBS_$@))


build_netflash:
	$(CC) -c -o netflash.o netflash.c $(CFLAGS) $(CPPFLAGS)

build_versioning:
	$(CC) -c -o versioning.o versioning.c $(CFLAGS) $(CPPFLAGS)

hmacmd5: hmacmd5main.c hmacmd5.c md5.c
	$(HOSTCC) -o $@ $^

sha256sum: sha256sum.c sha256.c
	$(HOSTCC) -o $@ $^

versiontest: versioning.c
	$(HOSTCC) -DVERSIONTEST -o $@ $^

flashkey.o cryptimage decryptimage: crypto.h

cryptimage: cryptimage.c

decryptimage: decryptimage.c

cryptimage decryptimage:
	$(HOSTCC) -O2 $(CPPFLAGS) $(HOSTCFLAGS) -o $@ $@.c -lssl -lcrypto

flashkey: flashkey.o
	$(CC) $(LDFLAGS) -o $@ flashkey.o $(LIBCRYPTO) $(LDLIBS$(LDLIBS_$@))

romfs:
	$(ROMFSINST) /bin/netflash
ifdef CONFIG_USER_NETFLASH_CRYPTO
	$(ROMFSINST) /bin/flashkey
endif

clean:
	-rm -f versiontest netflash hmacmd5 sha256sum *.elf *.gdb *.o $(EXTRA_TARGETS)

test:
	chmod +x test.tcl
	./test.tcl


Thanks to Cokey, Maurice, de Paul, and Ted (maintainer of setserial)
. Your help has been invaluable. Just another proof that free software 
rules!

To-do: a bit experiment to do with more irq on the same board.
Just to be able to see more consoles at the same time.


================part console output to /dev/ttyS0=============
1.rm /etc/ioctl.save
(to erase the recorded term charasteristics. Could be
at a different speed than what you want)

2.joe /etc/inittab:
1:2345:respawn:/sbin/mingetty tty1
2:2345:respawn:/sbin/mingetty tty2
3:2345:respawn:/sbin/mingetty tty3
4:2345:respawn:/sbin/mingetty tty4
5:2345:respawn:/sbin/mingetty tty5
6:2345:respawn:/sbin/mingetty tty6
#S0:2345:respawn:/sbin/mingetty ttyS0
#S1:2345:respawn:/sbin/mingetty ttyS1
S0:2345:respawn:/sbin/getty ttyS0 DT9600 vt100
# The DT9600 is in /etc/gettydefs, and there
# are others. But the F9600 doesn't work
# too well. With the working Apple powerbook
# and ZTerm in from serial port to serial port,
# only gets echo out. Cannot get Apple keyboard
# input

3.init q
init Q
(well, not sure, so run both. This is to tell init to read the
updated inittab:P)

4.in /etc/lilo.conf:
boot=/dev/rd/c0d0
map=/boot/map
install=/boot/boot.b
prompt
timeout=50
serial=0,9600n8
image=/boot/vmlinuz-2.2.5-15
	label=abyx_ttyS0
	root=/dev/rd/c0d0p1
	password=""
	initrd=/boot/initrd-2.2.5-15.img
	append="console=tty0 console=ttyS0,9600"
	read-only
image=/boot/vmlinuz-2.2.5-15
	label=linux_tty0
	root=/dev/rd/c0d0p1
	password=""
	initrd=/boot/initrd-2.2.5-15.img
	append="console=ttyS0,9600 console=tty0"
	read-only

5.Run lilo.

6.Reboot.

voila. If communicating from another serial port, remember
to use null-modem cable. It's just a cross-over cable that
links rcpt to send, and send to rcpt and so on.

=======================start part 8-port byterunner=======
0. To make the orientation right, put the board on your desk,
with the RS xxx connector on the right hand side, and with jumper
side of the board facing you.

1. Make sure the clock multiplier (JP 10-21) are at x1.
That should be close for JP 12, 15, 18, 21. (JP 10 is at the
top of the column)

(my case they sent from the factory as x4. And according
to the printing on board, it looks like a x1, because ther's
a little 1 on the side of one of the x4 pins. That took me a
long time to figure out.)

2.jumper the board for irq 10 for all 8 ports. Allow the irq 10 
on another set of jumpers on bottom-left. There are on-board 
printed remarks for these two set of jumpers.

3.Set the blue S1 (switch) to UNIX mode 1(off, on, on, off. And
yes, this time the ON mark was printed on the correct side),
and the rest of the jumpers should be at default.

4.cd /dev

5.for in in 16 17 18 19 20 21 22 23; do ./MAKEDEV ttyS$i; done

6.run:
setserial /dev/ttyS16 port 0x180 irq 10 uart 16550A ^fourport
setserial /dev/ttyS17 port 0x188 irq 10 uart 16550A ^fourport
setserial /dev/ttyS18 port 0x190 irq 10 uart 16550A ^fourport
setserial /dev/ttyS19 port 0x198 irq 10 uart 16550A ^fourport
setserial /dev/ttyS20 port 0x1a0 irq 10 uart 16550A ^fourport
setserial /dev/ttyS21 port 0x1a8 irq 10 uart 16550A ^fourport
setserial /dev/ttyS22 port 0x1b0 irq 10 uart 16550A ^fourport
setserial /dev/ttyS23 port 0x1b8 irq 10 uart 16550A ^fourport
setserial /dev/ttyS16 set_multiport port1 0x1c0 mask1 0xff match1 0xff

(er. joe up a /etc/rc.d/rc.serial file that has these and a #!/bin/bash
on the first row, and run it from rc.local. Note the mask1 shoud be the
same with match1, 0xff, while 4-port models would be 0xf. Also port1
is the interrupt vector address printed on the manual. Each UNIX mode
has its own. UNIX mode 0 has 0x140, mode 1 has 0x1c0, etc.)

7.And then shutdown. Plug-in card and make sure it's in the slot.

8.Boot computer. Reserve IRQ 10 for ISA in your BIOS.

9.Link the first com port on baord to ttyS0 (the console output
done as above)

10.minicom -s 
(for /dev/ttyS16, at 9600, 8n1)

voila!
==================================================================
 

Shuo Lin
Sitepak: nouvelle vision Internet pour l'entreprise
http://www.sitepak.com



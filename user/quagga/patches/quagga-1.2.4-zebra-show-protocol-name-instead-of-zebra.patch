From 3c53b41ffe994aec46eb521a1e94d593631d431b Mon Sep 17 00:00:00 2001
From: "Sreeves, Francis" <francis.sreeves@digi.com>
Date: Thu, 16 Apr 2020 14:15:09 +0100
Subject: [PATCH 1/1] zebra: show protocol name instead of zebra

Show the name of the routing protocol (babel, bgp, isis, ospf or rip) in
the routing table rather than zebra.

Note that internal and external BGP are both shown as bgp, but may be
differentiated by their metric (20 for eBGP, 200 for iBGP).

DAL-2651
---
 zebra/rt_netlink.c | 57 ++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 53 insertions(+), 4 deletions(-)

diff --git a/zebra/rt_netlink.c b/zebra/rt_netlink.c
index 4166568..7761229 100644
--- a/zebra/rt_netlink.c
+++ b/zebra/rt_netlink.c
@@ -724,6 +724,23 @@ netlink_interface_addr (struct sockaddr_nl *snl, struct nlmsghdr *h,
   return 0;
 }
 
+static bool
+is_zebra_proto (u_char netlink_proto)
+{
+  switch (netlink_proto)
+  {
+    case RTPROT_ZEBRA:
+    case RTPROT_BABEL:
+    case RTPROT_BGP:
+    case RTPROT_ISIS:
+    case RTPROT_OSPF:
+    case RTPROT_RIP:
+      return true;
+  }
+
+  return false;
+}
+
 /* Looking up routing table by netlink interface. */
 static int
 netlink_routing_table (struct sockaddr_nl *snl, struct nlmsghdr *h,
@@ -775,7 +792,7 @@ netlink_routing_table (struct sockaddr_nl *snl, struct nlmsghdr *h,
     return 0;
 
   /* Route which inserted by Zebra. */
-  if (rtm->rtm_protocol == RTPROT_ZEBRA)
+  if (is_zebra_proto (rtm->rtm_protocol))
     flags |= ZEBRA_FLAG_SELFROUTE;
 
   index = 0;
@@ -904,6 +921,11 @@ static const struct message rtproto_str[] = {
 #ifdef RTPROT_BIRD
   {RTPROT_BIRD,     "BIRD"},
 #endif /* RTPROT_BIRD */
+  {RTPROT_BABEL,    "Babel"},
+  {RTPROT_BGP,      "BGP"},
+  {RTPROT_ISIS,     "ISIS"},
+  {RTPROT_OSPF,     "OSPF"},
+  {RTPROT_RIP,      "RIP"},
   {0,               NULL}
 };
 
@@ -971,9 +993,9 @@ netlink_route_change (struct sockaddr_nl *snl, struct nlmsghdr *h,
   if (rtm->rtm_protocol == RTPROT_KERNEL)
     return 0;
 
-  if (rtm->rtm_protocol == RTPROT_ZEBRA && h->nlmsg_type == RTM_NEWROUTE)
+  if (is_zebra_proto (rtm->rtm_protocol) && h->nlmsg_type == RTM_NEWROUTE)
     return 0;
-  if (rtm->rtm_protocol == RTPROT_ZEBRA)
+  if (is_zebra_proto (rtm->rtm_protocol))
     SET_FLAG(zebra_flags, ZEBRA_FLAG_SELFROUTE);
 
   if (rtm->rtm_src_len != 0)
@@ -1670,6 +1692,33 @@ _netlink_route_debug(
     }
 }
 
+static u_char
+netlink_proto_from_route_type (int type)
+{
+  switch (type)
+  {
+    case ZEBRA_ROUTE_RIP:
+    case ZEBRA_ROUTE_RIPNG:
+      return RTPROT_RIP;
+
+    case ZEBRA_ROUTE_OSPF:
+    case ZEBRA_ROUTE_OSPF6:
+      return RTPROT_OSPF;
+
+    case ZEBRA_ROUTE_ISIS:
+      return RTPROT_ISIS;
+
+    case ZEBRA_ROUTE_BGP:
+      return RTPROT_BGP;
+
+    case ZEBRA_ROUTE_BABEL:
+      return RTPROT_BABEL;
+
+    default:
+      return RTPROT_ZEBRA;
+  }
+}
+
 /* Routing table change via netlink interface. */
 static int
 netlink_route_multipath (int cmd, struct prefix *p, struct rib *rib)
@@ -1702,7 +1751,7 @@ netlink_route_multipath (int cmd, struct prefix *p, struct rib *rib)
   req.r.rtm_family = family;
   req.r.rtm_table = rib->table;
   req.r.rtm_dst_len = p->prefixlen;
-  req.r.rtm_protocol = RTPROT_ZEBRA;
+  req.r.rtm_protocol = netlink_proto_from_route_type (rib->type);
   req.r.rtm_scope = RT_SCOPE_LINK;
 
   if ((rib->flags & ZEBRA_FLAG_BLACKHOLE) || (rib->flags & ZEBRA_FLAG_REJECT))
-- 
2.17.1


diff -ru netifd.orig/proto-shell.c netifd/proto-shell.c
--- netifd.orig/proto-shell.c	2017-08-17 16:33:12.210562729 +1000
+++ netifd/proto-shell.c	2017-08-17 16:37:06.268927591 +1000
@@ -28,6 +28,7 @@
 #include "proto.h"
 #include "system.h"
 #include "handler.h"
+#include "ubus.h"
 
 static int proto_fd = -1;
 
@@ -565,6 +566,8 @@
 		state->sm = S_IDLE;
 	}
 
+	netifd_ubus_actiond_trigger_event();
+
 	return 0;
 }
 
diff -ru netifd.orig/proto-static.c netifd/proto-static.c
--- netifd.orig/proto-static.c	2017-08-17 16:33:12.210562729 +1000
+++ netifd/proto-static.c	2017-08-17 16:37:30.789172299 +1000
@@ -23,6 +23,7 @@
 #include "interface-ip.h"
 #include "proto.h"
 #include "system.h"
+#include "ubus.h"
 
 struct static_proto_state {
 	struct interface_proto_state proto;
@@ -53,7 +54,7 @@
 	case PROTO_CMD_SETUP:
 		if (!static_proto_setup(state))
 			return -1;
-
+		netifd_ubus_actiond_trigger_event();
 		break;
 	case PROTO_CMD_TEARDOWN:
 	case PROTO_CMD_RENEW:
diff -ru netifd.orig/ubus.c netifd/ubus.c
--- netifd.orig/ubus.c	2017-09-22 10:38:44.182265992 +1000
+++ netifd/ubus.c	2017-09-22 10:40:12.727158477 +1000
@@ -45,6 +45,7 @@
 		     struct blob_attr *msg)
 {
 	netifd_reload();
+	netifd_ubus_actiond_trigger_event();
 	return 0;
 }
 
@@ -1268,3 +1269,29 @@
 	ubus_remove_object(ubus_ctx, &iface->ubus);
 	free((void *) iface->ubus.name);
 }
+
+static struct uloop_timeout trigger_timeout;
+
+static void
+netifd_trigger_cb(struct uloop_timeout *t)
+{
+	int ret;
+	static uint32_t ubus_id;
+
+	blob_buf_init(&b, 0);
+	blobmsg_add_string(&b, "type", "event");
+	blobmsg_add_string(&b, "val", "netifd");
+	ret = ubus_lookup_id(ubus_ctx, "actiond", &ubus_id);
+	if (ret == UBUS_STATUS_OK)
+		ubus_invoke(ubus_ctx, ubus_id, "trigger", b.head, NULL, NULL, 2000);
+}
+
+void
+netifd_ubus_actiond_trigger_event()
+{
+	if (!trigger_timeout.pending) {
+		/* Delay reload status to capture many events triggered close together */
+		trigger_timeout.cb = netifd_trigger_cb;
+		uloop_timeout_set(&trigger_timeout, 1000);
+	}
+}
diff -ru netifd.orig/ubus.h netifd/ubus.h
--- netifd.orig/ubus.h	2017-08-17 16:33:12.230562934 +1000
+++ netifd/ubus.h	2017-08-17 16:33:42.874876017 +1000
@@ -24,5 +24,6 @@
 void netifd_ubus_interface_notify(struct interface *iface, bool up);
 void netifd_ubus_interface_state_event(struct interface *iface);
 void netifd_ubus_interface_ip_event(struct interface *iface);
+void netifd_ubus_actiond_trigger_event(void);
 
 #endif
diff -ru netifd.orig/interface.c netifd/interface.c
--- netifd.orig/interface.c	2017-08-18 15:54:49.811876195 +1000
+++ netifd/interface.c	2017-08-18 15:55:28.064201916 +1000
@@ -682,6 +682,7 @@
 		iface->start_time = system_get_rtime();
 		interface_event(iface, IFEV_UP);
 		netifd_log_message(L_NOTICE, "Interface '%s' is now up\n", iface->name);
+		netifd_ubus_actiond_trigger_event();
 		break;
 	case IFPEV_DOWN:
 		if (iface->state == IFS_DOWN)
@@ -694,6 +695,7 @@
 		if (iface->l3_dev.dev)
 			device_remove_user(&iface->l3_dev);
 		interface_handle_config_change(iface);
+		netifd_ubus_actiond_trigger_event();
 		break;
 	case IFPEV_LINK_LOST:
 		if (iface->state != IFS_UP)
@@ -703,6 +705,7 @@
 		mark_interface_down(iface);
 		iface->state = IFS_SETUP;
 		netifd_ubus_interface_state_event(iface);
+		netifd_ubus_actiond_trigger_event();
 		break;
 	default:
 		return;

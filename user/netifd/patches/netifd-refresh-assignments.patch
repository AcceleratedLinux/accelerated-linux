Add/remove prefix assignments when the interface are add/removed in the
config.

Index: netifd/interface.c
===================================================================
--- netifd.orig/interface.c
+++ netifd/interface.c
@@ -612,6 +612,7 @@ interface_cleanup(struct interface *ifac
 static void
 interface_do_free(struct interface *iface)
 {
+	interface_free_assignments(iface);
 	interface_event(iface, IFEV_FREE);
 	interface_cleanup(iface);
 	free(iface->config);
@@ -1211,6 +1212,7 @@ interface_update(struct vlist_tree *tree
 		D(INTERFACE, "Create interface '%s'\n", if_new->name);
 		proto_init_interface(if_new, if_new->config);
 		interface_claim_device(if_new);
+		interface_refresh_assignments(true);
 		netifd_ubus_add_interface(if_new);
 	}
 }
Index: netifd/interface-ip.c
===================================================================
--- netifd.orig/interface-ip.c
+++ netifd/interface-ip.c
@@ -806,20 +806,29 @@ static bool interface_prefix_assign(stru
 	return false;
 }
 
-static void interface_update_prefix_assignments(struct device_prefix *prefix, bool setup)
+static void interface_free_prefix_assignments(struct device_prefix *prefix, struct interface *match)
 {
-	struct device_prefix_assignment *c;
+	struct device_prefix_assignment *c, *n;
 	struct interface *iface;
 
-	// Delete all assignments
-	while (!list_empty(&prefix->assignments)) {
-		c = list_first_entry(&prefix->assignments,
-				struct device_prefix_assignment, head);
-		if ((iface = vlist_find(&interfaces, c->name, iface, node)))
+	list_for_each_entry_safe(c, n, &prefix->assignments, head) {
+		iface = vlist_find(&interfaces, c->name, iface, node);
+		if (match && iface != match)
+			continue;
+		if (iface)
 			interface_set_prefix_address(c, prefix, iface, false);
 		list_del(&c->head);
 		free(c);
 	}
+}
+
+static void interface_update_prefix_assignments(struct device_prefix *prefix, bool setup)
+{
+	struct device_prefix_assignment *c;
+	struct interface *iface;
+
+	// Delete all assignments
+	interface_free_prefix_assignments(prefix, NULL);
 
 	if (!setup)
 		return;
@@ -938,6 +947,12 @@ void interface_refresh_assignments(bool
 	refresh = hint;
 }
 
+void interface_free_assignments(struct interface *iface)
+{
+	struct device_prefix *p;
+	list_for_each_entry(p, &prefixes, head)
+		interface_free_prefix_assignments(p, iface);
+}
 
 static void
 interface_update_prefix(struct vlist_tree *tree,
Index: netifd/interface-ip.h
===================================================================
--- netifd.orig/interface-ip.h
+++ netifd/interface-ip.h
@@ -168,5 +168,6 @@ struct device_prefix* interface_ip_add_d
 		struct in6_addr *excl_addr, uint8_t excl_length, const char *pclass);
 void interface_ip_set_ula_prefix(const char *prefix);
 void interface_refresh_assignments(bool hint);
+void interface_free_assignments(struct interface *iface);
 
 #endif

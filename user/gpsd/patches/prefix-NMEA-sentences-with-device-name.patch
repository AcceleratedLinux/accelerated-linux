From a8379adf39c870bc2eb83ad127657018f522dc29 Mon Sep 17 00:00:00 2001
From: "Sreeves, Francis" <francis.sreeves@digi.com>
Date: Wed, 27 May 2020 16:11:52 +0100
Subject: [PATCH] user/gpsd: prefix NMEA sentences with device name

NMEA sentences sent by gpsd to subscribers over its socket interface are
now prefixed with the name of the device (e.g. /dev/ttyGPS) to which it
relates. This allows subscribers to determine the source of each
sentence.

DAL-2577
---
 gpsd/gpsd.c | 45 ++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 38 insertions(+), 7 deletions(-)

diff --git a/gpsd/gpsd.c b/gpsd/gpsd.c
index d239a5016576..46bdc9fecb68 100644
--- a/gpsd/gpsd.c
+++ b/gpsd/gpsd.c
@@ -682,6 +682,26 @@ static ssize_t throttled_write(struct subscriber_t *sub, const char *buf,
     return status;
 }
 
+static void throttled_write_with_prefix(struct subscriber_t *sub, char *buf,
+			                   size_t len, char *prefix)
+{
+    char *p = buf;
+
+    while (len) {
+        char *end;
+        size_t l;
+
+        end = strchr(p, '\n');
+        l = end ? (size_t)(end - p + 1) : len;
+
+        (void)throttled_write(sub, prefix, strlen(prefix));
+        (void)throttled_write(sub, p, l);
+
+        p += l;
+        len -= l;
+    }
+}
+
 // notify all JSON-watching clients of a given device about an event
 static void notify_watchers(struct gps_device_t *device,
                             bool onjson, bool onpps,
@@ -1606,9 +1626,16 @@ static void raw_report(struct subscriber_t *sub, struct gps_device_t *device)
     if (TEXTUAL_PACKET_TYPE(device->lexer.type) &&
         (0 < sub->policy.raw ||
          sub->policy.nmea)) {
-        (void)throttled_write(sub,
-                              (char *)device->lexer.outbuffer,
-                              device->lexer.outbuflen);
+        if (sub->policy.nmea) {
+            throttled_write_with_prefix(sub,
+                                        (char *)device->lexer.outbuffer,
+                                        device->lexer.outbuflen,
+                                        device->gpsdata.dev.path);
+        } else {
+            (void)throttled_write(sub,
+                                  (char *)device->lexer.outbuffer,
+                                  device->lexer.outbuflen);
+        }
         return;
     }
 
@@ -1662,7 +1689,8 @@ static void pseudonmea_report(struct subscriber_t *sub,
             GPSD_LOG(LOG_IO, &context.errout,
                      "<= GPS (binary tpv) %s: %s\n",
                      device->gpsdata.dev.path, buf);
-            (void)throttled_write(sub, buf, strnlen(buf, sizeof(buf)));
+            throttled_write_with_prefix(sub, buf, strnlen(buf, sizeof(buf)),
+                                        device->gpsdata.dev.path);
         }
 
         if (0 != (changed & (DOP_SET | SATELLITE_SET | USED_IS))) {
@@ -1670,7 +1698,8 @@ static void pseudonmea_report(struct subscriber_t *sub,
             GPSD_LOG(LOG_IO, &context.errout,
                      "<= GPS (binary sky) %s: %s\n",
                      device->gpsdata.dev.path, buf);
-            (void)throttled_write(sub, buf, strnlen(buf, sizeof(buf)));
+            throttled_write_with_prefix(sub, buf, strnlen(buf, sizeof(buf)),
+                                        device->gpsdata.dev.path);
         }
 
         if (0 != (changed & SUBFRAME_SET)) {
@@ -1678,7 +1707,8 @@ static void pseudonmea_report(struct subscriber_t *sub,
             GPSD_LOG(LOG_IO, &context.errout,
                      "<= GPS (binary subframe) %s: %s\n",
                      device->gpsdata.dev.path, buf);
-            (void)throttled_write(sub, buf, strnlen(buf, sizeof(buf)));
+            throttled_write_with_prefix(sub, buf, strnlen(buf, sizeof(buf)),
+                                        device->gpsdata.dev.path);
         }
 #ifdef AIVDM_ENABLE
         if (0 != (changed & AIS_SET)) {
@@ -1686,7 +1716,8 @@ static void pseudonmea_report(struct subscriber_t *sub,
             GPSD_LOG(LOG_IO, &context.errout,
                      "<= AIS (binary ais) %s: %s\n",
                      device->gpsdata.dev.path, buf);
-            (void)throttled_write(sub, buf, strnlen(buf, sizeof(buf)));
+            throttled_write_with_prefix(sub, buf, strnlen(buf, sizeof(buf)),
+                                        device->gpsdata.dev.path);
         }
 #endif  // AIVDM_ENABLE
     }
-- 
2.34.1


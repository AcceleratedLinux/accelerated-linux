Previously, the request included Service-Type=Authenticate-Only which
meant that the RADIUS server didn't need to return authorization info.
This made sense, since we weren't parsing the RADIUS attributes anyway.
Now that we are parsing the RADIUS attributes, we really do want the
RADIUS server to include the attributes in the response.

Some RADIUS servers respect the Authenticate-Only value (e.g. ClearBox).
Others ignore it and send the attributes anyway (e.g. FreeRADIUS).

diff --git a/src/pam_radius_auth.c b/src/pam_radius_auth.c
index 7c7c9d9..e9a36ee 100644
--- a/src/pam_radius_auth.c
+++ b/src/pam_radius_auth.c
@@ -1159,7 +1159,7 @@ PAM_EXTERN int pam_sm_authenticate(pam_handle_t *pamh,int flags,int argc,CONST c
 
 	build_radius_packet(request, user, password, &config);
 	/* not all servers understand this service type, but some do */
-	add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_AUTHENTICATE_ONLY);
+	add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_RLOGIN);
 
 	/*
 	 *	Tell the server which host the user is coming from.
@@ -1468,7 +1468,7 @@ PAM_EXTERN int pam_sm_chauthtok(pam_handle_t *pamh, int flags, int argc, CONST c
 		request->id = request->vector[0]; /* this should be evenly distributed */
 
 		build_radius_packet(request, user, password, &config);
-		add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_AUTHENTICATE_ONLY);
+		add_int_attribute(request, PW_USER_SERVICE_TYPE, PW_RLOGIN);
 
 		retval = talk_radius(&config, request, response, password, NULL, 1);
 		PAM_FAIL_CHECK;


'begin'
	'real' x;
	'procedure' doit (x);
	'value' x;
	'real' x;
	'begin'
		'procedure' out (x);
		'value' x; 'real' x;
		'begin'
			outreal (1, x);
		'end';
		out (x); out (entier (x));
		out (-x); out (entier (-x));
		outstring (1, "\n");
	'end';

	doit (0.0);
	doit (0.123);
	'for' x := 11.0 'step' 0.1 'until' 11.95 'do'
		doit (x);
	doit (12.0);
	doit (1.23'10'6);
	doit (1.23'10'12);

'end'

Index: valgrind-3.21.0/helgrind/hg_intercepts.c
===================================================================
--- valgrind-3.21.0.orig/helgrind/hg_intercepts.c
+++ valgrind-3.21.0/helgrind/hg_intercepts.c
@@ -471,13 +471,13 @@ static int pthread_create_WRK(pthread_t
    }
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucreateZAZa, // pthread_create@*
                  pthread_t *thread, const pthread_attr_t *attr,
                  void *(*start) (void *), void *arg) {
       return pthread_create_WRK(thread, attr, start, arg);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucreate, // pthread_create
                  pthread_t *thread, const pthread_attr_t *attr,
                  void *(*start) (void *), void *arg) {
@@ -1312,12 +1312,12 @@ static int pthread_cond_wait_WRK(pthread
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZuwaitZAZa, // pthread_cond_wait@*
                  pthread_cond_t* cond, pthread_mutex_t* mutex) {
       return pthread_cond_wait_WRK(cond, mutex);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZuwait, // pthread_cond_wait
                  pthread_cond_t* cond, pthread_mutex_t* mutex) {
       return pthread_cond_wait_WRK(cond, mutex);
@@ -1417,13 +1417,13 @@ static int pthread_cond_timedwait_WRK(pt
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZutimedwaitZAZa, // pthread_cond_timedwait@*
                  pthread_cond_t* cond, pthread_mutex_t* mutex, 
                  struct timespec* abstime) {
       return pthread_cond_timedwait_WRK(cond, mutex, abstime, ETIMEDOUT);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZutimedwait, // pthread_cond_timedwait
                  pthread_cond_t* cond, pthread_mutex_t* mutex, 
                  struct timespec* abstime) {
@@ -1582,12 +1582,12 @@ static int pthread_cond_signal_WRK(pthre
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZusignalZAZa, // pthread_cond_signal@*
                  pthread_cond_t* cond) {
       return pthread_cond_signal_WRK(cond);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZusignal, // pthread_cond_signal
                  pthread_cond_t* cond) {
       return pthread_cond_signal_WRK(cond);
@@ -1649,12 +1649,12 @@ static int pthread_cond_broadcast_WRK(pt
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZubroadcastZAZa, // pthread_cond_broadcast@*
                  pthread_cond_t* cond) {
       return pthread_cond_broadcast_WRK(cond);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZubroadcast, // pthread_cond_broadcast
                  pthread_cond_t* cond) {
       return pthread_cond_broadcast_WRK(cond);
@@ -1711,12 +1711,12 @@ static int pthread_cond_init_WRK(pthread
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZuinitZAZa, // pthread_cond_init@*
 	    pthread_cond_t* cond, pthread_condattr_t* cond_attr) {
      return pthread_cond_init_WRK(cond, cond_attr);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZuinit, // pthread_cond_init@*
 	    pthread_cond_t* cond, pthread_condattr_t* cond_attr) {
      return pthread_cond_init_WRK(cond, cond_attr);
@@ -1809,12 +1809,12 @@ static int pthread_cond_destroy_WRK(pthr
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZudestroyZAZa, // pthread_cond_destroy@*
                  pthread_cond_t* cond) {
       return pthread_cond_destroy_WRK(cond);
    }
-#elif defined(VGO_freebsd)
+#elif defined(VGO_freebsd) || defined(MUSL_LIBC)
    PTH_FUNC(int, pthreadZucondZudestroy, // pthread_cond_destroy@*
                  pthread_cond_t* cond) {
       return pthread_cond_destroy_WRK(cond);
@@ -3012,12 +3012,12 @@ static int sem_init_WRK(sem_t* sem, int
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, semZuinitZAZa, // sem_init@*
                  sem_t* sem, int pshared, unsigned long value) {
       return sem_init_WRK(sem, pshared, value);
    }
-#elif defined(VGO_darwin)
+#elif defined(VGO_darwin) || defined(MUSL_LIBC)
    PTH_FUNC(int, semZuinit, // sem_init
                  sem_t* sem, int pshared, unsigned long value) {
       return sem_init_WRK(sem, pshared, value);
@@ -3100,12 +3100,12 @@ static int sem_destroy_WRK(sem_t* sem)
 
    return ret;
 }
-#if defined(VGO_linux)
+#if defined(VGO_linux) && !defined(MUSL_LIBC)
    PTH_FUNC(int, semZudestroyZAZa,  // sem_destroy*
                  sem_t* sem) {
       return sem_destroy_WRK(sem);
    }
-#elif defined(VGO_darwin)
+#elif defined(VGO_darwin) || defined(MUSL_LIBC)
    PTH_FUNC(int, semZudestroy,  // sem_destroy
                  sem_t* sem) {
       return sem_destroy_WRK(sem);

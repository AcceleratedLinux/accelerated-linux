diff -ur tcpdump-4.6.2.orig/addrtoname.c tcpdump-4.6.2/addrtoname.c
--- tcpdump-4.6.2.orig/addrtoname.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/addrtoname.c	2014-10-09 16:54:53.008920939 +1000
@@ -75,7 +75,11 @@
  * XXX there has to be error checks against strdup(3) failure
  */
 
+#ifndef EMBED
 #define HASHNAMESIZE 4096
+#else
+#define HASHNAMESIZE 4
+#endif
 
 struct hnamemem {
 	uint32_t addr;
@@ -87,8 +91,12 @@
 static struct hnamemem tporttable[HASHNAMESIZE];
 static struct hnamemem uporttable[HASHNAMESIZE];
 static struct hnamemem eprototable[HASHNAMESIZE];
+#if !defined(EMBED) || defined(CONFIG_DECNET) || defined(CONFIG_DECNET_MODULE)
 static struct hnamemem dnaddrtable[HASHNAMESIZE];
+#endif
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 static struct hnamemem ipxsaptable[HASHNAMESIZE];
+#endif
 
 #if defined(INET6) && defined(WIN32)
 /*
@@ -554,8 +562,10 @@
 	if (type == LINKADDR_ETHER && len == ETHER_ADDR_LEN)
 		return (etheraddr_string(ndo, ep));
 
+#ifndef EMBED
 	if (type == LINKADDR_FRELAY)
 		return (q922_string(ep));
+#endif
 
 	tp = lookup_bytestring(ep, len);
 	if (tp->e_name)
@@ -697,6 +707,7 @@
 	return (tp->name);
 }
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 const char *
 ipxsap_string(u_short port)
 {
@@ -722,6 +733,12 @@
 	tp->name = strdup(buf);
 	return (tp->name);
 }
+#endif
+
+#ifdef __UC_LIBC__
+struct servent *getservent() { return(NULL); }
+void endservent() { }
+#endif
 
 static void
 init_servarray(netdissect_options *ndo)
@@ -896,6 +913,7 @@
 	}
 }
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 static const struct tok ipxsap_db[] = {
 	{ 0x0000, "Unknown" },
 	{ 0x0001, "User" },
@@ -1129,6 +1147,7 @@
 		table->nxt = newhnamemem();
 	}
 }
+#endif
 
 /*
  * Initialize the address to name translation machinery.  We map all
@@ -1153,9 +1172,12 @@
 	init_servarray(ndo);
 	init_eprotoarray();
 	init_protoidarray();
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	init_ipxsaparray();
+#endif
 }
 
+#if !defined(EMBED) || defined(CONFIG_DECNET) || defined(CONFIG_DECNET_MODULE)
 const char *
 dnaddr_string(netdissect_options *ndo, u_short dnaddr)
 {
@@ -1175,6 +1197,7 @@
 
 	return(tp->name);
 }
+#endif
 
 /* Return a zero'ed hnamemem struct and cuts down on calloc() overhead */
 struct hnamemem *
diff -ur tcpdump-4.6.2.orig/config.h.in tcpdump-4.6.2/config.h.in
--- tcpdump-4.6.2.orig/config.h.in	2014-09-03 10:10:42.000000000 +1000
+++ tcpdump-4.6.2/config.h.in	2014-10-09 16:54:52.989071600 +1000
@@ -382,3 +382,6 @@
 /* Define to the type of an unsigned integer type of width exactly 8 bits if
    such a type exists and the standard includes do not define it. */
 #undef uint8_t
+
+#include <linux/autoconf.h>
+#include <config/autoconf.h>
diff -ur tcpdump-4.6.2.orig/ethertype.h tcpdump-4.6.2/ethertype.h
--- tcpdump-4.6.2.orig/ethertype.h	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/ethertype.h	2014-10-09 16:54:52.989071600 +1000
@@ -77,6 +77,9 @@
 #ifndef ETHERTYPE_TEB
 #define ETHERTYPE_TEB		0x6558
 #endif
+#ifndef	ETHERTYPE_BRIDGE
+#define	ETHERTYPE_BRIDGE	0x6558
+#endif
 #ifndef	ETHERTYPE_LANBRIDGE
 #define	ETHERTYPE_LANBRIDGE	0x8038
 #endif
diff -ur tcpdump-4.6.2.orig/print-802_11.c tcpdump-4.6.2/print-802_11.c
--- tcpdump-4.6.2.orig/print-802_11.c	2014-07-19 23:07:43.000000000 +1000
+++ tcpdump-4.6.2/print-802_11.c	2014-10-09 16:54:52.989071600 +1000
@@ -701,6 +701,8 @@
 		ND_PRINT((ndo, ")")); \
 	}
 
+#if defined(DLT_IEEE802_11) || defined(DLT_IEEE802_11_RADIO) || defined(DLT_PRISM_HEADER)
+
 #define PRINT_RATE(_sep, _r, _suf) \
 	ND_PRINT((ndo, "%s%2.1f%s", _sep, (.5 * ((_r) & 0x7f)), _suf))
 #define PRINT_RATES(p) \
@@ -3009,3 +3011,4 @@
 {
 	return ieee802_11_avs_radio_print(ndo, p, h->len, h->caplen);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ah.c tcpdump-4.6.2/print-ah.c
--- tcpdump-4.6.2.orig/print-ah.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ah.c	2014-10-09 16:54:52.989071600 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_IPSEC) || defined(CONFIG_IPSEC_MODULE) || defined(CONFIG_KLIPS) || defined(CONFIG_KLIPS_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include "ah.h"
@@ -62,3 +64,4 @@
 	ND_PRINT((ndo, "[|AH]"));
 	return -1;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-aodv.c tcpdump-4.6.2/print-aodv.c
--- tcpdump-4.6.2.orig/print-aodv.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-aodv.c	2014-10-09 16:54:52.989071600 +1000
@@ -35,6 +35,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 /* for offsetof */
@@ -618,3 +620,4 @@
 		ND_PRINT((ndo, " %u %u", ap->rreq.rreq_type, length));
 	}
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ap1394.c tcpdump-4.6.2/print-ap1394.c
--- tcpdump-4.6.2.orig/print-ap1394.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ap1394.c	2014-10-09 16:54:52.989071600 +1000
@@ -31,6 +31,8 @@
 #include "addrtoname.h"
 #include "ethertype.h"
 
+#ifdef DLT_APPLE_IP_OVER_IEEE1394
+
 /*
  * Structure of a header for Apple's IP-over-IEEE 1384 BPF header.
  */
@@ -111,3 +113,4 @@
 
 	return FIREWIRE_HDRLEN;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-arcnet.c tcpdump-4.6.2/print-arcnet.c
--- tcpdump-4.6.2.orig/print-arcnet.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-arcnet.c	2014-10-09 16:54:52.989071600 +1000
@@ -31,6 +31,8 @@
 #include "interface.h"
 #include "extract.h"
 
+#if defined(DLT_ARCNET) || defined(DLT_ARCNET_LINUX)
+
 /*
  * from: NetBSD: if_arc.h,v 1.13 1999/11/19 20:41:19 thorpej Exp
  */
@@ -338,21 +340,27 @@
 		arp_print(ndo, p, length, caplen);
 		return (1);
 
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
 	case ARCTYPE_ATALK:	/* XXX was this ever used? */
 		if (ndo->ndo_vflag)
 			ND_PRINT((ndo, "et1 "));
 		atalk_print(ndo, p, length);
 		return (1);
+#endif
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	case ARCTYPE_IPX:
 		ipx_print(ndo, p, length);
 		return (1);
+#endif
 
 	default:
 		return (0);
 	}
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-style: bsd
diff -ur tcpdump-4.6.2.orig/print-atalk.c tcpdump-4.6.2/print-atalk.c
--- tcpdump-4.6.2.orig/print-atalk.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-atalk.c	2014-10-09 16:54:52.989071600 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -235,9 +237,11 @@
 		atp_print(ndo, (const struct atATP *)bp, length);
 		break;
 
+#ifndef EMBED
 	case ddpEIGRP:
 		eigrp_print(ndo, bp, length);
 		break;
+#endif
 
 	default:
 		ND_PRINT((ndo, " at-%s %d", tok2str(type2str, NULL, t), length));
@@ -522,7 +526,11 @@
 }
 
 
+#ifndef EMBED
 #define HASHNAMESIZE 4096
+#else
+#define HASHNAMESIZE 4
+#endif
 
 struct hnamemem {
 	int addr;
@@ -620,3 +628,4 @@
 	}
 	return (tok2str(skt2str, "%d", skt));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-atm.c tcpdump-4.6.2/print-atm.c
--- tcpdump-4.6.2.orig/print-atm.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-atm.c	2014-10-09 16:54:52.989071600 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_ATM) || defined(CONFIG_ATM_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -174,7 +176,9 @@
         if (*p == LLC_UI) {
             if (ndo->ndo_eflag)
                 ND_PRINT((ndo, "CNLPID "));
+#if !defined(EMBED)
             isoclns_print(ndo, p + 1, length - 1, caplen - 1);
+#endif
             return hdrlen;
         }
 
@@ -310,10 +314,12 @@
 			ND_PRINT((ndo, "meta: "));
 			return;
 
+#if !defined(EMBED)
 		case VCI_ILMIC:
 			ND_PRINT((ndo, "ilmi: "));
 			snmp_print(ndo, p, length);
 			return;
+#endif
 		}
 	}
 
@@ -327,9 +333,11 @@
 		atm_llc_print(ndo, p, length, caplen);
 		break;
 
+#ifdef DLT_LANE8023
 	case ATM_LANE:
 		lane_print(ndo, p, length, caplen);
 		break;
+#endif
 	}
 }
 
@@ -446,3 +454,4 @@
 
     return 1;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-beep.c tcpdump-4.6.2/print-beep.c
--- tcpdump-4.6.2.orig/print-beep.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-beep.c	2014-10-09 16:54:52.989071600 +1000
@@ -14,6 +14,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -57,3 +59,4 @@
 	else
 		ND_PRINT((ndo, " BEEP (payload or undecoded)"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-bfd.c tcpdump-4.6.2/print-bfd.c
--- tcpdump-4.6.2.orig/print-bfd.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-bfd.c	2014-10-09 16:54:52.989071600 +1000
@@ -18,6 +18,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -274,6 +276,9 @@
 trunc:
         ND_PRINT((ndo, "[|BFD]"));
 }
+
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-bgp.c tcpdump-4.6.2/print-bgp.c
--- tcpdump-4.6.2.orig/print-bgp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-bgp.c	2014-10-09 16:54:52.989071600 +1000
@@ -35,6 +35,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -2772,6 +2774,8 @@
 	ND_PRINT((ndo, " [|BGP]"));
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-bootp.c tcpdump-4.6.2/print-bootp.c
--- tcpdump-4.6.2.orig/print-bootp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-bootp.c	2014-10-09 16:54:52.989071600 +1000
@@ -26,6 +26,7 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -821,3 +822,4 @@
 
 	return buf;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-cdp.c tcpdump-4.6.2/print-cdp.c
--- tcpdump-4.6.2.orig/print-cdp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-cdp.c	2014-10-09 16:54:52.989071600 +1000
@@ -29,6 +29,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -367,3 +369,4 @@
     }
     return res;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-chdlc.c tcpdump-4.6.2/print-chdlc.c
--- tcpdump-4.6.2.orig/print-chdlc.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-chdlc.c	2014-10-09 16:54:52.989071600 +1000
@@ -32,6 +32,8 @@
 #include "extract.h"
 #include "chdlc.h"
 
+#if defined(DLT_C_HDLC) || defined(DLT_HDLC)
+
 static void chdlc_slarp_print(netdissect_options *, const u_char *, u_int);
 
 static const struct tok chdlc_cast_values[] = {
@@ -88,10 +90,13 @@
 		chdlc_cdp_print(p, length);
 		break;
 #endif
+#if !defined(EMBED)
         case ETHERTYPE_MPLS:
         case ETHERTYPE_MPLS_MULTI:
                 mpls_print(ndo, p, length);
 		break;
+#endif
+#if !defined(EMBED)
         case ETHERTYPE_ISO:
                 /* is the fudge byte set ? lets verify by spotting ISO headers */
                 if (*(p+1) == 0x81 ||
@@ -101,6 +106,7 @@
                 else
                     isoclns_print(ndo, p, length, length);
                 break;
+#endif
 	default:
                 if (!ndo->ndo_eflag)
                         ND_PRINT((ndo, "unknown CHDLC protocol (0x%04x)", proto));
@@ -196,6 +202,7 @@
 trunc:
 	ND_PRINT((ndo, "[|slarp]"));
 }
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-cip.c tcpdump-4.6.2/print-cip.c
--- tcpdump-4.6.2.orig/print-cip.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-cip.c	2014-10-09 16:54:52.989071600 +1000
@@ -32,6 +32,8 @@
 #include "interface.h"
 #include "addrtoname.h"
 
+#if defined(DLT_CIP) || defined(DLT_ATM_CLIP)
+
 #define RFC1483LLC_LEN	8
 
 static const unsigned char rfcllc[] = {
@@ -97,6 +99,7 @@
 
 	return (0);
 }
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-cnfp.c tcpdump-4.6.2/print-cnfp.c
--- tcpdump-4.6.2.orig/print-cnfp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-cnfp.c	2014-10-09 16:54:52.989071600 +1000
@@ -37,6 +37,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -185,3 +187,4 @@
 		       EXTRACT_32BITS(&nr->octets), buf));
 	}
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-decnet.c tcpdump-4.6.2/print-decnet.c
--- tcpdump-4.6.2.orig/print-decnet.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-decnet.c	2014-10-09 16:54:52.989071600 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_DECNET) || defined(CONFIG_DECNET_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 struct mbuf;
@@ -1338,3 +1340,5 @@
 	}
 }
 #endif
+
+#endif
diff -ur tcpdump-4.6.2.orig/print-eap.c tcpdump-4.6.2/print-eap.c
--- tcpdump-4.6.2.orig/print-eap.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-eap.c	2014-10-09 16:54:52.989071600 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -289,6 +291,8 @@
     ND_PRINT((ndo, "\n\t[|EAP]"));
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-basic-offset: 4
diff -ur tcpdump-4.6.2.orig/print-egp.c tcpdump-4.6.2/print-egp.c
--- tcpdump-4.6.2.orig/print-egp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-egp.c	2014-10-09 16:54:52.989071600 +1000
@@ -23,6 +23,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -354,3 +356,4 @@
 		break;
 	}
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-eigrp.c tcpdump-4.6.2/print-eigrp.c
--- tcpdump-4.6.2.orig/print-eigrp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-eigrp.c	2014-10-09 16:54:52.989071600 +1000
@@ -19,6 +19,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -472,3 +474,4 @@
 trunc:
     ND_PRINT((ndo, "\n\t\t packet exceeded snapshot"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-enc.c tcpdump-4.6.2/print-enc.c
--- tcpdump-4.6.2.orig/print-enc.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-enc.c	2014-10-09 16:54:52.989071600 +1000
@@ -78,6 +78,8 @@
 	uint32_t flags;
 };
 
+#ifdef DLT_ENC
+
 #define ENC_PRINT_TYPE(wh, xf, nam) \
 	if ((wh) & (xf)) { \
 		ND_PRINT((ndo, "%s%s", nam, (wh) == (xf) ? "): " : ",")); \
@@ -127,6 +129,7 @@
 out:
 	return (ENC_HDRLEN);
 }
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-esp.c tcpdump-4.6.2/print-esp.c
--- tcpdump-4.6.2.orig/print-esp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-esp.c	2014-10-09 16:54:53.008920939 +1000
@@ -28,6 +28,8 @@
 
 #include <tcpdump-stdinc.h>
 
+#if !defined(EMBED) || defined(CONFIG_IPSEC) || defined(CONFIG_IPSEC_MODULE) || defined(CONFIG_KLIPS) || defined(CONFIG_KLIPS_MODULE)
+
 #include <string.h>
 #include <stdlib.h>
 
@@ -714,6 +716,8 @@
 USES_APPLE_RST
 #endif
 
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-ether.c tcpdump-4.6.2/print-ether.c
--- tcpdump-4.6.2.orig/print-ether.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ether.c	2014-10-09 16:54:53.008920939 +1000
@@ -32,6 +32,8 @@
 #include "ethertype.h"
 #include "ether.h"
 
+#ifdef DLT_EN10MB 
+
 const struct tok ethertype_values[] = {
     { ETHERTYPE_IP,		"IPv4" },
     { ETHERTYPE_MPLS,		"MPLS unicast" },
@@ -53,6 +55,7 @@
     { ETHERTYPE_DN,             "DN" },
     { ETHERTYPE_LAT,            "LAT" },
     { ETHERTYPE_SCA,            "SCA" },
+    { ETHERTYPE_BRIDGE,         "Bridge" },
     { ETHERTYPE_TEB,            "TEB" },
     { ETHERTYPE_LANBRIDGE,      "Lanbridge" },
     { ETHERTYPE_DECDNS,         "DEC DNS" },
@@ -337,58 +340,74 @@
   	        arp_print(ndo, p, length, caplen);
 		return (1);
 
+#if !defined(EMBED) || defined(CONFIG_DECNET) || defined(CONFIG_DECNET_MODULE)
 	case ETHERTYPE_DN:
 		decnet_print(ndo, p, length, caplen);
 		return (1);
+#endif
 
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
 	case ETHERTYPE_ATALK:
 		if (ndo->ndo_vflag)
 			ND_PRINT((ndo, "et1 "));
 		atalk_print(ndo, p, length);
 		return (1);
-
+ 
 	case ETHERTYPE_AARP:
 		aarp_print(ndo, p, length);
 		return (1);
-
+#endif
+ 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	case ETHERTYPE_IPX:
 		ND_PRINT((ndo, "(NOV-ETHII) "));
 		ipx_print(ndo, p, length);
 		return (1);
+#endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_ISO:
 		isoclns_print(ndo, p + 1, length - 1, length - 1);
 		return(1);
+#endif
 
+#if !defined(EMBED) || defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
 	case ETHERTYPE_PPPOED:
 	case ETHERTYPE_PPPOES:
 	case ETHERTYPE_PPPOED2:
 	case ETHERTYPE_PPPOES2:
 		pppoe_print(ndo, p, length);
 		return (1);
+#endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_EAPOL:
 	        eap_print(ndo, p, length);
 		return (1);
+#endif
 
 	case ETHERTYPE_RRCP:
 	        rrcp_print(ndo, p - 14 , length + 14);
 		return (1);
 
+#if !defined(EMBED) || defined(CONFIG_PPP) || defined(CONFIG_PPP_MODULE)
 	case ETHERTYPE_PPP:
 		if (length) {
 			ND_PRINT((ndo, ": "));
 			ppp_print(ndo, p, length);
 		}
 		return (1);
+#endif
 
 	case ETHERTYPE_MPCP:
 	        mpcp_print(ndo, p, length);
 		return (1);
 
+#if !defined(EMBED)
 	case ETHERTYPE_SLOW:
 	        slow_print(ndo, p, length);
 		return (1);
+#endif
 
 	case ETHERTYPE_CFM:
 	case ETHERTYPE_CFM_OLD:
@@ -403,10 +422,12 @@
 		loopback_print(ndo, p, length);
                 return (1);
 
+#if !defined(EMBED)
 	case ETHERTYPE_MPLS:
 	case ETHERTYPE_MPLS_MULTI:
 		mpls_print(ndo, p, length);
 		return (1);
+#endif
 
 	case ETHERTYPE_TIPC:
 		tipc_print(ndo, p, length, caplen);
@@ -429,6 +450,10 @@
 		aoe_print(ndo, p, length);
 		return (1);
 
+	case ETHERTYPE_BRIDGE:
+		ether_print(ndo, p, length, length, NULL, NULL);
+		return (1);
+
 	case ETHERTYPE_LAT:
 	case ETHERTYPE_SCA:
 	case ETHERTYPE_MOPRC:
@@ -439,6 +464,7 @@
 		return (0);
 	}
 }
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-fddi.c tcpdump-4.6.2/print-fddi.c
--- tcpdump-4.6.2.orig/print-fddi.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-fddi.c	2014-10-09 16:54:52.989071600 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_FDDI) || defined(CONFIG_FDDI_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -347,3 +349,4 @@
 
 	return (FDDI_HDRLEN);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-fr.c tcpdump-4.6.2/print-fr.c
--- tcpdump-4.6.2.orig/print-fr.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-fr.c	2014-10-09 16:54:52.989071600 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_DLCI) || defined(CONFIG_DLCI_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -287,11 +289,13 @@
 		ip6_print(ndo, p, length);
 		break;
 #endif
+#if !defined(EMBED)
 	case NLPID_CLNP:
 	case NLPID_ESIS:
 	case NLPID_ISIS:
 		isoclns_print(ndo, p - 1, length + 1, length + 1); /* OSI printers need the NLPID field */
 		break;
+#endif
 
 	case NLPID_SNAP:
 		if (snap_print(ndo, p, length, length, 0) == 0) {
@@ -884,6 +888,9 @@
 
         return 0;
 }
+
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-gre.c tcpdump-4.6.2/print-gre.c
--- tcpdump-4.6.2.orig/print-gre.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-gre.c	2014-10-09 16:54:53.008920939 +1000
@@ -205,18 +205,26 @@
 		ip6_print(ndo, bp, len);
 		break;
 #endif
+#ifndef EMBED
 	case ETHERTYPE_MPLS:
 		mpls_print(ndo, bp, len);
 		break;
+#ifndef EMBED
+#endif
 	case ETHERTYPE_IPX:
 		ipx_print(ndo, bp, len);
 		break;
+#ifndef EMBED
+#endif
 	case ETHERTYPE_ATALK:
 		atalk_print(ndo, bp, len);
 		break;
+#ifndef EMBED
+#endif
 	case ETHERTYPE_GRE_ISO:
 		isoclns_print(ndo, bp, len, len);
 		break;
+#endif
 	case ETHERTYPE_TEB:
 		ether_print(ndo, bp, len, len, NULL, NULL);
 		break;
@@ -296,9 +304,11 @@
             ND_PRINT((ndo, "\n\t")); /* if verbose go multiline */
 
 	switch (prot) {
+#if !defined(EMBED) || defined(CONFIG_PPP) || defined(CONFIG_PPP_MODULE)
 	case ETHERTYPE_PPP:
 		ppp_print(ndo, bp, len);
 		break;
+#endif
 	default:
 		ND_PRINT((ndo, "gre-proto-0x%x", prot));
 		break;
diff -ur tcpdump-4.6.2.orig/print-hsrp.c tcpdump-4.6.2/print-hsrp.c
--- tcpdump-4.6.2.orig/print-hsrp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-hsrp.c	2014-10-09 16:54:52.989071600 +1000
@@ -34,6 +34,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -132,3 +134,4 @@
 trunc:
 	ND_PRINT((ndo, "[|hsrp]"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-igmp.c tcpdump-4.6.2/print-igmp.c
--- tcpdump-4.6.2.orig/print-igmp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-igmp.c	2014-10-09 16:54:52.989071600 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -338,3 +340,4 @@
 trunc:
     ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-igrp.c tcpdump-4.6.2/print-igrp.c
--- tcpdump-4.6.2.orig/print-igrp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-igrp.c	2014-10-09 16:54:52.989071600 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -152,3 +154,4 @@
 trunc:
 	ND_PRINT((ndo, " [|igrp]"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ip6.c tcpdump-4.6.2/print-ip6.c
--- tcpdump-4.6.2.orig/print-ip6.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ip6.c	2014-10-09 16:54:52.989071600 +1000
@@ -187,9 +187,11 @@
 			advance = rt6_print(ndo, cp, (const u_char *)ip6);
 			nh = *cp;
 			break;
+#if !defined(EMBED) || defined(CONFIG_IP_SCTP) || defined(CONFIG_IP_SCTP_MODULE)
 		case IPPROTO_SCTP:
 			sctp_print(ndo, cp, (const u_char *)ip6, len);
 			return;
+#endif
 		case IPPROTO_DCCP:
 			dccp_print(ndo, cp, (const u_char *)ip6, len);
 			return;
@@ -202,6 +204,7 @@
 		case IPPROTO_ICMPV6:
 			icmp6_print(ndo, cp, len, (const u_char *)ip6, fragmented);
 			return;
+#if !defined(EMBED) || defined(CONFIG_IPSEC) || defined(CONFIG_IPSEC_MODULE) || defined(CONFIG_KLIPS) || defined(CONFIG_KLIPS_MODULE)
 		case IPPROTO_AH:
 			advance = ah_print(ndo, cp);
 			nh = *cp;
@@ -222,14 +225,20 @@
 			break;
 		    }
 
+#endif
+
+#if !defined(EMBED)
 		case IPPROTO_PIM:
 			pim_print(ndo, cp, len, nextproto6_cksum(ip6, cp, len, len,
 							    IPPROTO_PIM));
 			return;
+#endif
 
+#if !defined(EMBED)
 		case IPPROTO_OSPF:
 			ospf6_print(ndo, cp, len);
 			return;
+#endif
 
 		case IPPROTO_IPV6:
 			ip6_print(ndo, cp, len);
@@ -239,17 +248,21 @@
 		        ip_print(ndo, cp, len);
 			return;
 
+#if !defined(EMBED)
                 case IPPROTO_PGM:
                         pgm_print(ndo, cp, len, (const u_char *)ip6);
                         return;
+#endif
 
 		case IPPROTO_GRE:
 			gre_print(ndo, cp, len);
 			return;
 
+#if !defined(EMBED)
 		case IPPROTO_RSVP:
 			rsvp_print(ndo, cp, len);
 			return;
+#endif
 
 		case IPPROTO_NONE:
 			ND_PRINT((ndo, "no next header"));
diff -ur tcpdump-4.6.2.orig/print-ip.c tcpdump-4.6.2/print-ip.c
--- tcpdump-4.6.2.orig/print-ip.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ip.c	2014-10-09 16:54:52.989071600 +1000
@@ -329,6 +329,7 @@
 again:
 	switch (ipds->nh) {
 
+#if !defined(EMBED) || defined(CONFIG_IPSEC) || defined(CONFIG_IPSEC_MODULE) || defined(CONFIG_KLIPS) || defined(CONFIG_KLIPS_MODULE)
 	case IPPROTO_AH:
 		ipds->nh = *ipds->cp;
 		ipds->advance = ah_print(ndo, ipds->cp);
@@ -363,14 +364,19 @@
 		ipds->nh = enh & 0xff;
 		goto again;
 	}
+#endif
 
+#if !defined(EMBED) || defined(CONFIG_IP_SCTP) || defined(CONFIG_IP_SCTP_MODULE)
 	case IPPROTO_SCTP:
 		sctp_print(ndo, ipds->cp, (const u_char *)ipds->ip, ipds->len);
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_DCCP:
 		dccp_print(ndo, ipds->cp, (const u_char *)ipds->ip, ipds->len);
 		break;
+#endif
 
 	case IPPROTO_TCP:
 		/* pass on the MF bit plus the offset to detect fragments */
@@ -390,6 +396,7 @@
 			   ipds->off & (IP_MF|IP_OFFMASK));
 		break;
 
+#if !defined(EMBED)
 	case IPPROTO_PIGP:
 		/*
 		 * XXX - the current IANA protocol number assignments
@@ -406,26 +413,37 @@
 		 */
 		igrp_print(ndo, ipds->cp, ipds->len);
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_EIGRP:
 		eigrp_print(ndo, ipds->cp, ipds->len);
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_ND:
 		ND_PRINT((ndo, " nd %d", ipds->len));
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_EGP:
 		egp_print(ndo, ipds->cp, ipds->len);
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_OSPF:
 		ospf_print(ndo, ipds->cp, ipds->len, (const u_char *)ipds->ip);
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_IGMP:
 		igmp_print(ndo, ipds->cp, ipds->len);
 		break;
+#endif
 
 	case IPPROTO_IPV4:
 		/* DVMRP multicast tunnel (ip-in-ip encapsulation) */
@@ -443,25 +461,32 @@
 		break;
 #endif /*INET6*/
 
+#if !defined(EMBED)
 	case IPPROTO_RSVP:
 		rsvp_print(ndo, ipds->cp, ipds->len);
 		break;
+#endif
 
 	case IPPROTO_GRE:
 		/* do it */
 		gre_print(ndo, ipds->cp, ipds->len);
 		break;
 
+#if !defined(EMBED)
 	case IPPROTO_MOBILE:
 		mobile_print(ndo, ipds->cp, ipds->len);
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_PIM:
 		vec[0].ptr = ipds->cp;
 		vec[0].len = ipds->len;
 		pim_print(ndo, ipds->cp, ipds->len, in_cksum(vec, 1));
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_VRRP:
 		if (ndo->ndo_packettype == PT_CARP) {
 			if (ndo->ndo_vflag)
@@ -478,10 +503,13 @@
 				(const u_char *)ipds->ip, ipds->ip->ip_ttl);
 		}
 		break;
+#endif
 
+#if !defined(EMBED)
 	case IPPROTO_PGM:
 		pgm_print(ndo, ipds->cp, ipds->len, (const u_char *)ipds->ip);
 		break;
+#endif
 
 	default:
 		if (ndo->ndo_nflag==0 && (proto = getprotobynumber(ipds->nh)) != NULL)
diff -ur tcpdump-4.6.2.orig/print-ipcomp.c tcpdump-4.6.2/print-ipcomp.c
--- tcpdump-4.6.2.orig/print-ipcomp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ipcomp.c	2014-10-09 16:54:52.989071600 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_IPSEC) || defined(CONFIG_IPSEC_MODULE) || defined(CONFIG_KLIPS) || defined(CONFIG_KLIPS_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 struct ipcomp {
@@ -81,3 +83,5 @@
 fail:
 	return -1;
 }
+
+#endif
diff -ur tcpdump-4.6.2.orig/print-ipfc.c tcpdump-4.6.2/print-ipfc.c
--- tcpdump-4.6.2.orig/print-ipfc.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ipfc.c	2014-10-09 16:54:52.989071600 +1000
@@ -33,6 +33,8 @@
 
 #include "ether.h"
 
+#ifdef DLT_IP_OVER_FC
+
 /*
  * RFC 2625 IP-over-Fibre Channel.
  */
@@ -133,3 +135,4 @@
 
 	return (IPFC_HDRLEN);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ipx.c tcpdump-4.6.2/print-ipx.c
--- tcpdump-4.6.2.orig/print-ipx.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ipx.c	2014-10-09 16:54:52.989071600 +1000
@@ -27,6 +27,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -137,9 +139,11 @@
 	ipx_netbios_print(ndo, datap, length);
 #endif
 	break;
+#ifndef EMBED
       case IPX_SKT_EIGRP:
 	eigrp_print(ndo, datap, length);
 	break;
+#endif
       default:
 	ND_PRINT((ndo, "ipx-#%x %d", dstSkt, length));
 	break;
@@ -236,3 +240,4 @@
 trunc:
     ND_PRINT((ndo, "[|ipx %d]", length));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-isakmp.c tcpdump-4.6.2/print-isakmp.c
--- tcpdump-4.6.2.orig/print-isakmp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-isakmp.c	2014-10-09 16:54:52.989071600 +1000
@@ -40,6 +40,8 @@
 #undef HAVE_LIBCRYPTO
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -2983,6 +2985,7 @@
 	ND_PRINT((ndo,"[|isakmp]"));
 	return;
 }
+#endif
 
 /*
  * Local Variables:
diff -ur tcpdump-4.6.2.orig/print-isoclns.c tcpdump-4.6.2/print-isoclns.c
--- tcpdump-4.6.2.orig/print-isoclns.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-isoclns.c	2014-10-09 16:54:53.008920939 +1000
@@ -29,6 +29,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -3097,6 +3099,8 @@
         }
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-juniper.c tcpdump-4.6.2/print-juniper.c
--- tcpdump-4.6.2.orig/print-juniper.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-juniper.c	2014-10-09 16:54:52.999070936 +1000
@@ -36,6 +36,9 @@
 #include "ethertype.h"
 #include "atm.h"
 
+#if !defined(EMBED)
+#ifdef DLT_JUNIPER_ATM1 /* Assume if one enabled then all enabled */
+
 #define JUNIPER_BPF_OUT           0       /* Outgoing packet */
 #define JUNIPER_BPF_IN            1       /* Incoming packet */
 #define JUNIPER_BPF_PKT_IN        0x1     /* Incoming packet */
@@ -55,6 +58,7 @@
 #define JUNIPER_LSQ_L3_PROTO_ISO      (3 << JUNIPER_LSQ_L3_PROTO_SHIFT)
 #define AS_PIC_COOKIE_LEN 8
 
+#ifdef DLT_JUNIPER_ES
 #define JUNIPER_IPSEC_O_ESP_ENCRYPT_ESP_AUTHEN_TYPE 1
 #define JUNIPER_IPSEC_O_ESP_ENCRYPT_AH_AUTHEN_TYPE 2
 #define JUNIPER_IPSEC_O_ESP_AUTHENTICATION_TYPE 3
@@ -69,6 +73,7 @@
     { JUNIPER_IPSEC_O_ESP_ENCRYPTION_TYPE, "ESP ENCR" },
     { 0, NULL}
 };
+#endif
 
 static const struct tok juniper_direction_values[] = {
     { JUNIPER_BPF_IN,  "In"},
@@ -429,6 +434,7 @@
 #define ATM2_PKT_TYPE_MASK  0x70
 #define ATM2_GAP_COUNT_MASK 0x3F
 
+#ifdef DLT_JUNIPER_GGSN
 #define JUNIPER_PROTO_NULL          1
 #define JUNIPER_PROTO_IPV4          2
 #define JUNIPER_PROTO_IPV6          6
@@ -441,6 +447,7 @@
     { JUNIPER_PROTO_IPV6, "IPv6" },
     { 0, NULL}
 };
+#endif
 
 static int ip_heuristic_guess(netdissect_options *, register const u_char *, u_int);
 static int juniper_ppp_heuristic_guess(netdissect_options *, register const u_char *, u_int);
@@ -1462,6 +1469,8 @@
     ND_PRINT((ndo, "[|juniper_hdr], length %u", h->len));
     return 0;
 }
+#endif
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-krb.c tcpdump-4.6.2/print-krb.c
--- tcpdump-4.6.2.orig/print-krb.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-krb.c	2014-10-09 16:54:52.999070936 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -255,3 +257,4 @@
 	}
 	return;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-l2tp.c tcpdump-4.6.2/print-l2tp.c
--- tcpdump-4.6.2.orig/print-l2tp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-l2tp.c	2014-10-09 16:54:52.999070936 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_USER_L2TPD_L2TPD) || defined(CONFIG_USER_XL2TPD_XL2TPD)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -746,3 +748,4 @@
  trunc:
 	ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-lane.c tcpdump-4.6.2/print-lane.c
--- tcpdump-4.6.2.orig/print-lane.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-lane.c	2014-10-09 16:54:52.999070936 +1000
@@ -45,6 +45,8 @@
   uint16_t lec_opcode;
 };
 
+#ifdef DLT_LANE8023
+
 static const struct tok lecop2str[] = {
 	{ 0x0001,	"configure request" },
 	{ 0x0101,	"configure response" },
@@ -121,3 +123,4 @@
 
 	return (sizeof(struct lecdatahdr_8023));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ldp.c tcpdump-4.6.2/print-ldp.c
--- tcpdump-4.6.2.orig/print-ldp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ldp.c	2014-10-09 16:54:52.999070936 +1000
@@ -19,6 +19,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -665,6 +667,7 @@
     ND_PRINT((ndo, "\n\t\t packet exceeded snapshot"));
     return 0;
 }
+#endif
 
 /*
  * Local Variables:
diff -ur tcpdump-4.6.2.orig/print-llc.c tcpdump-4.6.2/print-llc.c
--- tcpdump-4.6.2.orig/print-llc.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-llc.c	2014-10-09 16:54:53.008920939 +1000
@@ -190,6 +190,7 @@
 		is_u = 0;
 	}
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	if (ssap_field == LLCSAP_GLOBAL && dsap_field == LLCSAP_GLOBAL) {
 		/*
 		 * This is an Ethernet_802.3 IPX frame; it has an
@@ -212,6 +213,7 @@
             ipx_print(ndo, p, length);
             return (1);
 	}
+#endif
 
 	dsap = dsap_field & ~LLC_IG;
 	ssap = ssap_field & ~LLC_GSAP;
@@ -232,11 +234,13 @@
 		}
 	}
 
+#if !defined(EMBED) || defined(CONFIG_BRIDGE) || defined(CONFIG_BRIDGE_MODULE)
 	if (ssap == LLCSAP_8021D && dsap == LLCSAP_8021D &&
 	    control == LLC_UI) {
 		stp_print(ndo, p+3, length-3);
 		return (1);
 	}
+#endif
 
 	if (ssap == LLCSAP_IP && dsap == LLCSAP_IP &&
 	    control == LLC_UI) {
@@ -244,6 +248,7 @@
 		return (1);
 	}
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	if (ssap == LLCSAP_IPX && dsap == LLCSAP_IPX &&
 	    control == LLC_UI) {
 		/*
@@ -288,11 +293,14 @@
 		return (1);
 	}
 #endif
+
+#if !defined(EMBED)
 	if (ssap == LLCSAP_ISONS && dsap == LLCSAP_ISONS
 	    && control == LLC_UI) {
 		isoclns_print(ndo, p + 3, length - 3, caplen - 3);
 		return (1);
 	}
+#endif
 
 	if (ssap == LLCSAP_SNAP && dsap == LLCSAP_SNAP
 	    && control == LLC_UI) {
@@ -305,6 +313,7 @@
 		if (ret)
 			return (ret);
 	}
+#endif
 
 	if (!ndo->ndo_eflag) {
 		if (ssap == dsap) {
@@ -406,6 +415,7 @@
 			return (ret);
 		break;
 
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
 	case OUI_APPLETALK:
 		if (et == ETHERTYPE_ATALK) {
 			/*
@@ -421,7 +431,9 @@
 				return (ret);
 		}
 		break;
+#endif
 
+#if !defined(EMBED)
 	case OUI_CISCO:
                 switch (et) {
                 case PID_CISCO_CDP:
@@ -444,6 +456,7 @@
                         break;
                 }
 		break;
+#endif
 
 	case OUI_RFC2684:
 		switch (et) {
@@ -468,6 +481,7 @@
 			ether_print(ndo, p, length, caplen, NULL, NULL);
 			return (1);
 
+#if !defined(EMBED) || defined(CONFIG_TR) || defined(CONFIG_TR_MODULE)
 		case PID_RFC2684_802_5_FCS:
 		case PID_RFC2684_802_5_NOFCS:
 			/*
@@ -489,7 +503,9 @@
 			 */
 			token_print(ndo, p, length, caplen);
 			return (1);
+#endif
 
+#if !defined(EMBED) || defined(CONFIG_FDDI) || defined(CONFIG_FDDI_MODULE)
 		case PID_RFC2684_FDDI_FCS:
 		case PID_RFC2684_FDDI_NOFCS:
 			/*
@@ -509,10 +525,12 @@
 			 */
 			fddi_print(ndo, p, length, caplen);
 			return (1);
-
+#endif
+#if !defined(EMBED) || defined(CONFIG_BRIDGE) || defined(CONFIG_BRIDGE_MODULE)
 		case PID_RFC2684_BPDU:
 			stp_print(ndo, p, length);
 			return (1);
+#endif
 		}
 	}
 	return (0);
diff -ur tcpdump-4.6.2.orig/print-lmp.c tcpdump-4.6.2/print-lmp.c
--- tcpdump-4.6.2.orig/print-lmp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-lmp.c	2014-10-09 16:54:52.999070936 +1000
@@ -22,6 +22,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -872,6 +874,9 @@
 trunc:
     ND_PRINT((ndo, "\n\t\t packet exceeded snapshot"));
 }
+
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-lspping.c tcpdump-4.6.2/print-lspping.c
--- tcpdump-4.6.2.orig/print-lspping.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-lspping.c	2014-10-09 16:54:52.999070936 +1000
@@ -18,6 +18,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -881,6 +883,9 @@
 trunc:
     ND_PRINT((ndo, "\n\t\t packet exceeded snapshot"));
 }
+
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-lwres.c tcpdump-4.6.2/print-lwres.c
--- tcpdump-4.6.2.orig/print-lwres.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-lwres.c	2014-10-09 16:54:52.999070936 +1000
@@ -32,6 +32,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "nameser.h"
@@ -594,3 +596,4 @@
   trunc:
 	ND_PRINT((ndo, "[|lwres]"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-mobile.c tcpdump-4.6.2/print-mobile.c
--- tcpdump-4.6.2.orig/print-mobile.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-mobile.c	2014-10-09 16:54:52.999070936 +1000
@@ -41,6 +41,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -100,3 +102,5 @@
 		ND_PRINT((ndo, " (bad checksum %d)", crc));
 	}
 }
+
+#endif
diff -ur tcpdump-4.6.2.orig/print-mpls.c tcpdump-4.6.2/print-mpls.c
--- tcpdump-4.6.2.orig/print-mpls.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-mpls.c	2014-10-09 16:54:52.999070936 +1000
@@ -31,6 +31,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -193,9 +195,11 @@
 #endif
 		break;
 
+#if !defined(EMBED)
 	case PT_OSI:
 		isoclns_print(ndo, p, length - (p - bp), length - (p - bp));
 		break;
+#endif
 
 	default:
 		break;
@@ -205,6 +209,7 @@
 trunc:
 	ND_PRINT((ndo, "[|MPLS]"));
 }
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-msdp.c tcpdump-4.6.2/print-msdp.c
--- tcpdump-4.6.2.orig/print-msdp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-msdp.c	2014-10-09 16:54:52.999070936 +1000
@@ -21,6 +21,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -93,6 +95,7 @@
 trunc:
 	ND_PRINT((ndo, " [|msdp]"));
 }
+#endif
 
 /*
  * Local Variables:
diff -ur tcpdump-4.6.2.orig/print-nfs.c tcpdump-4.6.2/print-nfs.c
--- tcpdump-4.6.2.orig/print-nfs.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-nfs.c	2014-10-09 16:54:52.999070936 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -1732,3 +1734,4 @@
 	if (!nfserr)
 		ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ntp.c tcpdump-4.6.2/print-ntp.c
--- tcpdump-4.6.2.orig/print-ntp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ntp.c	2014-10-09 16:54:52.999070936 +1000
@@ -28,6 +28,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_USER_MSNTP_MSNTP) || defined(CONFIG_USER_NTPCLIENT_NTPCLIENT) || defined(CONFIG_USER_NTPD_NTPD)
+
 #include <tcpdump-stdinc.h>
 
 #ifdef HAVE_STRFTIME
@@ -424,4 +426,4 @@
 	f = ff * 1000000000.0;	/* treat fraction as parts per billion */
 	ND_PRINT((ndo, "%s%d.%09d", signbit ? "-" : "+", i, f));
 }
-
+#endif
diff -ur tcpdump-4.6.2.orig/print-null.c tcpdump-4.6.2/print-null.c
--- tcpdump-4.6.2.orig/print-null.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-null.c	2014-10-09 16:54:52.999070936 +1000
@@ -43,6 +43,8 @@
  */
 #define	NULL_HDRLEN 4
 
+#if defined(DLT_NULL) || defined(DLT_LOOP)
+
 /*
  * Byte-swap a 32-bit number.
  * ("htonl()" or "ntohl()" won't work - we want to byte-swap even on
@@ -117,17 +119,23 @@
 		break;
 #endif
 
+#if !defined(EMBED)
 	case BSD_AFNUM_ISO:
 		isoclns_print(ndo, p, length, caplen);
 		break;
-
+#endif
+ 
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
 	case BSD_AFNUM_APPLETALK:
 		atalk_print(ndo, p, length);
 		break;
-
+#endif
+ 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	case BSD_AFNUM_IPX:
 		ipx_print(ndo, p, length);
 		break;
+#endif
 
 	default:
 		/* unknown AF_ value */
@@ -139,6 +147,7 @@
 
 	return (NULL_HDRLEN);
 }
+#endif
 
 /*
  * Local Variables:
diff -ur tcpdump-4.6.2.orig/print-ospf6.c tcpdump-4.6.2/print-ospf6.c
--- tcpdump-4.6.2.orig/print-ospf6.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ospf6.c	2014-10-09 16:54:52.999070936 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -1007,3 +1009,4 @@
 trunc:
 	ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-ospf.c tcpdump-4.6.2/print-ospf.c
--- tcpdump-4.6.2.orig/print-ospf.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ospf.c	2014-10-09 16:54:52.999070936 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -1139,3 +1141,4 @@
 trunc:
 	ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-pflog.c tcpdump-4.6.2/print-pflog.c
--- tcpdump-4.6.2.orig/print-pflog.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-pflog.c	2014-10-09 16:54:52.999070936 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#ifdef DLT_PFLOG
+
 #ifndef HAVE_NET_PFVAR_H
 #error "No pf headers available"
 #endif
@@ -174,6 +176,7 @@
 	ND_PRINT((ndo, "%s", tstr));
 	return (hdrlen);
 }
+#endif
 
 /*
  * Local Variables:
diff -ur tcpdump-4.6.2.orig/print-pgm.c tcpdump-4.6.2/print-pgm.c
--- tcpdump-4.6.2.orig/print-pgm.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-pgm.c	2014-10-09 16:54:52.999070936 +1000
@@ -18,6 +18,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -818,3 +820,4 @@
 	if (ch != '\0')
 		ND_PRINT((ndo, ">"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-pim.c tcpdump-4.6.2/print-pim.c
--- tcpdump-4.6.2.orig/print-pim.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-pim.c	2014-10-09 16:54:52.999070936 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -1084,6 +1086,7 @@
 trunc:
 	ND_PRINT((ndo, "[|pim]"));
 }
+#endif
 
 /*
  * Local Variables:
diff -ur tcpdump-4.6.2.orig/print-ppp.c tcpdump-4.6.2/print-ppp.c
--- tcpdump-4.6.2.orig/print-ppp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-ppp.c	2014-10-09 16:54:52.999070936 +1000
@@ -34,6 +34,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_PPP) || defined(CONFIG_PPP_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #ifdef __bsdi__
@@ -1472,17 +1474,23 @@
 		ip6_print(ndo, p, length);
 		break;
 #endif
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 	case ETHERTYPE_IPX:	/*XXX*/
 	case PPP_IPX:
 		ipx_print(ndo, p, length);
 		break;
+#endif
+#if !defined(EMBED)
 	case PPP_OSI:
 		isoclns_print(ndo, p, length, length);
 		break;
+#endif
+#if !defined(EMBED)
 	case PPP_MPLS_UCAST:
 	case PPP_MPLS_MCAST:
 		mpls_print(ndo, p, length);
 		break;
+#endif
 	case PPP_COMP:
 		ND_PRINT((ndo, "compressed PPP data"));
 		break;
@@ -1669,9 +1677,11 @@
 		handle_ppp(ndo, proto, p, length);
 		break;
 
+#if !defined(EMBED)
 	case CHDLC_UNICAST:
 	case CHDLC_BCAST:
 		return (chdlc_if_print(ndo, h, p));
+#endif
 
 	default:
 		if (ndo->ndo_eflag)
@@ -1851,6 +1861,7 @@
 #endif /* __bsdi__ */
 	return (hdrlength);
 }
+#endif
 
 
 /*
diff -ur tcpdump-4.6.2.orig/print-pppoe.c tcpdump-4.6.2/print-pppoe.c
--- tcpdump-4.6.2.orig/print-pppoe.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-pppoe.c	2014-10-09 16:54:52.999070936 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -198,3 +200,4 @@
 	ND_PRINT((ndo, "[|pppoe]"));
 	return (PPPOE_HDRLEN);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-pptp.c tcpdump-4.6.2/print-pptp.c
--- tcpdump-4.6.2.orig/print-pptp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-pptp.c	2014-10-09 16:54:52.999070936 +1000
@@ -26,6 +26,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_USER_PPTPD_PPTPD) || defined(CONFIG_USER_PPTP_CLIENT_PPTP) || defined(CONFIG_USER_PPTP_PPTP)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -1003,3 +1005,4 @@
 trunc:
 	ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-radius.c tcpdump-4.6.2/print-radius.c
--- tcpdump-4.6.2.orig/print-radius.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-radius.c	2014-10-09 16:54:52.999070936 +1000
@@ -47,6 +47,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -932,3 +934,4 @@
 trunc:
    ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-raw.c tcpdump-4.6.2/print-raw.c
--- tcpdump-4.6.2.orig/print-raw.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-raw.c	2014-10-09 16:54:52.999070936 +1000
@@ -28,6 +28,8 @@
 
 #include "interface.h"
 
+#ifdef DLT_RAW 
+
 /*
  * The DLT_RAW packet has no header. It contains a raw IP packet.
  */
@@ -42,3 +44,4 @@
 
 	return (0);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-rip.c tcpdump-4.6.2/print-rip.c
--- tcpdump-4.6.2.orig/print-rip.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-rip.c	2014-10-09 16:54:52.999070936 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -268,5 +270,6 @@
                 }
         }
 }
+#endif
 
 
diff -ur tcpdump-4.6.2.orig/print-rsvp.c tcpdump-4.6.2/print-rsvp.c
--- tcpdump-4.6.2.orig/print-rsvp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-rsvp.c	2014-10-09 16:54:52.999070936 +1000
@@ -20,6 +20,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -1933,3 +1935,4 @@
 trunc:
     ND_PRINT((ndo, "\n\t\t packet exceeded snapshot"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-rx.c tcpdump-4.6.2/print-rx.c
--- tcpdump-4.6.2.orig/print-rx.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-rx.c	2014-10-09 16:54:52.999070936 +1000
@@ -37,6 +37,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -2882,3 +2884,4 @@
 	ND_PRINT((ndo, " [|ack]"));
 }
 #undef TRUNCRET
+#endif
diff -ur tcpdump-4.6.2.orig/print-sctp.c tcpdump-4.6.2/print-sctp.c
--- tcpdump-4.6.2.orig/print-sctp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-sctp.c	2014-10-09 16:54:52.999070936 +1000
@@ -38,6 +38,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_IP_SCTP) || defined(CONFIG_IP_SCTP_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -658,7 +660,9 @@
 		(sizeof(struct sctpDataPart) + sizeof(struct sctpChunkDesc));
 
 	    if (isforces) {
+#if !defined(EMBED)
 		forces_print(ndo, payloadPtr, payload_size);
+#endif
 	    } else if (ndo->ndo_vflag >= 2) {	/* if verbose output is specified */
 					/* at the command line */
 		switch (ppid) {
@@ -758,3 +762,4 @@
 trunc:
     ND_PRINT((ndo, "[|sctp]"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-sip.c tcpdump-4.6.2/print-sip.c
--- tcpdump-4.6.2.orig/print-sip.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-sip.c	2014-10-09 16:54:52.999070936 +1000
@@ -18,6 +18,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_USER_SER_SER)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -54,3 +56,4 @@
 trunc:
     ND_PRINT((ndo, "[|sip]"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-sl.c tcpdump-4.6.2/print-sl.c
--- tcpdump-4.6.2.orig/print-sl.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-sl.c	2014-10-09 16:54:52.999070936 +1000
@@ -48,6 +48,8 @@
 
 static const char tstr[] = "[|slip]";
 
+#if defined(DLT_SLIP) || defined(DLT_SLIP_BSDOS)
+
 static u_int lastlen[2][256];
 static u_int lastconn = 255;
 
@@ -248,3 +250,4 @@
 	lastlen[dir][lastconn] = length - (hlen << 2);
 	ND_PRINT((ndo, " %d (%ld)", lastlen[dir][lastconn], (long)(cp - chdr)));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-sll.c tcpdump-4.6.2/print-sll.c
--- tcpdump-4.6.2.orig/print-sll.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-sll.c	2014-10-09 16:54:52.999070936 +1000
@@ -33,6 +33,8 @@
 
 #include "ether.h"
 
+#ifdef DLT_LINUX_SLL
+
 /*
  * For captures on Linux cooked sockets, we construct a fake header
  * that includes:
@@ -235,12 +237,14 @@
 		 */
 		switch (ether_type) {
 
+#if !defined(EMBED) || defined(CONFIG_IPX) || defined(CONFIG_IPX_MODULE)
 		case LINUX_SLL_P_802_3:
 			/*
 			 * Ethernet_802.3 IPX frame.
 			 */
 			ipx_print(ndo, p, length);
 			break;
+#endif
 
 		case LINUX_SLL_P_802_2:
 			/*
@@ -309,3 +313,4 @@
 
 	return (SLL_HDR_LEN);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-slow.c tcpdump-4.6.2/print-slow.c
--- tcpdump-4.6.2.orig/print-slow.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-slow.c	2014-10-09 16:54:52.999070936 +1000
@@ -23,6 +23,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -656,3 +658,4 @@
     }
     return;
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-snmp.c tcpdump-4.6.2/print-snmp.c
--- tcpdump-4.6.2.orig/print-snmp.c	2014-09-03 10:10:42.000000000 +1000
+++ tcpdump-4.6.2/print-snmp.c	2014-10-09 16:54:52.999070936 +1000
@@ -61,6 +61,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -1907,3 +1909,4 @@
 		ND_PRINT((ndo, "} "));
 	}
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-stp.c tcpdump-4.6.2/print-stp.c
--- tcpdump-4.6.2.orig/print-stp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-stp.c	2014-10-09 16:54:52.999070936 +1000
@@ -14,6 +14,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_BRIDGE) || defined(CONFIG_BRIDGE_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -456,6 +458,8 @@
     ND_PRINT((ndo, "[|stp %d]", length));
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -ur tcpdump-4.6.2.orig/print-sunatm.c tcpdump-4.6.2/print-sunatm.c
--- tcpdump-4.6.2.orig/print-sunatm.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-sunatm.c	2014-10-09 16:54:52.999070936 +1000
@@ -45,6 +45,9 @@
 
 #include "atm.h"
 
+#if !defined(EMBED) || defined(CONFIG_ATM) || defined(CONFIG_ATM_MODULE)
+#ifdef DLT_SUNATM
+
 /* SunATM header for ATM packet */
 #define DIR_POS		0	/* Direction (0x80 = transmit, 0x00 = receive) */
 #define VPI_POS		1	/* VPI */
@@ -105,3 +108,5 @@
 
 	return (PKT_BEGIN_POS);
 }
+#endif
+#endif
diff -ur tcpdump-4.6.2.orig/print-sunrpc.c tcpdump-4.6.2/print-sunrpc.c
--- tcpdump-4.6.2.orig/print-sunrpc.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-sunrpc.c	2014-10-09 16:54:53.008920939 +1000
@@ -39,6 +39,8 @@
  */
 #undef _XOPEN_SOURCE_EXTENDED
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #if defined(HAVE_GETRPCBYNUMBER) && defined(HAVE_RPC_RPC_H)
@@ -253,3 +255,4 @@
 #endif
 	return (buf);
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-symantec.c tcpdump-4.6.2/print-symantec.c
--- tcpdump-4.6.2.orig/print-symantec.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-symantec.c	2014-10-09 16:54:53.008920939 +1000
@@ -32,6 +32,8 @@
 
 #include "ether.h"
 
+#ifdef DLT_SYMANTEC_FIREWALL
+
 struct symantec_header {
 	uint8_t  stuff1[6];
 	uint16_t ether_type;
@@ -111,3 +113,4 @@
 
 	return (sizeof (struct symantec_header));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-syslog.c tcpdump-4.6.2/print-syslog.c
--- tcpdump-4.6.2.orig/print-syslog.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-syslog.c	2014-10-09 16:54:53.008920939 +1000
@@ -19,6 +19,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_USER_BUSYBOX_REMOTE_LOG)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -143,3 +145,4 @@
 trunc:
     ND_PRINT((ndo, "%s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-tcp.c tcpdump-4.6.2/print-tcp.c
--- tcpdump-4.6.2.orig/print-tcp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-tcp.c	2014-10-09 16:54:53.008920939 +1000
@@ -96,7 +96,11 @@
 };
 #endif
 
+#ifndef EMBED
 #define TSEQ_HASHSIZE 919
+#else
+#define TSEQ_HASHSIZE 3
+#endif
 
 /* These tcp optinos do not have the size octet */
 #define ZEROLENOPT(o) ((o) == TCPOPT_EOL || (o) == TCPOPT_NOP)
@@ -664,6 +668,7 @@
                 return;
         }
 
+#if !defined(EMBED)
         if (ndo->ndo_packettype) {
                 switch (ndo->ndo_packettype) {
                 case PT_ZMTP1:
@@ -672,25 +677,35 @@
                 }
                 return;
         }
+#endif
 
         if (sport == TELNET_PORT || dport == TELNET_PORT) {
                 if (!ndo->ndo_qflag && ndo->ndo_vflag)
                         telnet_print(ndo, bp, length);
-        } else if (sport == BGP_PORT || dport == BGP_PORT)
+        }
+#if !defined(EMBED)
+	else if (sport == BGP_PORT || dport == BGP_PORT)
                 bgp_print(ndo, bp, length);
+#endif
+#if !defined(EMBED)
         else if (sport == PPTP_PORT || dport == PPTP_PORT)
                 pptp_print(ndo, bp);
+#endif
 #ifdef TCPDUMP_DO_SMB
         else if (sport == NETBIOS_SSN_PORT || dport == NETBIOS_SSN_PORT)
                 nbt_tcp_print(ndo, bp, length);
 	else if (sport == SMB_PORT || dport == SMB_PORT)
 		smb_tcp_print(ndo, bp, length);
 #endif
+#if !defined(EMBED)
         else if (sport == BEEP_PORT || dport == BEEP_PORT)
                 beep_print(ndo, bp, length);
+#endif
+#if !defined(EMBED)
         else if (sport == OPENFLOW_PORT_OLD || dport == OPENFLOW_PORT_OLD ||
                  sport == OPENFLOW_PORT_IANA || dport == OPENFLOW_PORT_IANA)
                 openflow_print(ndo, bp, length);
+#endif
         else if (length > 2 &&
                  (sport == NAMESERVER_PORT || dport == NAMESERVER_PORT ||
                   sport == MULTICASTDNS_PORT || dport == MULTICASTDNS_PORT)) {
@@ -699,14 +714,23 @@
                  * XXX packet could be unaligned, it can go strange
                  */
                 ns_print(ndo, bp + 2, length - 2, 0);
-        } else if (sport == MSDP_PORT || dport == MSDP_PORT) {
+        }
+#if !defined(EMBED)
+	else if (sport == MSDP_PORT || dport == MSDP_PORT) {
                 msdp_print(ndo, bp, length);
-        } else if (sport == RPKI_RTR_PORT || dport == RPKI_RTR_PORT) {
+        }
+#endif
+#if !defined(EMBED)
+	else if (sport == RPKI_RTR_PORT || dport == RPKI_RTR_PORT) {
                 rpki_rtr_print(ndo, bp, length);
         }
+#endif
+#if !defined(EMBED)
         else if (length > 0 && (sport == LDP_PORT || dport == LDP_PORT)) {
                 ldp_print(ndo, bp, length);
         }
+#endif
+#if !defined(EMBED)
         else if ((sport == NFS_PORT || dport == NFS_PORT) &&
                  length >= 4 && ND_TTEST2(*bp, 4)) {
                 /*
@@ -737,6 +761,7 @@
                         }
                 }
         }
+#endif
 
         return;
  bad:
diff -ur tcpdump-4.6.2.orig/print-timed.c tcpdump-4.6.2/print-timed.c
--- tcpdump-4.6.2.orig/print-timed.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-timed.c	2014-10-09 16:54:53.008920939 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -145,3 +147,4 @@
 trunc:
 	ND_PRINT((ndo, " %s", tstr));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-token.c tcpdump-4.6.2/print-token.c
--- tcpdump-4.6.2.orig/print-token.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-token.c	2014-10-09 16:54:53.008920939 +1000
@@ -29,6 +29,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED) || defined(CONFIG_TR) || defined(CONFIG_TR_MODULE)
+
 #include <tcpdump-stdinc.h>
 
 #include <string.h>
@@ -248,3 +250,4 @@
 {
 	return (token_print(ndo, p, h->len, h->caplen));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-udp.c tcpdump-4.6.2/print-udp.c
--- tcpdump-4.6.2.orig/print-udp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-udp.c	2014-10-09 16:54:53.008920939 +1000
@@ -94,6 +94,7 @@
 #define RTCP_PT_BYE	203
 #define RTCP_PT_APP	204
 
+#if !defined(EMBED)
 static void
 vat_print(netdissect_options *ndo, const void *hdr, register const struct udphdr *up)
 {
@@ -119,7 +120,9 @@
 			ND_PRINT((ndo, " s%d", (i0 >> 24) & 0x3f));
 	}
 }
+#endif
 
+#if !defined(EMBED)
 static void
 rtp_print(netdissect_options *ndo, const void *hdr, u_int len,
           register const struct udphdr *up)
@@ -190,7 +193,9 @@
 			ND_PRINT((ndo, " 0x%04x", ip[0] >> 16));
 	}
 }
+#endif
 
+#if !defined(EMBED)
 static const u_char *
 rtcp_print(netdissect_options *ndo, const u_char *hdr, const u_char *ep)
 {
@@ -271,6 +276,7 @@
 	}
 	return (hdr + len);
 }
+#endif
 
 static int udp_cksum(netdissect_options *ndo, register const struct ip *ip,
 		     register const struct udphdr *up,
@@ -398,21 +404,28 @@
 		return;
 	}
 	if (ndo->ndo_packettype) {
+#if !defined(EMBED)
 		register struct sunrpc_msg *rp;
 		enum sunrpc_msg_type direction;
+#endif
 
 		switch (ndo->ndo_packettype) {
 
 		case PT_VAT:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			vat_print(ndo, (void *)(up + 1), up);
+#endif
 			break;
 
 		case PT_WB:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			wb_print(ndo, (void *)(up + 1), length);
+#endif
 			break;
 
+#if !defined(EMBED)
 		case PT_RPC:
 			rp = (struct sunrpc_msg *)(up + 1);
 			direction = (enum sunrpc_msg_type)EXTRACT_32BITS(&rp->rm_direction);
@@ -423,26 +436,35 @@
 				nfsreply_print(ndo, (u_char *)rp, length,
 				    (u_char *)ip);			/*XXX*/
 			break;
+#endif
 
 		case PT_RTP:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			rtp_print(ndo, (void *)(up + 1), length, up);
+#endif
 			break;
 
 		case PT_RTCP:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			while (cp < ep)
 				cp = rtcp_print(ndo, cp, ep);
+#endif
 			break;
 
 		case PT_SNMP:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			snmp_print(ndo, (const u_char *)(up + 1), length);
+#endif
 			break;
 
 		case PT_CNFP:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			cnfp_print(ndo, cp, (const u_char *)ip);
+#endif
 			break;
 
 		case PT_TFTP:
@@ -452,32 +474,42 @@
 
 		case PT_AODV:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			aodv_print(ndo, (const u_char *)(up + 1), length,
 #ifdef INET6
 			    ip6 != NULL);
 #else
 			    0);
 #endif
+#endif
 			break;
 
 		case PT_RADIUS:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			radius_print(ndo, cp, length);
+#endif
 			break;
 
 		case PT_VXLAN:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			vxlan_print(ndo, (const u_char *)(up + 1), length);
+#endif
 			break;
 
 		case PT_PGM:
 		case PT_PGM_ZMTP1:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			pgm_print(ndo, cp, length, bp2);
+#endif
 			break;
 		case PT_LMP:
 			udpipaddr_print(ndo, ip, sport, dport);
+#if !defined(EMBED)
 			lmp_print(ndo, cp, length);
+#endif
 			break;
 		}
 		return;
@@ -485,6 +517,7 @@
 
 	udpipaddr_print(ndo, ip, sport, dport);
 	if (!ndo->ndo_qflag) {
+#if !defined(EMBED)
 		register struct sunrpc_msg *rp;
 		enum sunrpc_msg_type direction;
 
@@ -510,6 +543,8 @@
 			}
 #endif
 		}
+#endif
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
 		if (ND_TTEST(((struct LAP *)cp)->type) &&
 		    ((struct LAP *)cp)->type == lapDDP &&
 		    (atalk_port(sport) || atalk_port(dport))) {
@@ -518,6 +553,7 @@
 			llap_print(ndo, cp, length);
 			return;
 		}
+#endif
 	}
 
 	if (ndo->ndo_vflag && !ndo->ndo_Kflag && !fragmented) {
@@ -567,14 +603,21 @@
 			ns_print(ndo, (const u_char *)(up + 1), length, 0);
 		else if (ISPORT(MULTICASTDNS_PORT))
 			ns_print(ndo, (const u_char *)(up + 1), length, 1);
+#if !defined(EMBED)
 		else if (ISPORT(TIMED_PORT))
 			timed_print(ndo, (const u_char *)(up + 1));
+#endif
 		else if (ISPORT(TFTP_PORT))
 			tftp_print(ndo, (const u_char *)(up + 1), length);
+#if !defined(EMBED)
 		else if (ISPORT(IPPORT_BOOTPC) || ISPORT(IPPORT_BOOTPS))
 			bootp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(RIP_PORT))
 			rip_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(AODV_PORT))
 			aodv_print(ndo, (const u_char *)(up + 1), length,
 #ifdef INET6
@@ -582,6 +625,8 @@
 #else
 			    0);
 #endif
+#endif
+#if !defined(EMBED)
 	        else if (ISPORT(ISAKMP_PORT))
 			 isakmp_print(ndo, (const u_char *)(up + 1), length, bp2);
   	        else if (ISPORT(ISAKMP_PORT_NATT))
@@ -590,32 +635,47 @@
    	        else if (ISPORT(ISAKMP_PORT_USER1) || ISPORT(ISAKMP_PORT_USER2))
 			isakmp_print(ndo, (const u_char *)(up + 1), length, bp2);
 #endif
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(SNMP_PORT) || ISPORT(SNMPTRAP_PORT))
 			snmp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED) || defined(CONFIG_USER_MSNTP_MSNTP) || defined(CONFIG_USER_NTPCLIENT_NTPCLIENT) || defined(CONFIG_USER_NTPD_NTPD)
 		else if (ISPORT(NTP_PORT))
 			ntp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(KERBEROS_PORT) || ISPORT(KERBEROS_SEC_PORT))
 			krb_print(ndo, (const void *)(up + 1));
+#endif
+#if !defined(EMBED) || defined(CONFIG_USER_L2TPD_L2TPD) || defined(CONFIG_USER_XL2TPD_XL2TPD)
 		else if (ISPORT(L2TP_PORT))
 			l2tp_print(ndo, (const u_char *)(up + 1), length);
+#endif
 #ifdef TCPDUMP_DO_SMB
 		else if (ISPORT(NETBIOS_NS_PORT))
 			nbt_udp137_print(ndo, (const u_char *)(up + 1), length);
 		else if (ISPORT(NETBIOS_DGRAM_PORT))
 			nbt_udp138_print(ndo, (const u_char *)(up + 1), length);
 #endif
+#if !defined(EMBED)
 		else if (dport == VAT_PORT)
 			vat_print(ndo, (const void *)(up + 1), up);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(ZEPHYR_SRV_PORT) || ISPORT(ZEPHYR_CLT_PORT))
 			zephyr_print(ndo, (const void *)(up + 1), length);
+#endif
 		/*
 		 * Since there are 10 possible ports to check, I think
 		 * a <> test would be more efficient
 		 */
+#if !defined(EMBED)
 		else if ((sport >= RX_PORT_LOW && sport <= RX_PORT_HIGH) ||
 			 (dport >= RX_PORT_LOW && dport <= RX_PORT_HIGH))
 			rx_print(ndo, (const void *)(up + 1), length, sport, dport,
 				 (u_char *) ip);
+#endif
 #ifdef INET6
 		else if (ISPORT(RIPNG_PORT))
 			ripng_print(ndo, (const u_char *)(up + 1), length);
@@ -629,21 +689,34 @@
 		/*
 		 * Kludge in test for whiteboard packets.
 		 */
+#if !defined(EMBED)
 		else if (dport == WB_PORT)
 			wb_print(ndo, (const void *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(CISCO_AUTORP_PORT))
 			cisco_autorp_print(ndo, (const void *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(RADIUS_PORT) ||
 			 ISPORT(RADIUS_NEW_PORT) ||
 			 ISPORT(RADIUS_ACCOUNTING_PORT) ||
 			 ISPORT(RADIUS_NEW_ACCOUNTING_PORT) )
 			radius_print(ndo, (const u_char *)(up+1), length);
+#endif
+#if !defined(EMBED)
 		else if (dport == HSRP_PORT)
 			hsrp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(LWRES_PORT))
 			lwres_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(LDP_PORT))
 			ldp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(OLSR_PORT))
 			olsr_print(ndo, (const u_char *)(up + 1), length,
 #if INET6
@@ -651,31 +724,56 @@
 #else
 					0);
 #endif
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(MPLS_LSP_PING_PORT))
 			lspping_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (dport == BFD_CONTROL_PORT ||
 			 dport == BFD_ECHO_PORT )
 			bfd_print(ndo, (const u_char *)(up+1), length, dport);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(LMP_PORT))
 			lmp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(VQP_PORT))
 			vqp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(SFLOW_PORT))
                         sflow_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 	        else if (dport == LWAPP_CONTROL_PORT)
 			lwapp_control_print(ndo, (const u_char *)(up + 1), length, 1);
+#endif
+#if !defined(EMBED)
                 else if (sport == LWAPP_CONTROL_PORT)
                         lwapp_control_print(ndo, (const u_char *)(up + 1), length, 0);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(LWAPP_DATA_PORT))
                         lwapp_data_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(SIP_PORT))
 			sip_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(SYSLOG_PORT))
 			syslog_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(OTV_PORT))
 			otv_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
                 else if (ISPORT(VXLAN_PORT))
 			vxlan_print(ndo, (const u_char *)(up + 1), length);
+#endif
 		else
 			ND_PRINT((ndo, "UDP, length %u",
 			    (uint32_t)(ulen - sizeof(*up))));
diff -ur tcpdump-4.6.2.orig/print-vrrp.c tcpdump-4.6.2/print-vrrp.c
--- tcpdump-4.6.2.orig/print-vrrp.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-vrrp.c	2014-10-09 16:54:53.008920939 +1000
@@ -28,6 +28,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -180,3 +182,4 @@
 trunc:
 	ND_PRINT((ndo, "[|vrrp]"));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-wb.c tcpdump-4.6.2/print-wb.c
--- tcpdump-4.6.2.orig/print-wb.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-wb.c	2014-10-09 16:54:53.008920939 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -446,3 +448,4 @@
 		return;
 	}
 }
+#endif
diff -ur tcpdump-4.6.2.orig/print-zephyr.c tcpdump-4.6.2/print-zephyr.c
--- tcpdump-4.6.2.orig/print-zephyr.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2/print-zephyr.c	2014-10-09 16:54:53.008920939 +1000
@@ -25,6 +25,8 @@
 #include "config.h"
 #endif
 
+#if !defined(EMBED)
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -315,3 +317,4 @@
     if (*z.opcode)
 	ND_PRINT((ndo, " op %s", z.opcode));
 }
+#endif
diff -ur tcpdump-4.6.2.orig/tcpdump.c tcpdump-4.6.2/tcpdump.c
--- tcpdump-4.6.2.orig/tcpdump.c	2014-09-03 10:10:42.000000000 +1000
+++ tcpdump-4.6.2/tcpdump.c	2014-10-09 16:54:53.008920939 +1000
@@ -186,7 +186,9 @@
 };
 
 static const struct ndo_printer ndo_printers[] = {
+#ifdef DLT_EN10MB 
 	{ ether_if_print,	DLT_EN10MB },
+#endif
 #ifdef DLT_IPNET
 	{ ipnet_if_print,	DLT_IPNET },
 #endif
@@ -217,7 +219,9 @@
 #ifdef DLT_IP_OVER_FC
 	{ ipfc_if_print,	DLT_IP_OVER_FC },
 #endif
+#ifdef DLT_NULL 
 	{ null_if_print,	DLT_NULL },
+#endif
 #ifdef DLT_LOOP
 	{ null_if_print,	DLT_LOOP },
 #endif
@@ -230,11 +234,15 @@
 #ifdef DLT_LANE8023
 	{ lane_if_print,        DLT_LANE8023 },
 #endif
+#ifdef DLT_ARCNET
 	{ arcnet_if_print,	DLT_ARCNET },
+#endif
 #ifdef DLT_ARCNET_LINUX
 	{ arcnet_linux_if_print, DLT_ARCNET_LINUX },
 #endif
+#ifdef DLT_RAW 
 	{ raw_if_print,		DLT_RAW },
+#endif
 #ifdef DLT_IPV4
 	{ raw_if_print,		DLT_IPV4 },
 #endif
@@ -258,40 +266,65 @@
 #ifdef DLT_HDLC
 	{ chdlc_if_print,	DLT_HDLC },
 #endif
+#if !defined(EMBED) || defined(CONFIG_PPPOE) || defined(CONFIG_PPPOE_MODULE)
 #ifdef DLT_PPP_ETHER
 	{ pppoe_if_print,	DLT_PPP_ETHER },
 #endif
+#endif
 #if defined(DLT_PFLOG) && defined(HAVE_NET_PFVAR_H)
 	{ pflog_if_print,	DLT_PFLOG },
 #endif
+#if !defined(EMBED) || defined(CONFIG_TR) || defined(CONFIG_TR_MODULE)
+#ifdef DLT_IEEE802 
 	{ token_if_print,	DLT_IEEE802 },
+#endif
+#endif
+#if !defined(EMBED) || defined(CONFIG_FDDI) || defined(CONFIG_FDDI_MODULE)
+#ifdef DLT_FDDI 
 	{ fddi_if_print,	DLT_FDDI },
+#endif
+#endif
 #ifdef DLT_LINUX_SLL
 	{ sll_if_print,		DLT_LINUX_SLL },
 #endif
+#if !defined(EMBED) || defined(CONFIG_DLCI) || defined(CONFIG_DLCI_MODULE)
 #ifdef DLT_FR
 	{ fr_if_print,		DLT_FR },
 #endif
 #ifdef DLT_FRELAY
 	{ fr_if_print,		DLT_FRELAY },
 #endif
+#endif
+#if !defined(EMBED)
 #ifdef DLT_MFR
 	{ mfr_if_print,		DLT_MFR },
 #endif
+#endif
+#if !defined(EMBED) || defined(CONFIG_ATM) || defined(CONFIG_ATM_MODULE)
+#ifdef DLT_ATM_RFC1483 
 	{ atm_if_print,		DLT_ATM_RFC1483 },
+#endif
+#endif
+#if !defined(EMBED) || defined(CONFIG_ATM) || defined(CONFIG_ATM_MODULE)
 #ifdef DLT_SUNATM
 	{ sunatm_if_print,	DLT_SUNATM },
 #endif
+#endif
 #ifdef DLT_ENC
 	{ enc_if_print,		DLT_ENC },
 #endif
+#ifdef DLT_SLIP 
 	{ sl_if_print,		DLT_SLIP },
+#endif
 #ifdef DLT_SLIP_BSDOS
 	{ sl_bsdos_if_print,	DLT_SLIP_BSDOS },
 #endif
+#if !defined(EMBED) || defined(CONFIG_ATALK) || defined(CONFIG_ATALK_MODULE)
 #ifdef DLT_LTALK
 	{ ltalk_if_print,	DLT_LTALK },
 #endif
+#endif
+#if !defined(EMBED)
 #ifdef DLT_JUNIPER_ATM1
 	{ juniper_atm1_print,	DLT_JUNIPER_ATM1 },
 #endif
@@ -352,7 +385,10 @@
 #ifdef DLT_PRISM_HEADER
 	{ prism_if_print,	DLT_PRISM_HEADER },
 #endif
+#if !defined(EMBED) || defined(CONFIG_PPP) || defined(CONFIG_PPP_MODULE)
+#ifdef DLT_PPP 
 	{ ppp_if_print,		DLT_PPP },
+#endif
 #ifdef DLT_PPP_WITHDIRECTION
 	{ ppp_if_print,		DLT_PPP_WITHDIRECTION },
 #endif
@@ -362,6 +398,8 @@
 #ifdef DLT_PPP_SERIAL
 	{ ppp_hdlc_if_print,	DLT_PPP_SERIAL },
 #endif
+#endif
+#endif
 	{ NULL,			0 },
 };
 
diff -u tcpdump-4.6.2/Makefile.in tcpdump-4.6.2.orig/Makefile.in
--- tcpdump-4.6.2/Makefile.in	2014-10-10 16:50:10.659103757 +1000
+++ tcpdump-4.6.2.orig/Makefile.in	2014-10-10 16:44:42.928944236 +1000
@@ -223,7 +223,7 @@
 
 # We would like to say "OBJ = $(SRC:.c=.o)" but Ultrix's make cannot
 # hack the extra indirection
-OBJ =	$(CSRC:.c=.o) $(GENSRC:.c=.o) $(LIBNETDISSECT_OBJ)
+OBJ =	$(CSRC:.c=.o) $(GENSRC:.c=.o)
 HDR = \
 	addrtoname.h \
 	af.h \
@@ -284,7 +284,7 @@
 
 TAGFILES = $(SRC) $(HDR) $(TAGHDR)
 
-CLEANFILES = $(PROG) $(OBJ) $(GENSRC)
+CLEANFILES = $(PROG) $(OBJ) $(LIBNETDISSECT_OBJ) $(GENSRC)
 
 EXTRA_DIST = \
 	CHANGES \
@@ -353,9 +353,9 @@
 
 all: $(PROG) $(LIBNETDISSECT)
 
-$(PROG): $(OBJ) @V_PCAPDEP@
+$(PROG): $(OBJ) $(LIBNETDISSECT) @V_PCAPDEP@
 	@rm -f $@
-	$(CC) $(FULL_CFLAGS) $(LDFLAGS) -o $@ $(OBJ) $(LIBS)
+	$(CC) $(FULL_CFLAGS) $(LDFLAGS) -o $@ $(OBJ) $(LIBNETDISSECT) $(LIBS)
 
 $(LIBNETDISSECT): $(LIBNETDISSECT_OBJ)
 	@rm -f $@
diff -u tcpdump-4.6.2/print-ether.c tcpdump-4.6.2.orig/print-ether.c
--- tcpdump-4.6.2/print-ether.c	2014-10-10 16:50:10.649098179 +1000
+++ tcpdump-4.6.2.orig/print-ether.c	2014-10-10 16:44:42.918961621 +1000
@@ -386,9 +386,11 @@
 		return (1);
 #endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_RRCP:
 	        rrcp_print(ndo, p - 14 , length + 14);
 		return (1);
+#endif
 
 #if !defined(EMBED) || defined(CONFIG_PPP) || defined(CONFIG_PPP_MODULE)
 	case ETHERTYPE_PPP:
@@ -399,9 +401,11 @@
 		return (1);
 #endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_MPCP:
 	        mpcp_print(ndo, p, length);
 		return (1);
+#endif
 
 #if !defined(EMBED)
 	case ETHERTYPE_SLOW:
@@ -409,14 +413,18 @@
 		return (1);
 #endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_CFM:
 	case ETHERTYPE_CFM_OLD:
 		cfm_print(ndo, p, length);
 		return (1);
+#endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_LLDP:
 		lldp_print(ndo, p, length);
 		return (1);
+#endif
 
         case ETHERTYPE_LOOPBACK:
 		loopback_print(ndo, p, length);
@@ -429,26 +437,36 @@
 		return (1);
 #endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_TIPC:
 		tipc_print(ndo, p, length, caplen);
 		return (1);
+#endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_MS_NLB_HB:
 		msnlb_print(ndo, p);
 		return (1);
+#endif
 
+#if !defined(EMBED)
         case ETHERTYPE_GEONET_OLD:
         case ETHERTYPE_GEONET:
                 geonet_print(ndo, p-14, p, length);
                 return (1);
+#endif
 
+#if !defined(EMBED)
         case ETHERTYPE_CALM_FAST:
                 calm_fast_print(ndo, p-14, p, length);
                 return (1);
+#endif
 
+#if !defined(EMBED)
 	case ETHERTYPE_AOE:
 		aoe_print(ndo, p, length);
 		return (1);
+#endif
 
 	case ETHERTYPE_BRIDGE:
 		ether_print(ndo, p, length, length, NULL, NULL);
diff -u tcpdump-4.6.2/print-forces.c tcpdump-4.6.2.orig/print-forces.c
--- tcpdump-4.6.2/print-forces.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2.orig/print-forces.c	2014-10-10 16:44:42.918961621 +1000
@@ -19,6 +19,8 @@
 #include "config.h"
 #endif
 
+#ifndef EMBED
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -1753,6 +1755,9 @@
 trunc:
 	ND_PRINT((ndo, "%s", tstr));
 }
+
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -u tcpdump-4.6.2/print-ip6.c tcpdump-4.6.2.orig/print-ip6.c
--- tcpdump-4.6.2/print-ip6.c	2014-10-10 16:50:10.649098179 +1000
+++ tcpdump-4.6.2.orig/print-ip6.c	2014-10-10 16:44:42.908963793 +1000
@@ -168,6 +168,7 @@
 			fragmented = 1;
 			break;
 
+#if !defined(EMBED)
 		case IPPROTO_MOBILITY_OLD:
 		case IPPROTO_MOBILITY:
 			/*
@@ -183,6 +184,7 @@
 			advance = mobility_print(ndo, cp, (const u_char *)ip6);
 			nh = *cp;
 			return;
+#endif
 		case IPPROTO_ROUTING:
 			advance = rt6_print(ndo, cp, (const u_char *)ip6);
 			nh = *cp;
@@ -192,9 +194,11 @@
 			sctp_print(ndo, cp, (const u_char *)ip6, len);
 			return;
 #endif
+#if !defined(EMBED)
 		case IPPROTO_DCCP:
 			dccp_print(ndo, cp, (const u_char *)ip6, len);
 			return;
+#endif
 		case IPPROTO_TCP:
 			tcp_print(ndo, cp, len, (const u_char *)ip6, fragmented);
 			return;
diff -u tcpdump-4.6.2/print-lldp.c tcpdump-4.6.2.orig/print-lldp.c
--- tcpdump-4.6.2/print-lldp.c	2014-07-19 23:07:43.000000000 +1000
+++ tcpdump-4.6.2.orig/print-lldp.c	2014-10-10 16:44:42.918961621 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#ifndef EMBED
+
 #include <tcpdump-stdinc.h>
 
 #include <stdio.h>
@@ -1605,6 +1607,8 @@
     ND_PRINT((ndo, "\n\t[|LLDP]"));
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -u tcpdump-4.6.2/print-openflow-1.0.c tcpdump-4.6.2.orig/print-openflow-1.0.c
--- tcpdump-4.6.2/print-openflow-1.0.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2.orig/print-openflow-1.0.c	2014-10-10 16:44:42.928944236 +1000
@@ -47,6 +47,8 @@
 #include "config.h"
 #endif
 
+#ifndef EMBED
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -2076,3 +2078,5 @@
 	ND_PRINT((ndo, "%s", tstr));
 	return ep;
 }
+
+#endif
diff -u tcpdump-4.6.2/print-openflow.c tcpdump-4.6.2.orig/print-openflow.c
--- tcpdump-4.6.2/print-openflow.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2.orig/print-openflow.c	2014-10-10 16:44:42.918961621 +1000
@@ -35,6 +35,8 @@
 #include "config.h"
 #endif
 
+#ifndef EMBED
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -117,3 +119,5 @@
 	while (cp < ep)
 		cp = of_header_body_print(ndo, cp, ep);
 }
+
+#endif
diff -u tcpdump-4.6.2/print-sflow.c tcpdump-4.6.2.orig/print-sflow.c
--- tcpdump-4.6.2/print-sflow.c	2014-07-03 08:12:01.000000000 +1000
+++ tcpdump-4.6.2.orig/print-sflow.c	2014-10-10 16:44:42.928944236 +1000
@@ -24,6 +24,8 @@
 #include "config.h"
 #endif
 
+#ifndef EMBED
+
 #include <tcpdump-stdinc.h>
 
 #include "interface.h"
@@ -934,6 +936,8 @@
     ND_PRINT((ndo, "[|SFLOW]"));
 }
 
+#endif
+
 /*
  * Local Variables:
  * c-style: whitesmith
diff -u tcpdump-4.6.2/print-udp.c tcpdump-4.6.2.orig/print-udp.c
--- tcpdump-4.6.2/print-udp.c	2014-10-10 16:50:10.659103757 +1000
+++ tcpdump-4.6.2.orig/print-udp.c	2014-10-10 16:44:42.908963793 +1000
@@ -677,14 +677,20 @@
 				 (u_char *) ip);
 #endif
 #ifdef INET6
+#if !defined(EMBED)
 		else if (ISPORT(RIPNG_PORT))
 			ripng_print(ndo, (const u_char *)(up + 1), length);
+#endif
 		else if (ISPORT(DHCP6_SERV_PORT) || ISPORT(DHCP6_CLI_PORT))
 			dhcp6_print(ndo, (const u_char *)(up + 1), length);
+#if !defined(EMBED)
 		else if (ISPORT(AHCP_PORT))
 			ahcp_print(ndo, (const u_char *)(up + 1), length);
+#endif
+#if !defined(EMBED)
 		else if (ISPORT(BABEL_PORT) || ISPORT(BABEL_PORT_OLD))
 			babel_print(ndo, (const u_char *)(up + 1), length);
+#endif
 #endif /*INET6*/
 		/*
 		 * Kludge in test for whiteboard packets.

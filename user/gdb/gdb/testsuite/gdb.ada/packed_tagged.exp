# Copyright 2008 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if $tracelevel then {
    strace $tracelevel
}

load_lib "ada.exp"

set testdir "packed_tagged"
set testfile "${testdir}/comp_bug"
set srcfile ${srcdir}/${subdir}/${testfile}.adb
set binfile ${objdir}/${subdir}/${testfile}

file mkdir ${objdir}/${subdir}/${testdir}
if {[gdb_compile_ada "${srcfile}" "${binfile}" executable [list debug]] != "" } {
  return -1
}

# A convenience function that joins all the arguments together,
# with a regexp that matches zero-or-more end of lines in between
# each argument.  This function is ideal to write the expected output
# of a GDB command that generates more than a couple of lines, as
# this allows us to write each line as a separate string, which is
# easier to read by a human being.

proc multi_line { args } {
    return [join $args "\[\r\n\]*"]
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

set bp_location [gdb_get_line_number "STOP" ${testdir}/comp_bug.adb]
runto "comp_bug.adb:$bp_location"

gdb_test "print x" \
         "\\(exists => true, value => 10\\)" \
         "print x"

gdb_test "ptype x" \
         [multi_line "type = record" \
                     "    exists: range false \\.\\. true;" \
                     "    case exists is" \
                     "        when true =>" \
                     "            value: range 0 \\.\\. 255;" \
                     "        when others => null;" \
                     "    end case;" \
                     "end record" ] \
         "ptype x"


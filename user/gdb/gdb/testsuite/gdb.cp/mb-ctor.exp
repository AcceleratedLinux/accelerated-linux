# Copyright 2007, 2008 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test that breakpoints on C++ constructors work, despite the
# fact that gcc generates several versions of constructor function.

if $tracelevel then {
    strace $tracelevel
}

if { [skip_cplus_tests] } { continue }

set prms_id 0
set bug_id 0

set testfile "mb-ctor"
set srcfile ${testfile}.cc
set binfile ${objdir}/${subdir}/${testfile}

if [get_compiler_info ${binfile} "c++"] {
    return -1
}

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug c++}] != "" } {
     untested mb-ctor.exp
     return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

# Set a breakpoint with multiple locations
# and a condition.

gdb_test "break 'Derived::Derived(int)'" \
    "Breakpoint.*at.* file .*$srcfile, line.*\\(2 locations\\).*" \
    "set-breakpoint at ctor"

gdb_test "break 'Derived::~Derived()'" \
    "Breakpoint.*at.* file .*$srcfile, line.*\\(2 locations\\).*" \
    "set-breakpoint at ctor"

gdb_run_cmd
gdb_expect {
    -re "Breakpoint \[0-9\]+,.*Derived.*i=7.*$gdb_prompt $" {
	pass "run to breakpoint"
    }
    -re "$gdb_prompt $" {
	fail "run to breakpoint"
    }
    timeout {
	fail "run to breakpoint (timeout)"
    }
}

gdb_test "continue" \
    ".*Breakpoint.*Derived.*i=15.*" \
    "run to breakpoint 2"

gdb_test "continue" \
    ".*Breakpoint.*~Derived.*" \
    "run to breakpoint 3"

gdb_test "continue" \
    ".*Breakpoint.*~Derived.*" \
    "run to breakpoint 4"

gdb_test "continue" \
    ".*exited normally.*" \
    "run to exit"




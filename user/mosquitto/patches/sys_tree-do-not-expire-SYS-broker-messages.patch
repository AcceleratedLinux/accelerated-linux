From f3eaf047f3c96fa02ca203f0f4037ac0fe5064a1 Mon Sep 17 00:00:00 2001
From: "Sreeves, Francis" <francis.sreeves@digi.com>
Date: Wed, 12 Oct 2022 16:38:02 +0100
Subject: [PATCH] sys_tree: do not expire $SYS/broker messages

Messages in the $SYS/broker status hierarchy (with the exception of
$SYS/broker/version) were being published with an arbitrary
message-expiry-interval of 60 secs. Prior to the following mosquitto
commit:

    commit ca3782b38d632cb0e00045c9d193e54315b9cadb
    Author: Roger A. Light <roger@atchoo.org>
    Date:   Tue Jan 22 17:51:57 2019 +0000

such messages were not set to expire. The automatic deletion of these
retained messages after 60 secs can cause difficulties with clients
wanting to query the MQTT broker for status and statistics because
messages are published to clients only when their values change, which
means the client could be waiting around for a long time to obtain a
value from a topic.

In a mosquitto forum posting, here:

    https://www.eclipse.org/lists/mosquitto-dev/msg02797.html

in response to a user that encountered such difficulties, primary
mosquitto committer Roger Light admitted:

    It seems like removing the 60 second expiry is the best plan here,
    it was an attempt at only a minor optimisation anyway.

This patch removes the expiry timeout so that $SYS/broker messages are
not deleted and so always available to subscribing clients.
---
 src/sys_tree.c | 55 +++++++++++++++++++++++++-------------------------
 1 file changed, 28 insertions(+), 27 deletions(-)

diff --git a/src/sys_tree.c b/src/sys_tree.c
index fd33921..49ab7c9 100644
--- a/src/sys_tree.c
+++ b/src/sys_tree.c
@@ -31,6 +31,7 @@ Contributors:
 #define BUFLEN 100
 
 #define SYS_TREE_QOS 2
+#define SYS_TREE_EXPIRY 0
 
 uint64_t g_bytes_received = 0;
 uint64_t g_bytes_sent = 0;
@@ -76,31 +77,31 @@ static void sys_tree__update_clients(char *buf)
 	if(client_count != count_total){
 		client_count = count_total;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%d", client_count);
-		db__messages_easy_queue(NULL, "$SYS/broker/clients/total", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/clients/total", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 
 		if(client_count > client_max){
 			client_max = client_count;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%d", client_max);
-			db__messages_easy_queue(NULL, "$SYS/broker/clients/maximum", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/clients/maximum", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 	}
 
 	if(disconnected_count != count_total-count_by_sock){
 		disconnected_count = count_total-count_by_sock;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%d", disconnected_count);
-		db__messages_easy_queue(NULL, "$SYS/broker/clients/inactive", SYS_TREE_QOS, len, buf, 1, 60, NULL);
-		db__messages_easy_queue(NULL, "$SYS/broker/clients/disconnected", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/clients/inactive", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/clients/disconnected", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 	}
 	if(connected_count != count_by_sock){
 		connected_count = count_by_sock;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%d", connected_count);
-		db__messages_easy_queue(NULL, "$SYS/broker/clients/active", SYS_TREE_QOS, len, buf, 1, 60, NULL);
-		db__messages_easy_queue(NULL, "$SYS/broker/clients/connected", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/clients/active", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/clients/connected", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 	}
 	if(g_clients_expired != clients_expired){
 		clients_expired = g_clients_expired;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%d", clients_expired);
-		db__messages_easy_queue(NULL, "$SYS/broker/clients/expired", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/clients/expired", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 	}
 }
 
@@ -116,13 +117,13 @@ static void sys_tree__update_memory(char *buf)
 	if(current_heap != value_ul){
 		current_heap = value_ul;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%lu", current_heap);
-		db__messages_easy_queue(NULL, "$SYS/broker/heap/current", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/heap/current", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 	}
 	value_ul =mosquitto__max_memory_used();
 	if(max_heap != value_ul){
 		max_heap = value_ul;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%lu", max_heap);
-		db__messages_easy_queue(NULL, "$SYS/broker/heap/maximum", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/heap/maximum", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 	}
 }
 #endif
@@ -135,12 +136,12 @@ static void calc_load(char *buf, const char *topic, bool initial, double exponen
 	if (initial) {
 		new_value = *current;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%.2f", new_value);
-		db__messages_easy_queue(NULL, topic, SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, topic, SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 	} else {
 		new_value = interval + exponent*((*current) - interval);
 		if(fabs(new_value - (*current)) >= 0.01){
 			len = (uint32_t)snprintf(buf, BUFLEN, "%.2f", new_value);
-			db__messages_easy_queue(NULL, topic, SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, topic, SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 	}
 	(*current) = new_value;
@@ -218,7 +219,7 @@ void sys_tree__update(int interval, time_t start_time)
 	if(interval && db.now_s - interval > last_update){
 		uptime = db.now_s - start_time;
 		len = (uint32_t)snprintf(buf, BUFLEN, "%d seconds", (int)uptime);
-		db__messages_easy_queue(NULL, "$SYS/broker/uptime", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+		db__messages_easy_queue(NULL, "$SYS/broker/uptime", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 
 		sys_tree__update_clients(buf);
 		initial_publish = false;
@@ -287,32 +288,32 @@ void sys_tree__update(int interval, time_t start_time)
 		if(db.msg_store_count != msg_store_count){
 			msg_store_count = db.msg_store_count;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%d", msg_store_count);
-			db__messages_easy_queue(NULL, "$SYS/broker/messages/stored", SYS_TREE_QOS, len, buf, 1, 60, NULL);
-			db__messages_easy_queue(NULL, "$SYS/broker/store/messages/count", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/messages/stored", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/store/messages/count", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if (db.msg_store_bytes != msg_store_bytes){
 			msg_store_bytes = db.msg_store_bytes;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%lu", msg_store_bytes);
-			db__messages_easy_queue(NULL, "$SYS/broker/store/messages/bytes", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/store/messages/bytes", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(db.subscription_count != subscription_count){
 			subscription_count = db.subscription_count;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%d", subscription_count);
-			db__messages_easy_queue(NULL, "$SYS/broker/subscriptions/count", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/subscriptions/count", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(db.shared_subscription_count != shared_subscription_count){
 			shared_subscription_count = db.shared_subscription_count;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%d", shared_subscription_count);
-			db__messages_easy_queue(NULL, "$SYS/broker/shared_subscriptions/count", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/shared_subscriptions/count", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(db.retained_count != retained_count){
 			retained_count = db.retained_count;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%d", retained_count);
-			db__messages_easy_queue(NULL, "$SYS/broker/retained messages/count", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/retained messages/count", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 #ifdef REAL_WITH_MEMORY_TRACKING
@@ -322,55 +323,55 @@ void sys_tree__update(int interval, time_t start_time)
 		if(msgs_received != g_msgs_received){
 			msgs_received = g_msgs_received;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%lu", msgs_received);
-			db__messages_easy_queue(NULL, "$SYS/broker/messages/received", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/messages/received", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(msgs_sent != g_msgs_sent){
 			msgs_sent = g_msgs_sent;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%lu", msgs_sent);
-			db__messages_easy_queue(NULL, "$SYS/broker/messages/sent", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/messages/sent", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(publish_dropped != g_msgs_dropped){
 			publish_dropped = g_msgs_dropped;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%lu", publish_dropped);
-			db__messages_easy_queue(NULL, "$SYS/broker/publish/messages/dropped", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/publish/messages/dropped", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(pub_msgs_received != g_pub_msgs_received){
 			pub_msgs_received = g_pub_msgs_received;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%lu", pub_msgs_received);
-			db__messages_easy_queue(NULL, "$SYS/broker/publish/messages/received", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/publish/messages/received", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(pub_msgs_sent != g_pub_msgs_sent){
 			pub_msgs_sent = g_pub_msgs_sent;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%lu", pub_msgs_sent);
-			db__messages_easy_queue(NULL, "$SYS/broker/publish/messages/sent", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/publish/messages/sent", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(bytes_received != g_bytes_received){
 			bytes_received = g_bytes_received;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%llu", bytes_received);
-			db__messages_easy_queue(NULL, "$SYS/broker/bytes/received", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/bytes/received", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(bytes_sent != g_bytes_sent){
 			bytes_sent = g_bytes_sent;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%llu", bytes_sent);
-			db__messages_easy_queue(NULL, "$SYS/broker/bytes/sent", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/bytes/sent", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(pub_bytes_received != g_pub_bytes_received){
 			pub_bytes_received = g_pub_bytes_received;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%llu", pub_bytes_received);
-			db__messages_easy_queue(NULL, "$SYS/broker/publish/bytes/received", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/publish/bytes/received", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		if(pub_bytes_sent != g_pub_bytes_sent){
 			pub_bytes_sent = g_pub_bytes_sent;
 			len = (uint32_t)snprintf(buf, BUFLEN, "%llu", pub_bytes_sent);
-			db__messages_easy_queue(NULL, "$SYS/broker/publish/bytes/sent", SYS_TREE_QOS, len, buf, 1, 60, NULL);
+			db__messages_easy_queue(NULL, "$SYS/broker/publish/bytes/sent", SYS_TREE_QOS, len, buf, 1, SYS_TREE_EXPIRY, NULL);
 		}
 
 		last_update = db.now_s;
-- 
2.17.1


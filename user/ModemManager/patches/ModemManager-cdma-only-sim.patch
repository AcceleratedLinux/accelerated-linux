This patch fixes problems we have with ModemManager's EVDO-CDMA capability.
It stems from the fact that a SIM is not required for CDMA.
However, we only deal with modems with SIMs.

The problems:
1. ModemManager doesn't check for a SIM in CDMA-only modems.
2. ModemManager sets CDMA mode for 3GPP/CDMA modems with no SIM, because it
   assumes that has the best chance of working.
3. ModemManager doesn't fail SIM-less CDMA-mode modems because it thinks they
   will still work. In this case, a SIM is created with unknown IMSI, ICCID,
   etc.

Fixing Problem 1 is necessary for an external USB modem (not sure which) that
is CDMA-only but has a SIM that is used.

Fixing Problems 2 & 3 is necessary to prevent ghost SIMs in e.g. EVDO-compatible
MC7354 (SKU 1102552) modems.

diff -ru a/src/mm-iface-modem.c b/src/mm-iface-modem.c
--- a/src/mm-iface-modem.c	2017-07-13 14:47:31.146749190 +1000
+++ b/src/mm-iface-modem.c	2017-07-13 14:51:57.732004491 +1000
@@ -3018,18 +3018,12 @@
             g_error_matches (error,
                              MM_MOBILE_EQUIPMENT_ERROR,
                              MM_MOBILE_EQUIPMENT_ERROR_SIM_WRONG)) {
-            /* SIM errors are only critical in 3GPP-only devices */
-            if (!mm_iface_modem_is_cdma (self)) {
-                ctx->saved_error = error;
-                ctx->step = UPDATE_LOCK_INFO_CONTEXT_STEP_LAST;
-                update_lock_info_context_step (ctx);
-                return;
-            }
+            /* SIM errors are critical */
+            ctx->saved_error = error;
+            ctx->step = UPDATE_LOCK_INFO_CONTEXT_STEP_LAST;
+            update_lock_info_context_step (ctx);
+            return;
 
-            /* For mixed 3GPP+3GPP2 devices, skip SIM errors */
-            mm_dbg ("Skipping SIM error in 3GPP2-capable device, assuming no lock is needed");
-            g_error_free (error);
-            ctx->lock = MM_MODEM_LOCK_NONE;
         } else {
             mm_dbg ("Couldn't check if unlock required: '%s'", error->message);
             g_error_free (error);
@@ -3092,7 +3086,7 @@
         /* If we get that no lock is required, run the after SIM unlock step
          * in order to wait for the SIM to get ready.  Skip waiting on
          * CDMA-only modems where we don't support a SIM. */
-        if (!mm_iface_modem_is_cdma_only (ctx->self) &&
+        if (/*!mm_iface_modem_is_cdma_only (ctx->self) &&*/
             (ctx->lock == MM_MODEM_LOCK_NONE ||
              ctx->lock == MM_MODEM_LOCK_SIM_PIN2 ||
              ctx->lock == MM_MODEM_LOCK_SIM_PUK2)) {
@@ -3863,16 +3857,7 @@
             g_error_matches (error,
                              MM_MOBILE_EQUIPMENT_ERROR,
                              MM_MOBILE_EQUIPMENT_ERROR_SIM_WRONG)) {
-            MMModemCapability caps;
-
-            mm_dbg ("Multimode device without SIM, no 3GPP capabilities");
-            caps = mm_gdbus_modem_get_current_capabilities (ctx->skeleton);
-            caps &= ~MM_MODEM_CAPABILITY_GSM_UMTS;
-            caps &= ~MM_MODEM_CAPABILITY_LTE;
-
-            /* CDMA-EVDO must still be around */
-            g_assert (caps & MM_MODEM_CAPABILITY_CDMA_EVDO);
-            mm_gdbus_modem_set_current_capabilities (ctx->skeleton, caps);
+            mm_gdbus_modem_set_current_capabilities (ctx->skeleton, MM_MODEM_CAPABILITY_NONE);
         }
 
         g_error_free (error);
@@ -3906,18 +3891,6 @@
      * exposed in DBus yet. */
     mm_gdbus_modem_set_current_capabilities (ctx->skeleton, caps);
 
-    /* If the device is a multimode device (3GPP+3GPP2) check whether we have a
-     * SIM or not. */
-    if (caps & MM_MODEM_CAPABILITY_CDMA_EVDO &&
-        (caps & MM_MODEM_CAPABILITY_GSM_UMTS || caps & MM_MODEM_CAPABILITY_LTE)) {
-        mm_dbg ("Checking if multimode device has a SIM...");
-        internal_load_unlock_required (
-            ctx->self,
-            (GAsyncReadyCallback)current_capabilities_internal_load_unlock_required_ready,
-            ctx);
-        return;
-    }
-
     ctx->step++;
     interface_initialization_step (ctx);
 }
@@ -4559,7 +4532,7 @@
     case INITIALIZATION_STEP_SIM:
         /* If the modem doesn't need any SIM (not implemented by plugin, or not
          * needed in CDMA-only modems) */
-        if (!mm_iface_modem_is_cdma_only (ctx->self) &&
+        if (/*!mm_iface_modem_is_cdma_only (ctx->self) &&*/
             MM_IFACE_MODEM_GET_INTERFACE (ctx->self)->create_sim &&
             MM_IFACE_MODEM_GET_INTERFACE (ctx->self)->create_sim_finish) {
             MMBaseSim *sim = NULL;

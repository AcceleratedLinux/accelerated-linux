From: David McCullough <david.mccullough@accelecon.com>
Date: Wed, 3 Jul 2013 21:30:13 +1000
Subject: novatel: fix sscanf format for uClibc

uClibc scanf follows the standard more than glibc.
scanf("%20c" ...) matches 20 chars on uClibc but up to and including 20
chars in glibc.  The man page favours uClibc IMO.
---
 plugins/novatel/mm-sim-novatel-lte.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/plugins/novatel/mm-sim-novatel-lte.c b/plugins/novatel/mm-sim-novatel-lte.c
index 676db569..6ceea77a 100644
--- a/plugins/novatel/mm-sim-novatel-lte.c
+++ b/plugins/novatel/mm-sim-novatel-lte.c
@@ -65,8 +65,8 @@ imsi_read_ready (MMBaseModem *modem,
     str = mm_strip_tag (response, "+CRSM:");
 
     /* With or without quotes... */
-    if (sscanf (str, "%d,%d,\"%18c\"", &sw1, &sw2, (char *) &buf) != 3 &&
-        sscanf (str, "%d,%d,%18c", &sw1, &sw2, (char *) &buf) != 3) {
+    if (sscanf (str, "%d,%d,\"%18s\"", &sw1, &sw2, (char *) &buf) != 3 &&
+        sscanf (str, "%d,%d,%18s", &sw1, &sw2, (char *) &buf) != 3) {
         g_task_return_new_error (task,
                                  MM_CORE_ERROR,
                                  MM_CORE_ERROR_FAILED,

From: Samuel Brian <samuel.brian@digi.com>
Date: Wed, 16 Oct 2019 16:45:19 +1000
Subject: at: switch primary AT port after max timeouts

A suspected issue with Telit LM940 firmware is causing the serial port
that ModemManager is using for AT commands to become unresponsive, although
QMI and data traffic continues uninterrupted.

ModemManager's previous behaviour was to invalidate the modem after a certain
number of AT commands timing out (default 10 attempts). This is not helpful
as ModemManager will ignore the modem from then on.

Now, instead of invalidating the modem we try to recover by switching the
primary and secondary AT command serial ports so that ModemManager starts
sending AT commands on the previously-secondary port that may still be
functioning.
In the case of the LM940 this is a particularly good workaround because
using the secondary serial port unexplainably makes the primary serial port
start functioning again.

However, in a scenario where neither serial port works we have no course
of action, not even rebooting the modem because that is performed with an
AT command. So the primary/secondary will continue to switch indefinitely --
but at least MBIM or QMI have a chance to continue working.
---
 src/mm-base-modem.c | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/src/mm-base-modem.c b/src/mm-base-modem.c
index 05ae5d9b..6d8829f0 100644
--- a/src/mm-base-modem.c
+++ b/src/mm-base-modem.c
@@ -135,12 +135,18 @@ serial_port_timed_out_cb (MMPortSerial *port,
                           guint n_consecutive_timeouts,
                           MMBaseModem *self)
 {
-    /* If reached the maximum number of timeouts, invalidate modem */
-    if (n_consecutive_timeouts >= self->priv->max_timeouts) {
-        mm_obj_err (self, "port %s timed out %u consecutive times, marking modem as invalid",
-                    mm_port_get_device (MM_PORT (port)),
-                    n_consecutive_timeouts);
-        g_cancellable_cancel (self->priv->cancellable);
+    /* If reached the maximum number of timeouts, try a different AT port */
+    if (n_consecutive_timeouts >= self->priv->max_timeouts
+            && MM_IS_PORT_SERIAL_AT (port)
+            && MM_PORT_SERIAL_AT (port) == self->priv->primary
+            && self->priv->secondary) {
+        MMPortSerialAt *tmp;
+        mm_obj_err (self, "port %s timed out %u consecutive times, switching primary/secondary AT command ports",
+                   mm_port_get_device (MM_PORT (port)),
+                   n_consecutive_timeouts);
+        tmp = self->priv->primary;
+        self->priv->primary = self->priv->secondary;
+        self->priv->secondary = tmp;
         return;
     }
 

diff -Naur busybox-1.31.0.org/networking/arping.c busybox-1.31.0/networking/arping.c
--- busybox-1.31.0.org/networking/arping.c	2018-12-31 01:14:20.000000000 +1000
+++ busybox-1.31.0/networking/arping.c	2019-07-02 14:33:07.783106403 +1000
@@ -31,6 +31,7 @@
 //NB: in iputils-s20160308, iface is mandatory, no default
 //usage:     "\n	-I IFACE	Interface to use (default eth0)"
 //usage:     "\n	-s SRC_IP	Sender IP address"
+//usage:     "\n	-S SRC_IP	Sender IP address (does not check address exists)"
 //usage:     "\n	DST_IP		Target IP address"
 
 #include <arpa/inet.h>
@@ -54,13 +55,13 @@
 	UNICASTING    = 1 << 6,
 	TIMEOUT       = 1 << 7,
 };
-#define GETOPT32(str_timeout, device, source) \
+#define GETOPT32(str_timeout, device, source, source_nobind) \
 	getopt32(argv, "^" \
-		"UDAqfbc:+w:I:s:" \
+		"UDAqfbc:+w:I:s:S:" \
 		/* DAD also sets quit_on_reply, */ \
 		/* advert also sets unsolicited: */ \
 		"\0" "=1:Df:AU", \
-		&count, &str_timeout, &device, &source \
+		&count, &str_timeout, &device, &source, &source_nobind \
 	);
 
 struct globals {
@@ -297,6 +298,7 @@
 {
 	const char *device = "eth0";
 	char *source = NULL;
+	char *source_nobind = NULL;
 	char *target;
 	char *err_str;
 
@@ -312,7 +314,7 @@
 		unsigned opt;
 		char *str_timeout;
 
-		opt = GETOPT32(str_timeout, device, source);
+		opt = GETOPT32(str_timeout, device, source, source_nobind);
 		if (opt & TIMEOUT)
 			timeout_us = xatou_range(str_timeout, 0, INT_MAX/2000000) * 1000000 + 500000;
 	}
@@ -411,6 +413,10 @@
 	signal_SA_RESTART_empty_mask(SIGINT,  (void (*)(int))finish);
 	signal_SA_RESTART_empty_mask(SIGALRM, (void (*)(int))catcher);
 
+	if (source_nobind && !inet_aton(source_nobind, &src)) {
+		bb_error_msg_and_die("invalid non-binding source address %s", source_nobind);
+	}
+
 	/* Send the first packet, arm ALRM */
 	catcher();
 
